{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "_finder",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_defaultCurrency",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_defaultLiveness",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "defaultCurrency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "defaultLiveness",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "burnedBondPercentage",
          "type": "uint256"
        }
      ],
      "name": "AdminPropertiesSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "name": "AssertionDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "escalationManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expirationTime",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "AssertionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "disputed",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "settlementResolution",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "settleCaller",
          "type": "address"
        }
      ],
      "name": "AssertionSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "escalationManager",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "liveness",
          "type": "uint64"
        },
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        }
      ],
      "name": "assertTruth",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "claim",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        }
      ],
      "name": "assertTruthWithDefaults",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "assertions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "arbitrateViaEscalationManager",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "discardOracle",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "validateDisputers",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "assertingCaller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address"
            }
          ],
          "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
          "name": "escalationManagerSettings",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "asserter",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "assertionTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "settled",
          "type": "bool"
        },
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "expirationTime",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "settlementResolution",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "domainId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "bond",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "callbackRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnedBondPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cachedCurrencies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isWhitelisted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "finalFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "cachedIdentifiers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cachedOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultLiveness",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        }
      ],
      "name": "disputeAssertion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finder",
      "outputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertion",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "arbitrateViaEscalationManager",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "discardOracle",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "validateDisputers",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "assertingCaller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "escalationManager",
                  "type": "address"
                }
              ],
              "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
              "name": "escalationManagerSettings",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "assertionTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settled",
              "type": "bool"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            }
          ],
          "internalType": "struct OptimisticOracleV3Interface.Assertion",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertionResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "getMinimumBond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numericalTrue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_defaultCurrency",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_defaultLiveness",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "_burnedBondPercentage",
          "type": "uint256"
        }
      ],
      "name": "setAdminProperties",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "settleAndGetAssertionResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "settleAssertion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "stampAssertion",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "syncUmaParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1550:25031:51:-:0;;;2797:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;874:11:32;:18;;-1:-1:-1;;874:18:32;888:4;874:18;;;936:32:18;955:12;719:10:25;;640:96;955:12:18;936:18;:32::i;:::-;-1:-1:-1;;;;;2924:16:51;;;;2950:62;2969:16;2987;3005:6;2950:18;:62::i;:::-;2797:222;;;1550:25031;;2433:187:18;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:18;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:18;;;;;2573:40;;2525:6;;;;;;;2541:17;;2525:6;;2573:40;;;2496:124;2433:187;:::o;3496:622:51:-;1094:13:18;:11;:13::i;:::-;3695:4:51::1;3670:21;:29;;3662:70;;;::::0;-1:-1:-1;;;3662:70:51;;1007:2:76;3662:70:51::1;::::0;::::1;989:21:76::0;1046:2;1026:18;;;1019:30;1085;1065:18;;;1058:58;1133:18;;3662:70:51::1;;;;;;;;;3774:1;3750:21;:25;3742:65;;;::::0;-1:-1:-1;;;3742:65:51;;1364:2:76;3742:65:51::1;::::0;::::1;1346:21:76::0;1403:2;1383:18;;;1376:30;1442:29;1422:18;;;1415:57;1489:18;;3742:65:51::1;1162:351:76::0;3742:65:51::1;3817:20;:44:::0;;;3871:15:::1;:34:::0;;-1:-1:-1;;;;;3915:34:51;::::1;-1:-1:-1::0;;;3915:34:51::1;-1:-1:-1::0;;;;;;3915:34:51;;;-1:-1:-1;;;;;3871:34:51;::::1;3915::::0;::::1;::::0;;3959:59:::1;-1:-1:-1::0;;;3889:16:51;3959:13:::1;:59::i;:::-;4034:77;::::0;;-1:-1:-1;;;;;1752:32:76;;1734:51;;-1:-1:-1;;;;;1821:31:76;;1816:2;1801:18;;1794:59;1869:18;;;1862:34;;;4034:77:51::1;::::0;1722:2:76;1707:18;4034:77:51::1;;;;;;;3496:622:::0;;;:::o;1359:130:18:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:18;;;;;719:10:25;1422:23:18;1414:68;;;;-1:-1:-1;;;1414:68:18;;2109:2:76;1414:68:18;;;2091:21:76;;;2128:18;;;2121:30;2187:34;2167:18;;;2160:62;2239:18;;1414:68:18;1907:356:76;1414:68:18;1359:130::o;16922:453:51:-;17015:6;;:56;;-1:-1:-1;;;17015:56:51;;-1:-1:-1;;;17015:56:51;;;2414:25:76;-1:-1:-1;;;;;17015:31:51;;;;;;2387:18:76;;17015:56:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17000:12;:71;;-1:-1:-1;;;;;;17000:71:51;-1:-1:-1;;;;;17000:71:51;;;;;;;;;;17113:25;:23;:25::i;:::-;-1:-1:-1;;;;;17113:47:51;;17161:10;17113:59;;;;;;;;;;;;;2414:25:76;;2402:2;2387:18;;2268:177;17113:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17081:29;;;;:17;:29;;;;;:91;;-1:-1:-1;;17081:91:51;;;;;;;;;;17225:25;:23;:25::i;:::-;:49;;-1:-1:-1;;;17225:49:51;;-1:-1:-1;;;;;3169:32:76;;;17225:49:51;;;3151:51:76;17225:39:51;;;;;;;3124:18:76;;17225:49:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17182:26:51;;;;;;:16;:26;;;;;:92;;-1:-1:-1;;17182:92:51;;;;;;;;;;17322:11;:9;:11::i;:::-;:37;;-1:-1:-1;;;17322:37:51;;-1:-1:-1;;;;;3169:32:76;;;17322:37:51;;;3151:51:76;17322:27:51;;;;;;;3124:18:76;;17322:37:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;-1:-1:-1;;;;;17284:26:51;;;17322:46;17284:26;;;:16;:26;;;;;:35;;:84;-1:-1:-1;16922:453:51:o;21425:211::-;21559:6;;:69;;-1:-1:-1;;;21559:69:51;;21591:36;21559:69;;;2414:25:76;21483:28:51;;-1:-1:-1;;;;;21559:31:51;;;;2387:18:76;;21559:69:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21523:106;;21425:211;:::o;21155:187::-;21265:6;;:69;;-1:-1:-1;;;21265:69:51;;21297:36;21265:69;;;2414:25:76;21213:16:51;;-1:-1:-1;;;;;21265:31:51;;;;2387:18:76;;21265:69:51;2268:177:76;21700:155:51;21792:6;;:55;;-1:-1:-1;;;21792:55:51;;-1:-1:-1;;;21792:55:51;;;2414:25:76;21744:14:51;;-1:-1:-1;;;;;21792:31:51;;;;2387:18:76;;21792:55:51;2268:177:76;14:148;-1:-1:-1;;;;;106:31:76;;96:42;;86:70;;152:1;149;142:12;86:70;14:148;:::o;167:633::-;295:6;303;311;364:2;352:9;343:7;339:23;335:32;332:52;;;380:1;377;370:12;332:52;412:9;406:16;431:48;473:5;431:48;:::i;:::-;548:2;533:18;;527:25;498:5;;-1:-1:-1;561:50:76;527:25;561:50;:::i;:::-;682:2;667:18;;661:25;630:7;;-1:-1:-1;;;;;;717:32:76;;705:45;;695:73;;764:1;761;754:12;695:73;787:7;777:17;;;167:633;;;;;:::o;2450:268::-;2520:6;2573:2;2561:9;2552:7;2548:23;2544:32;2541:52;;;2589:1;2586;2579:12;2541:52;2621:9;2615:16;2640:48;2682:5;2640:48;:::i;:::-;2707:5;2450:268;-1:-1:-1;;;2450:268:76:o;2723:277::-;2790:6;2843:2;2831:9;2822:7;2818:23;2814:32;2811:52;;;2859:1;2856;2849:12;2811:52;2891:9;2885:16;2944:5;2937:13;2930:21;2923:5;2920:32;2910:60;;2966:1;2963;2956:12;3213:541;3310:6;3363:2;3351:9;3342:7;3338:23;3334:32;3331:52;;;3379:1;3376;3369:12;3331:52;3412:2;3406:9;3454:2;3442:15;;-1:-1:-1;;;;;3472:34:76;;3508:22;;;3469:62;3466:185;;;3573:10;3568:3;3564:20;3561:1;3554:31;3608:4;3605:1;3598:15;3636:4;3633:1;3626:15;3466:185;3667:2;3660:22;3706:16;;3691:32;;-1:-1:-1;3698:6:76;3213:541;-1:-1:-1;3213:541:76:o;:::-;1550:25031:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80638ea2f2ab116100de578063b9a3c84c11610097578063da03b36e11610071578063da03b36e14610646578063e39dfd7f14610655578063f2fde38b14610668578063fe4e19831461067b57600080fd5b8063b9a3c84c14610515578063d509b0171461053c578063d60715b51461055257600080fd5b80638ea2f2ab14610489578063a6a22b431461049c578063a7af2d0f146104af578063a8655785146104c2578063ac9650d8146104d5578063afedba4f146104f557600080fd5b8063530dd3921161014b578063715018a611610125578063715018a6146102a557806382762520146102ad57806388302884146102c05780638da5cb5b1461047357600080fd5b8063530dd3921461021b5780636457c9791461024e578063707621571461026157600080fd5b806308e7c3e61461019357806320402e1d146101af57806329cb924d146101da57806336b13af4146101e05780634124beef146101f35780634360af3d14610208575b600080fd5b61019c60055481565b6040519081526020015b60405180910390f35b6006546101c2906001600160a01b031681565b6040516001600160a01b0390911681526020016101a6565b4261019c565b61019c6101ee366004612b2a565b6106ad565b610206610201366004612bac565b610732565b005b61019c610216366004612bc5565b610af5565b61023e610229366004612bac565b60036020526000908152604090205460ff1681565b60405190151581526020016101a6565b61019c61025c366004612c66565b610b37565b61028e61026f366004612bc5565b6002602052600090815260409020805460019091015460ff9091169082565b6040805192151583526020830191909152016101a6565b610206611143565b6102066102bb366004612d56565b611157565b6104666102ce366004612bac565b6040805161022081018252600061018082018181526101a083018290526101c083018290526101e083018290526102008301829052825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250600090815260046020818152604092839020835161022081018552815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416968501969096526001600160401b03600160a01b808804821699860199909952600160e01b96879004831615156060860152600386015480851660808701529889041660a085015294909604909516151560c08201529281015460e08401526005810154918301919091526006810154610120830152600781015483166101408301526008015490911661016082015290565b6040516101a69190612dd6565b60005461010090046001600160a01b03166101c2565b61023e610497366004612bac565b6112aa565b6102066104aa366004612eb0565b6112e2565b6001546101c2906001600160a01b031681565b6102066104d0366004612eb0565b61157a565b6104e86104e3366004612ee0565b6117ee565b6040516101a69190612fa4565b610508610503366004612bac565b611945565b6040516101a69190613006565b6101c27f000000000000000000000000000000000000000000000000000000000000000081565b61019c6b082a6a68aa4a8bea8a4aaa8960a31b81565b61062e610560366004612bac565b600460208181526000928352604092839020835160a081018552815460ff808216151583526101008204811615159483019490945262010000810484161515958201959095526001600160a01b0363010000009095048516606082015260018201548516608082015260028201546003830154948301546005840154600685015460078601546008909601549498848116986001600160401b03600160a01b80880482169a600160e01b9889900481169a8486169a928504909316989093049092169594939290811691168c565b6040516101a69c9b9a99989796959493929190613019565b61019c670de0b6b3a764000081565b61023e610663366004612bac565b611950565b610206610676366004612bc5565b611ace565b60065461069590600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101a6565b600061072a84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506006548894509092508291506001600160401b03600160a01b820416906001600160a01b031661071381610af5565b6b082a6a68aa4a8bea8a4aaa8960a31b6000610b37565b949350505050565b61073a611b44565b6107496000805460ff19169055565b600081815260046020526040902060028101546001600160a01b03166107b15760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064015b60405180910390fd5b6002810154600160e01b900460ff161561080d5760405162461bcd60e51b815260206004820152601960248201527f417373657274696f6e20616c726561647920736574746c65640000000000000060448201526064016107a8565b60028101805460ff60e01b1916600160e01b17905560088101546001600160a01b031661092c57426003820154600160a01b90046001600160401b031611156108905760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08195e1c1a5c9959605a1b60448201526064016107a8565b60038101805460ff60e01b198116600160e01b17909155600282015460068301546108c8926001600160a01b03908116921690611b96565b6108d3826001611bfe565b6002810154604080516000815260016020820152338183015290516001600160a01b039092169184917ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a13919081900360600190a3610adf565b6005810154600282015460009161095591859190600160a01b90046001600160401b0316611d05565b8254909150610100900460ff161561097b5760038201805460ff60e01b1916905561099d565b60038201805460ff60e01b1916670de0b6b3a76400008314600160e01b021790555b6000670de0b6b3a764000082146109c15760088301546001600160a01b03166109d0565b60028301546001600160a01b03165b90506000670de0b6b3a764000084600601546005546109ef91906130b0565b6109f991906130e5565b905060008185600601546002610a0f91906130b0565b610a199190613107565b9050610a3b610a26611d88565b60038701546001600160a01b03169084611b96565b6003850154610a54906001600160a01b03168483611b96565b8454610100900460ff16610a7c576003850154610a7c908790600160e01b900460ff16611bfe565b60038501546040805160018152600160e01b90920460ff161515602083015233908201526001600160a01b0384169087907ff4fa324b13daeb4e1aae736c2553632ae0fb16fb31f2d4da8ac99fd056313a139060600160405180910390a3505050505b50610af26000805460ff19166001179055565b50565b6001600160a01b038116600090815260026020526040812060010154600554610b2682670de0b6b3a76400006130b0565b610b3091906130e5565b9392505050565b6000610b41611b44565b610b506000805460ff19169055565b42610b6a8b866001600160401b0384168a8a8e8e8b611e21565b91506001600160a01b038a16610bb75760405162461bcd60e51b8152602060048201526012602482015271041737365727465722063616e7420626520360741b60448201526064016107a8565b6000828152600460205260409020600201546001600160a01b031615610c1f5760405162461bcd60e51b815260206004820152601860248201527f417373657274696f6e20616c726561647920657869737473000000000000000060448201526064016107a8565b610c2884611e68565b610c6d5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b60448201526064016107a8565b610c7686611f21565b610cb95760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b60448201526064016107a8565b610cc286610af5565b851015610d075760405162461bcd60e51b8152602060048201526013602482015272426f6e6420616d6f756e7420746f6f206c6f7760681b60448201526064016107a8565b6040805161022081018252600061018082018181526101a083018290526101c08301829052336101e08401526001600160a01b038c81166102008501529083528d811660208401526001600160401b038516938301939093526060820152908716608082015260a08101610d7b898461311a565b6001600160401b031681526020016000151581526020018481526020018581526020018681526020018a6001600160a01b0316815260200160006001600160a01b03168152506004600084815260200190815260200160002060008201518160000160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505060208201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160146101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600201601c6101000a81548160ff02191690831515021790555060808201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160030160146101000a8154816001600160401b0302191690836001600160401b0316021790555060c082015181600301601c6101000a81548160ff02191690831515021790555060e08201518160040155610100820151816005015561012082015181600601556101408201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160080160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050600061101783612083565b8051909150156110615760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd08185b1b1bddd959605a1b60448201526064016107a8565b6000838152600460209081526040918290209083015191830151606090930151815462ffff001916620100009115159190910261ff00191617610100931515939093029290921760ff19169015151790556110c76001600160a01b038716333088612158565b838a6001600160a01b0316837fdb1513f0abeb57a364db56aa3eb52015cca5268f00fd67bc73aaf22bccab02b7868f8e8e338f8a611105919061311a565b8f8f60405161111b98979695949392919061313a565b60405180910390a4506111366000805460ff19166001179055565b9998505050505050505050565b61114b612190565b61115560006121f0565b565b61115f612190565b670de0b6b3a76400008111156111b75760405162461bcd60e51b815260206004820152601c60248201527f4275726e656420626f6e642070657263656e74616765203e203130300000000060448201526064016107a8565b600081116112075760405162461bcd60e51b815260206004820152601b60248201527f4275726e656420626f6e642070657263656e746167652069732030000000000060448201526064016107a8565b6005819055600680546001600160401b038416600160a01b026001600160e01b03199091166001600160a01b038616171790556112536b082a6a68aa4a8bea8a4aaa8960a31b8461157a565b604080516001600160a01b03851681526001600160401b03841660208201529081018290527fd0f09246d369018534c67fec6a6c3259c6f962ef82c5521c337ae0ccc104e4bd9060600160405180910390a1505050565b600081815260046020526040812060020154600160e01b900460ff166112d3576112d382610732565b6112dc82611950565b92915050565b6112ea611b44565b6112f96000805460ff19169055565b6001600160a01b0381166113455760405162461bcd60e51b8152602060048201526013602482015272044697370757465722063616e2774206265203606c1b60448201526064016107a8565b600082815260046020526040902060028101546001600160a01b03166113a85760405162461bcd60e51b8152602060048201526018602482015277105cdcd95c9d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60421b60448201526064016107a8565b60088101546001600160a01b0316156114035760405162461bcd60e51b815260206004820152601a60248201527f417373657274696f6e20616c726561647920646973707574656400000000000060448201526064016107a8565b426003820154600160a01b90046001600160401b03161161145d5760405162461bcd60e51b8152602060048201526014602482015273105cdcd95c9d1a5bdb881a5cc8195e1c1a5c995960621b60448201526064016107a8565b61146683612249565b6114a85760405162461bcd60e51b8152602060048201526013602482015272111a5cdc1d5d19481b9bdd08185b1b1bddd959606a1b60448201526064016107a8565b6008810180546001600160a01b0319166001600160a01b0384811691909117909155600682015460038301546114e392169033903090612158565b60058101546002820154611508918591600160a01b90046001600160401b0316612305565b6115118361237c565b8054610100900460ff161561152b5761152b836000611bfe565b6040516001600160a01b03831690339085907f60133788b013c89f2a3756dbc47e3484997b87bd7e0af98a7d70232032c1ce2b90600090a4506115766000805460ff19166001179055565b5050565b6040516302abf57960e61b8152654f7261636c6560d01b60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401602060405180830381865afa1580156115e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160b919061319c565b600180546001600160a01b0319166001600160a01b039290921691909117905561163361243f565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b815260040161166091815260200190565b602060405180830381865afa15801561167d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a191906131c9565b6000838152600360205260409020805460ff19169115159190911790556116c66124a4565b604051631d1d5b3960e11b81526001600160a01b0383811660048301529190911690633a3ab67290602401602060405180830381865afa15801561170e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173291906131c9565b6001600160a01b0382166000908152600260205260409020805460ff1916911515919091179055611761611d88565b604051635b97aadd60e01b81526001600160a01b0383811660048301529190911690635b97aadd90602401602060405180830381865afa1580156117a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cd91906131e4565b516001600160a01b0390911660009081526002602052604090206001015550565b6060816001600160401b0381111561180857611808612be2565b60405190808252806020026020018201604052801561183b57816020015b60608152602001906001900390816118265790505b50905060005b8281101561193e576000803086868581811061185f5761185f613225565b9050602002810190611871919061323b565b60405161187f929190613288565b600060405180830381855af49150503d80600081146118ba576040519150601f19603f3d011682016040523d82523d6000602084013e6118bf565b606091505b50915091508161190b576044815110156118d857600080fd5b600481019050808060200190518101906118f29190613298565b60405162461bcd60e51b81526004016107a89190613006565b8084848151811061191e5761191e613225565b6020026020010181905250505080806119369061330e565b915050611841565b5092915050565b60606112dc82612509565b6000818152600460208181526040808420815161022081018352815460ff80821615156101808401908152610100808404831615156101a0860152620100008404831615156101c08601526001600160a01b03630100000090940484166101e0860152600186015484166102008601529084526002850154808416978501979097526001600160401b03600160a01b808904821697860197909752600160e01b97889004831615156060860152600386015480851660808701529687041660a085015295909404909316151560c08201529381015460e085015260058101549284019290925260068201546101208401526007820154811661014084015260089091015416610160820181905215801590611a6d57508051602001515b15611a7b5750600092915050565b8060600151611ac45760405162461bcd60e51b8152602060048201526015602482015274105cdcd95c9d1a5bdb881b9bdd081cd95d1d1b1959605a1b60448201526064016107a8565b60c0015192915050565b611ad6612190565b6001600160a01b038116611b3b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107a8565b610af2816121f0565b60005460ff166111555760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107a8565b6040516001600160a01b038316602482015260448101829052611bf990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261258f565b505050565b600082815260046020526040902060078101546001909101546001600160a01b0391821691168115611c8d576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0383169063f1b156b290604401600060405180830381600087803b158015611c7457600080fd5b505af1158015611c88573d6000803e3d6000fd5b505050505b6001600160a01b03811615611cff576040516378d8ab5960e11b81526004810185905283151560248201526001600160a01b0382169063f1b156b290604401600060405180830381600087803b158015611ce657600080fd5b505af1158015611cfa573d6000803e3d6000fd5b505050505b50505050565b6000611d1084612661565b6001600160a01b031663719c6d568484611d2988612509565b6040518463ffffffff1660e01b8152600401611d4793929190613327565b602060405180830381865afa158015611d64573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072a9190613346565b6040516302abf57960e61b81526453746f726560d81b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611df8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1c919061319c565b905090565b6000888888888888888833604051602001611e449998979695949392919061335f565b60405160208183030381529060405280519060200120905098975050505050505050565b60008181526003602052604081205460ff1615611e8757506001919050565b611e8f61243f565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b8152600401611ebc91815260200190565b602060405180830381865afa158015611ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611efd91906131c9565b600092835260036020526040909220805460ff191692151592831790555060ff1690565b6001600160a01b03811660009081526002602052604081205460ff1615611f4a57506001919050565b611f526124a4565b604051631d1d5b3960e11b81526001600160a01b0384811660048301529190911690633a3ab67290602401602060405180830381865afa158015611f9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbe91906131c9565b6001600160a01b0383166000908152600260205260409020805460ff1916911515919091179055611fed611d88565b604051635b97aadd60e01b81526001600160a01b0384811660048301529190911690635b97aadd90602401602060405180830381865afa158015612035573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205991906131e4565b516001600160a01b0390921660009081526002602052604090206001810192909255505460ff1690565b6040805160808101825260008082526020808301829052828401829052606083018290528482526004905291909120600101546001600160a01b0316806120ef575050604080516080810182526000808252602082018190529181018290526060810191909152919050565b60405163a6b011a760e01b8152600481018490526001600160a01b0382169063a6b011a790602401608060405180830381865afa158015612134573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3091906133c7565b6040516001600160a01b0380851660248301528316604482015260648101829052611cff9085906323b872dd60e01b90608401611bc2565b6000546001600160a01b036101009091041633146111555760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107a8565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60008181526004602052604081205462010000900460ff1661226d57506001919050565b6000828152600460205260409020600101546001600160a01b0316806122965750600192915050565b604051636b915d9160e01b8152600481018490523360248201526001600160a01b03821690636b915d9190604401602060405180830381865afa1580156122e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3091906131c9565b61230e83612661565b6001600160a01b031663216666a4838361232787612509565b6040518463ffffffff1660e01b815260040161234593929190613327565b600060405180830381600087803b15801561235f57600080fd5b505af1158015612373573d6000803e3d6000fd5b50505050505050565b600081815260046020526040902060078101546001909101546001600160a01b039182169116811561240357604051633512293b60e21b8152600481018490526001600160a01b0383169063d448a4ec90602401600060405180830381600087803b1580156123ea57600080fd5b505af11580156123fe573d6000803e3d6000fd5b505050505b6001600160a01b03811615611bf957604051633512293b60e21b8152600481018490526001600160a01b0382169063d448a4ec90602401612345565b6040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611ddb565b6040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063aafd5e4090602401611ddb565b60606112dc61254b604051806020016040528060008152506040518060400160405280600b81526020016a185cdcd95c9d1a5bdb925960aa1b815250856126a9565b604080518082018252600a81526937b7a0b9b9b2b93a32b960b11b6020808301919091526000878152600490915291909120600201546001600160a01b03166126ef565b60006125e4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661270a9092919063ffffffff16565b805190915015611bf9578080602001905181019061260291906131c9565b611bf95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107a8565b60008181526004602052604081205460ff1615612698576000828152600460205260409020600101546001600160a01b03166112dc565b50506001546001600160a01b031690565b606060006126b78585612719565b905084816126c48561275b565b6040516020016126d693929190613443565b6040516020818303038152906040529150509392505050565b606060006126fd8585612719565b905084816126c48561279c565b606061072a84846000856127f3565b81516060901561274a57816040516020016127349190613486565b60405160208183030381529060405290506112dc565b8160405160200161273491906134ba565b606061276a608083901c6128ce565b612773836128ce565b6040805160208101939093528201526060015b6040516020818303038152906040529050919050565b60606127b46001600160801b03602084901c166128ce565b6127cf8360601b6bffffffffffffffffffffffff19166128ce565b6040516020016127869291909182526001600160c01b031916602082015260280190565b6060824710156128545760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107a8565b600080866001600160a01b0316858760405161287091906134df565b60006040518083038185875af1925050503d80600081146128ad576040519150601f19603f3d011682016040523d82523d6000602084013e6128b2565b606091505b50915091506128c387838387612a67565b979650505050505050565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f080808080808080808080808080808080808080808080808080808080808080816816129e9576129e96130cf565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612ad6578251600003612acf576001600160a01b0385163b612acf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107a8565b508161072a565b61072a8383815115612aeb5781518083602001fd5b8060405162461bcd60e51b81526004016107a89190613006565b6001600160a01b0381168114610af257600080fd5b8035612b2581612b05565b919050565b600080600060408486031215612b3f57600080fd5b83356001600160401b0380821115612b5657600080fd5b818601915086601f830112612b6a57600080fd5b813581811115612b7957600080fd5b876020828501011115612b8b57600080fd5b60209283019550935050840135612ba181612b05565b809150509250925092565b600060208284031215612bbe57600080fd5b5035919050565b600060208284031215612bd757600080fd5b8135610b3081612b05565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612c2057612c20612be2565b604052919050565b60006001600160401b03821115612c4157612c41612be2565b50601f01601f191660200190565b80356001600160401b0381168114612b2557600080fd5b60008060008060008060008060006101208a8c031215612c8557600080fd5b89356001600160401b03811115612c9b57600080fd5b8a01601f81018c13612cac57600080fd5b8035612cbf612cba82612c28565b612bf8565b8181528d6020838501011115612cd457600080fd5b81602084016020830137600060208383010152809b50505050612cf960208b01612b1a565b9750612d0760408b01612b1a565b9650612d1560608b01612b1a565b9550612d2360808b01612c4f565b9450612d3160a08b01612b1a565b935060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600080600060608486031215612d6b57600080fd5b8335612d7681612b05565b9250612d8460208501612c4f565b9150604084013590509250925092565b8051151582526020808201511515908301526040808201511515908301526060808201516001600160a01b039081169184019190915260809182015116910152565b600061020082019050612dea828451612d94565b60208301516001600160a01b0390811660a084015260408401516001600160401b031660c08401526060840151151560e084015260808401519081166101008085019190915260a08501519150610120612e4e818601846001600160401b03169052565b60c08601519250610140612e658187018515159052565b60e08701516101608781019190915292870151610180870152908601516101a08601528501516001600160a01b039081166101c0860152908501519081166101e0850152905061193e565b60008060408385031215612ec357600080fd5b823591506020830135612ed581612b05565b809150509250929050565b60008060208385031215612ef357600080fd5b82356001600160401b0380821115612f0a57600080fd5b818501915085601f830112612f1e57600080fd5b813581811115612f2d57600080fd5b8660208260051b8501011115612f4257600080fd5b60209290920196919550909350505050565b60005b83811015612f6f578181015183820152602001612f57565b50506000910152565b60008151808452612f90816020860160208601612f54565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612ff957603f19888603018452612fe7858351612f78565b94509285019290850190600101612fcb565b5092979650505050505050565b602081526000610b306020830184612f78565b6102008101613028828f612d94565b6001600160a01b039c8d1660a08301526001600160401b039b8c1660c083015299151560e0820152978b16610100890152959098166101208701529215156101408601526101608501919091526101808401526101a08301529284166101c0820152919092166101e090910152919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156130ca576130ca61309a565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261310257634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156112dc576112dc61309a565b6001600160401b0381811683821601908082111561193e5761193e61309a565b60006101008a83528060208401526131548184018b612f78565b6001600160a01b03998a1660408501529789166060840152505093861660808501526001600160401b039290921660a084015290931660c082015260e0019190915292915050565b6000602082840312156131ae57600080fd5b8151610b3081612b05565b80518015158114612b2557600080fd5b6000602082840312156131db57600080fd5b610b30826131b9565b6000602082840312156131f657600080fd5b604051602081018181106001600160401b038211171561321857613218612be2565b6040529151825250919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261325257600080fd5b8301803591506001600160401b0382111561326c57600080fd5b60200191503681900382131561328157600080fd5b9250929050565b8183823760009101908152919050565b6000602082840312156132aa57600080fd5b81516001600160401b038111156132c057600080fd5b8201601f810184136132d157600080fd5b80516132df612cba82612c28565b8181528560208385010111156132f457600080fd5b613305826020830160208601612f54565b95945050505050565b6000600182016133205761332061309a565b5060010190565b8381528260208201526060604082015260006133056060830184612f78565b60006020828403121561335857600080fd5b5051919050565b60006101208083526133738184018d612f78565b602084019b909b52505060408101979097526001600160401b039590951660608701526001600160a01b03938416608087015291831660a0860152821660c085015260e08401521661010090910152919050565b6000608082840312156133d957600080fd5b604051608081018181106001600160401b03821117156133fb576133fb612be2565b604052613407836131b9565b8152613415602084016131b9565b6020820152613426604084016131b9565b6040820152613437606084016131b9565b60608201529392505050565b60008451613455818460208901612f54565b845190830190613469818360208901612f54565b845191019061347c818360208801612f54565b0195945050505050565b600b60fa1b8152600082516134a2816001850160208701612f54565b601d60f91b6001939091019283015250600201919050565b600082516134cc818460208701612f54565b601d60f91b920191825250600101919050565b600082516134f1818460208701612f54565b919091019291505056fea2646970667358221220c79e4b69580a6918a0cab6579715e6f18f22c17fbbef7be5a3153b8310fd6b2264736f6c63430008100033",
    "sourceMap": "1550:25031:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2078:35;;;;;;;;;160:25:76;;;148:2;133:18;2078:35:51;;;;;;;;2356:29;;;;;-1:-1:-1;;;;;2356:29:51;;;;;;-1:-1:-1;;;;;493:32:76;;;475:51;;463:2;448:18;2356:29:51;313:219:76;18786:103:51;18867:15;18786:103;;4950:569;;;;;;:::i;:::-;;:::i;13477:2449::-;;;;;;:::i;:::-;;:::i;:::-;;19674:200;;;;;;:::i;:::-;;:::i;1916:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2429:14:76;;2422:22;2404:41;;2392:2;2377:18;1916:49:51;2264:187:76;7830:3495:51;;;;;;:::i;:::-;;:::i;1847:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4708:14:76;;4701:22;4683:41;;4755:2;4740:18;;4733:34;;;;4656:18;1847:63:51;4515:258:76;1831:101:18;;;:::i;3496:622:51:-;;;;;;:::i;:::-;;:::i;17621:131::-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17722:23:51;;;;:10;:23;;;;;;;;;17715:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17715:30:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;17715:30:51;;;;;;;;;;;;-1:-1:-1;;;17715:30:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17715:30:51;;;;;;;;;;;;;;;;;;-1:-1:-1;17715:30:51;;;;;;;;;-1:-1:-1;17715:30:51;;;;;;;;;-1:-1:-1;17715:30:51;;;;17621:131;;;;;;;;:::i;1201:85:18:-;1247:7;1273:6;;;;-1:-1:-1;;;;;1273:6:18;1201:85;;16160:291:51;;;;;;:::i;:::-;;:::i;11787:1058::-;;;;;;:::i;:::-;;:::i;1814:27::-;;;;;-1:-1:-1;;;;;1814:27:51;;;16922:453;;;;;;:::i;:::-;;:::i;570:638:33:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;19178:132:51:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1680:39::-;;;;;2206:58;;-1:-1:-1;;;2206:58:51;;1972:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1972:47:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1972:47:51;;;;;;-1:-1:-1;;;1972:47:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2270:43::-;;2309:4;2270:43;;18147:469;;;;;;:::i;:::-;;:::i;2081:198:18:-;;;;;;:::i;:::-;;:::i;2391:29:51:-;;;;;-1:-1:-1;;;2391:29:51;;-1:-1:-1;;;;;2391:29:51;;;;;;-1:-1:-1;;;;;11920:31:76;;;11902:50;;11890:2;11875:18;2391:29:51;11758:200:76;4950:569:51;5041:7;5141:371;5170:5;;5141:371;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5329:15:51;;5193:8;;-1:-1:-1;5141:371:51;;-1:-1:-1;5141:371:51;;-1:-1:-1;;;;;;;;;5329:15:51;;;;-1:-1:-1;;;;;5362:15:51;5395:40;5362:15;5395:14;:40::i;:::-;-1:-1:-1;;;5496:1:51;5141:11;:371::i;:::-;5122:390;4950:569;-1:-1:-1;;;;4950:569:51:o;13477:2449::-;1317:19:32;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:32;;;2335:136;1346:17;13553:27:51::1;13583:23:::0;;;:10:::1;:23;::::0;;;;13624:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;13624:18:51::1;13616:69;;;::::0;-1:-1:-1;;;13616:69:51;;12165:2:76;13616:69:51::1;::::0;::::1;12147:21:76::0;12204:2;12184:18;;;12177:30;-1:-1:-1;;;12223:18:76;;;12216:54;12287:18;;13616:69:51::1;;;;;;;;;13743:17;::::0;::::1;::::0;-1:-1:-1;;;13743:17:51;::::1;;;13742:18;13734:56;;;::::0;-1:-1:-1;;;13734:56:51;;12518:2:76;13734:56:51::1;::::0;::::1;12500:21:76::0;12557:2;12537:18;;;12530:30;12596:27;12576:18;;;12569:55;12641:18;;13734:56:51::1;12316:349:76::0;13734:56:51::1;13840:17;::::0;::::1;:24:::0;;-1:-1:-1;;;;13840:24:51::1;-1:-1:-1::0;;;13840:24:51::1;::::0;;13878:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;13878:18:51::1;13874:2046;;18867:15:::0;13986:24:::1;::::0;::::1;::::0;-1:-1:-1;;;13986:24:51;::::1;-1:-1:-1::0;;;;;13986:24:51::1;:44;;13978:78;;;::::0;-1:-1:-1;;;13978:78:51;;12872:2:76;13978:78:51::1;::::0;::::1;12854:21:76::0;12911:2;12891:18;;;12884:30;-1:-1:-1;;;12930:18:76;;;12923:51;12991:18;;13978:78:51::1;12670:345:76::0;13978:78:51::1;14096:30;::::0;::::1;:37:::0;;-1:-1:-1;;;;14096:37:51;::::1;-1:-1:-1::0;;;14096:37:51::1;::::0;;;14179:18:::1;::::0;::::1;::::0;14199:14:::1;::::0;::::1;::::0;14147:67:::1;::::0;-1:-1:-1;;;;;14147:18:51;;;;14179::::1;::::0;14147:31:::1;:67::i;:::-;14228:46;14256:11;14269:4;14228:27;:46::i;:::-;14324:18;::::0;::::1;::::0;14294:74:::1;::::0;;14324:18:::1;13210:41:76::0;;14324:18:51;13282:2:76;13267:18;;13260:50;14357:10:51::1;13326:18:76::0;;;13319:60;14294:74:51;;-1:-1:-1;;;;;14324:18:51;;::::1;::::0;14311:11;;14294:74:::1;::::0;;;;;13198:2:76;14294:74:51;;::::1;13874:2046;;;14532:20;::::0;::::1;::::0;14554:23:::1;::::0;::::1;::::0;14480:20:::1;::::0;14503:75:::1;::::0;14519:11;;14532:20;-1:-1:-1;;;14554:23:51;::::1;-1:-1:-1::0;;;;;14554:23:51::1;14503:15;:75::i;:::-;14707:49:::0;;14480:98;;-1:-1:-1;14707:49:51::1;::::0;::::1;;;14703:175;;;14758:30;::::0;::::1;:38:::0;;-1:-1:-1;;;;14758:38:51::1;::::0;;14703:175:::1;;;14815:30;::::0;::::1;:63:::0;;-1:-1:-1;;;;14815:63:51::1;2309:4;14848:30:::0;::::1;-1:-1:-1::0;;;14815:63:51::1;;::::0;;14703:175:::1;14893:21;2309:4;14917:13;:30;:72;;14971:18;::::0;::::1;::::0;-1:-1:-1;;;;;14971:18:51::1;14917:72;;;14950:18;::::0;::::1;::::0;-1:-1:-1;;;;;14950:18:51::1;14917:72;14893:96;;15127:17;15189:4;15171:9;:14;;;15148:20;;:37;;;;:::i;:::-;15147:46;;;;:::i;:::-;15127:66;;15207:27;15258:9;15237;:14;;;15254:1;15237:18;;;;:::i;:::-;:30;;;;:::i;:::-;15207:60;;15491:64;15531:11;:9;:11::i;:::-;15491:18;::::0;::::1;::::0;-1:-1:-1;;;;;15491:18:51::1;::::0;15545:9;15491:31:::1;:64::i;:::-;15569:18;::::0;::::1;::::0;:67:::1;::::0;-1:-1:-1;;;;;15569:18:51::1;15601:13:::0;15616:19;15569:31:::1;:67::i;:::-;15656:49:::0;;::::1;::::0;::::1;;;15651:144;;15764:30;::::0;::::1;::::0;15723:72:::1;::::0;15751:11;;-1:-1:-1;;;15764:30:51;::::1;;;15723:27;:72::i;:::-;15866:30;::::0;::::1;::::0;15815:94:::1;::::0;;15860:4:::1;13210:41:76::0;;-1:-1:-1;;;15866:30:51;;::::1;;;13294:14:76::0;13287:22;13282:2;13267:18;;13260:50;15898:10:51::1;13326:18:76::0;;;13319:60;-1:-1:-1;;;;;15815:94:51;::::1;::::0;15832:11;;15815:94:::1;::::0;13198:2:76;13183:18;15815:94:51::1;;;;;;;14385:1535;;;;13874:2046;13543:2383;1384:20:32::0;2658:11;:18;;-1:-1:-1;;2658:18:32;2672:4;2658:18;;;2477:206;1384:20;13477:2449:51;:::o;19674:200::-;-1:-1:-1;;;;;19775:26:51;;19737:7;19775:26;;;:16;:26;;;;;:35;;;19847:20;;19828:15;19775:35;19839:4;19828:15;:::i;:::-;19827:40;;;;:::i;:::-;19820:47;19674:200;-1:-1:-1;;;19674:200:51:o;7830:3495::-;8136:19;1317::32;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:32;;;2335:136;1346:17;18867:15:51;8229:95:::1;8236:5:::0;8243:4;-1:-1:-1;;;;;8229:95:51;::::1;8255:8:::0;8265;8275:17;8294;8313:10;8229:6:::1;:95::i;:::-;8215:109:::0;-1:-1:-1;;;;;;8343:22:51;::::1;8335:53;;;::::0;-1:-1:-1;;;8335:53:51;;14384:2:76;8335:53:51::1;::::0;::::1;14366:21:76::0;14423:2;14403:18;;;14396:30;-1:-1:-1;;;14442:18:76;;;14435:48;14500:18;;8335:53:51::1;14182:342:76::0;8335:53:51::1;8450:1;8406:23:::0;;;:10:::1;:23;::::0;;;;:32:::1;;::::0;-1:-1:-1;;;;;8406:32:51::1;:46:::0;8398:83:::1;;;::::0;-1:-1:-1;;;8398:83:51;;14731:2:76;8398:83:51::1;::::0;::::1;14713:21:76::0;14770:2;14750:18;;;14743:30;14809:26;14789:18;;;14782:54;14853:18;;8398:83:51::1;14529:348:76::0;8398:83:51::1;8499:39;8527:10;8499:27;:39::i;:::-;8491:74;;;::::0;-1:-1:-1;;;8491:74:51;;15084:2:76;8491:74:51::1;::::0;::::1;15066:21:76::0;15123:2;15103:18;;;15096:30;-1:-1:-1;;;15142:18:76;;;15135:52;15204:18;;8491:74:51::1;14882:346:76::0;8491:74:51::1;8583:44;8617:8;8583:25;:44::i;:::-;8575:77;;;::::0;-1:-1:-1;;;8575:77:51;;15435:2:76;8575:77:51::1;::::0;::::1;15417:21:76::0;15474:2;15454:18;;;15447:30;-1:-1:-1;;;15493:18:76;;;15486:50;15553:18;;8575:77:51::1;15233:344:76::0;8575:77:51::1;8678:33;8701:8;8678:14;:33::i;:::-;8670:4;:41;;8662:73;;;::::0;-1:-1:-1;;;8662:73:51;;15784:2:76;8662:73:51::1;::::0;::::1;15766:21:76::0;15823:2;15803:18;;;15796:30;-1:-1:-1;;;15842:18:76;;;15835:49;15901:18;;8662:73:51::1;15582:343:76::0;8662:73:51::1;8772:871;::::0;;8823:422;;;;;-1:-1:-1;8772:871:51::1;::::0;::::1;8823:422:::0;;;;;;;;;;;;;;;9220:10:::1;8823:422:::0;;;;-1:-1:-1;;;;;8823:422:51;;::::1;::::0;;;;8772:871;;;;;::::1;8823:422;8772:871:::0;::::1;::::0;-1:-1:-1;;;;;8772:871:51;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;;8823:422:::1;8772:871:::0;;9617:15:::1;9624:8:::0;9583:4;9617:15:::1;:::i;:::-;-1:-1:-1::0;;;;;8772:871:51::1;;;;;9549:5;8772:871;;;;;;9417:8;8772:871;;;;9451:10;8772:871;;;;9481:4;8772:871;;;;9344:17;-1:-1:-1::0;;;;;8772:871:51::1;;;;;9309:1;-1:-1:-1::0;;;;;8772:871:51::1;;;::::0;8746:10:::1;:23;8757:11;8746:23;;;;;;;;;;;:897;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;-1:-1:-1::0;;;;;8746:897:51::1;;;;;;;;;9668:65;9736:32;9756:11;9736:19;:32::i;:::-;9791:30:::0;;9668:100;;-1:-1:-1;9790:31:51::1;9782:65;;;::::0;-1:-1:-1;;;9782:65:51;;16317:2:76;9782:65:51::1;::::0;::::1;16299:21:76::0;16356:2;16336:18;;;16329:30;-1:-1:-1;;;16375:18:76;;;16368:51;16436:18;;9782:65:51::1;16115:345:76::0;9782:65:51::1;9901:44;9948:23:::0;;;:10:::1;:23;::::0;;;;;;;;10359:45;;::::1;::::0;10618:29;;::::1;::::0;10852:33:::1;::::0;;::::1;::::0;10011:888;;-1:-1:-1;;10011:888:51;;;::::1;;::::0;;;::::1;-1:-1:-1::0;;10011:888:51;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;10011:888:51::1;::::0;::::1;;;::::0;;10920:58:::1;-1:-1:-1::0;;;;;10920:25:51;::::1;10946:10;10966:4;10973::::0;10920:25:::1;:58::i;:::-;11298:10;11121:8;-1:-1:-1::0;;;;;11028:290:51::1;11055:11;11028:290;11080:8;11102:5;11143:17;11174;11205:10;11236:8;11229:4;:15;;;;:::i;:::-;11258:8;11280:4;11028:290;;;;;;;;;;;;;:::i;:::-;;;;;;;;8157:3168;1384:20:32::0;2658:11;:18;;-1:-1:-1;;2658:18:32;2672:4;2658:18;;;2477:206;1384:20;7830:3495:51;;;;;;;;;;;:::o;1831:101:18:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3496:622:51:-;1094:13:18;:11;:13::i;:::-;3695:4:51::1;3670:21;:29;;3662:70;;;::::0;-1:-1:-1;;;3662:70:51;;17525:2:76;3662:70:51::1;::::0;::::1;17507:21:76::0;17564:2;17544:18;;;17537:30;17603;17583:18;;;17576:58;17651:18;;3662:70:51::1;17323:352:76::0;3662:70:51::1;3774:1;3750:21;:25;3742:65;;;::::0;-1:-1:-1;;;3742:65:51;;17882:2:76;3742:65:51::1;::::0;::::1;17864:21:76::0;17921:2;17901:18;;;17894:30;17960:29;17940:18;;;17933:57;18007:18;;3742:65:51::1;17680:351:76::0;3742:65:51::1;3817:20;:44:::0;;;3871:15:::1;:34:::0;;-1:-1:-1;;;;;3915:34:51;::::1;-1:-1:-1::0;;;3915:34:51::1;-1:-1:-1::0;;;;;;3915:34:51;;;-1:-1:-1;;;;;3871:34:51;::::1;3915::::0;::::1;::::0;;3959:59:::1;-1:-1:-1::0;;;3889:16:51;3959:13:::1;:59::i;:::-;4034:77;::::0;;-1:-1:-1;;;;;18270:32:76;;18252:51;;-1:-1:-1;;;;;18339:31:76;;18334:2;18319:18;;18312:59;18387:18;;;18380:34;;;4034:77:51::1;::::0;18240:2:76;18225:18;4034:77:51::1;;;;;;;3496:622:::0;;;:::o;16160:291::-;16236:4;16335:23;;;:10;:23;;;;;:31;;;-1:-1:-1;;;16335:31:51;;;;16330:66;;16368:28;16384:11;16368:15;:28::i;:::-;16413:31;16432:11;16413:18;:31::i;:::-;16406:38;16160:291;-1:-1:-1;;16160:291:51:o;11787:1058::-;1317:19:32;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:32;;;2335:136;1346:17;-1:-1:-1;;;;;11892:22:51;::::1;11884:54;;;::::0;-1:-1:-1;;;11884:54:51;;18627:2:76;11884:54:51::1;::::0;::::1;18609:21:76::0;18666:2;18646:18;;;18639:30;-1:-1:-1;;;18685:18:76;;;18678:49;18744:18;;11884:54:51::1;18425:343:76::0;11884:54:51::1;11948:27;11978:23:::0;;;:10:::1;:23;::::0;;;;12019:18:::1;::::0;::::1;::::0;-1:-1:-1;;;;;12019:18:51::1;12011:69;;;::::0;-1:-1:-1;;;12011:69:51;;12165:2:76;12011:69:51::1;::::0;::::1;12147:21:76::0;12204:2;12184:18;;;12177:30;-1:-1:-1;;;12223:18:76;;;12216:54;12287:18;;12011:69:51::1;11963:348:76::0;12011:69:51::1;12098:18;::::0;::::1;::::0;-1:-1:-1;;;;;12098:18:51::1;:32:::0;12090:71:::1;;;::::0;-1:-1:-1;;;12090:71:51;;18975:2:76;12090:71:51::1;::::0;::::1;18957:21:76::0;19014:2;18994:18;;;18987:30;19053:28;19033:18;;;19026:56;19099:18;;12090:71:51::1;18773:350:76::0;12090:71:51::1;18867:15:::0;12179:24:::1;::::0;::::1;::::0;-1:-1:-1;;;12179:24:51;::::1;-1:-1:-1::0;;;;;12179:24:51::1;:43;12171:76;;;::::0;-1:-1:-1;;;12171:76:51;;19330:2:76;12171:76:51::1;::::0;::::1;19312:21:76::0;19369:2;19349:18;;;19342:30;-1:-1:-1;;;19388:18:76;;;19381:50;19448:18;;12171:76:51::1;19128:344:76::0;12171:76:51::1;12265:30;12283:11;12265:17;:30::i;:::-;12257:62;;;::::0;-1:-1:-1;;;12257:62:51;;19679:2:76;12257:62:51::1;::::0;::::1;19661:21:76::0;19718:2;19698:18;;;19691:30;-1:-1:-1;;;19737:18:76;;;19730:49;19796:18;;12257:62:51::1;19477:343:76::0;12257:62:51::1;12330:18;::::0;::::1;:29:::0;;-1:-1:-1;;;;;;12330:29:51::1;-1:-1:-1::0;;;;;12330:29:51;;::::1;::::0;;;::::1;::::0;;;12433:14:::1;::::0;::::1;::::0;12370:18:::1;::::0;::::1;::::0;:78:::1;::::0;:18:::1;::::0;12406:10:::1;::::0;12426:4:::1;::::0;12370:35:::1;:78::i;:::-;12492:20;::::0;::::1;::::0;12514:23:::1;::::0;::::1;::::0;12459:79:::1;::::0;12479:11;;-1:-1:-1;;;12514:23:51;::::1;-1:-1:-1::0;;;;;12514:23:51::1;12459:19;:79::i;:::-;12549:40;12577:11;12549:27;:40::i;:::-;12672:49:::0;;::::1;::::0;::::1;;;12668:102;;;12723:47;12751:11;12764:5;12723:27;:47::i;:::-;12786:52;::::0;-1:-1:-1;;;;;12786:52:51;::::1;::::0;12817:10:::1;::::0;12804:11;;12786:52:::1;::::0;;;::::1;11874:971;1384:20:32::0;2658:11;:18;;-1:-1:-1;;2658:18:32;2672:4;2658:18;;;2477:206;1384:20;11787:1058:51;;:::o;16922:453::-;17015:56;;-1:-1:-1;;;17015:56:51;;-1:-1:-1;;;17015:56:51;;;160:25:76;17015:6:51;-1:-1:-1;;;;;17015:31:51;;;;133:18:76;;17015:56:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17000:12;:71;;-1:-1:-1;;;;;;17000:71:51;-1:-1:-1;;;;;17000:71:51;;;;;;;;;;17113:25;:23;:25::i;:::-;-1:-1:-1;;;;;17113:47:51;;17161:10;17113:59;;;;;;;;;;;;;160:25:76;;148:2;133:18;;14:177;17113:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17081:29;;;;:17;:29;;;;;:91;;-1:-1:-1;;17081:91:51;;;;;;;;;;17225:25;:23;:25::i;:::-;:49;;-1:-1:-1;;;17225:49:51;;-1:-1:-1;;;;;493:32:76;;;17225:49:51;;;475:51:76;17225:39:51;;;;;;;448:18:76;;17225:49:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17182:26:51;;;;;;:16;:26;;;;;:92;;-1:-1:-1;;17182:92:51;;;;;;;;;;17322:11;:9;:11::i;:::-;:37;;-1:-1:-1;;;17322:37:51;;-1:-1:-1;;;;;493:32:76;;;17322:37:51;;;475:51:76;17322:27:51;;;;;;;448:18:76;;17322:37:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;-1:-1:-1;;;;;17284:26:51;;;17322:46;17284:26;;;:16;:26;;;;;:35;;:84;-1:-1:-1;16922:453:51:o;570:638:33:-;630:22;686:4;-1:-1:-1;;;;;674:24:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:34;;713:9;708:494;728:15;;;708:494;;;765:12;;810:4;829;;834:1;829:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;802:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:73;;;;857:7;852:306;;984:2;968:6;:13;:18;964:32;;;988:8;;;964:32;1067:4;1059:6;1055:17;1045:27;;1125:6;1114:28;;;;;;;;;;;;:::i;:::-;1107:36;;-1:-1:-1;;;1107:36:33;;;;;;;;:::i;852:306::-;1185:6;1172:7;1180:1;1172:10;;;;;;;;:::i;:::-;;;;;;:19;;;;750:452;;745:3;;;;;:::i;:::-;;;;708:494;;;;570:638;;;;:::o;19178:132:51:-;19244:12;19275:28;19291:11;19275:15;:28::i;18147:469::-;18217:4;18262:23;;;:10;:23;;;;;;;;18233:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18233:52:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;18233:52:51;;;;;;;;;;;;-1:-1:-1;;;18233:52:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18233:52:51;;;;;;;;;;;;;;;;;;-1:-1:-1;18233:52:51;;;;;;;;;-1:-1:-1;18233:52:51;;;;;;;;;-1:-1:-1;18233:52:51;;;;;18366:32;;;;:85;;-1:-1:-1;18402:35:51;;:49;;;18366:85;18362:103;;;-1:-1:-1;18460:5:51;;18147:469;-1:-1:-1;;18147:469:51:o;18362:103::-;18483:9;:17;;;18475:51;;;;-1:-1:-1;;;18475:51:51;;23059:2:76;18475:51:51;;;23041:21:76;23098:2;23078:18;;;23071:30;-1:-1:-1;;;23117:18:76;;;23110:51;23178:18;;18475:51:51;22857:345:76;18475:51:51;18579:30;;;;18147:469;-1:-1:-1;;18147:469:51:o;2081:198:18:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:18;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:18;;23409:2:76;2161:73:18::1;::::0;::::1;23391:21:76::0;23448:2;23428:18;;;23421:30;23487:34;23467:18;;;23460:62;-1:-1:-1;;;23538:18:76;;;23531:36;23584:19;;2161:73:18::1;23207:402:76::0;2161:73:18::1;2244:28;2263:8;2244:18;:28::i;2143:186:32:-:0;2275:11;;;;2267:55;;;;-1:-1:-1;;;2267:55:32;;23816:2:76;2267:55:32;;;23798:21:76;23855:2;23835:18;;;23828:30;23894:33;23874:18;;;23867:61;23945:18;;2267:55:32;23614:355:76;763:205:23;902:58;;-1:-1:-1;;;;;24166:32:76;;902:58:23;;;24148:51:76;24215:18;;;24208:34;;;875:86:23;;895:5;;-1:-1:-1;;;925:23:23;24121:18:76;;902:58:23;;;;-1:-1:-1;;902:58:23;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:23;-1:-1:-1;;;;;;902:58:23;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;25566:492:51:-;25668:10;25681:23;;;:10;:23;;;;;:41;;;;23119:67;;;;;-1:-1:-1;;;;;25681:41:51;;;;23119:67;25793:16;;25789:141;;25823:107;;-1:-1:-1;;;25823:107:51;;;;;24421:25:76;;;24489:14;;24482:22;24462:18;;;24455:50;-1:-1:-1;;;;;25823:74:51;;;;;24394:18:76;;25823:107:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25789:141;-1:-1:-1;;;;;25944:16:51;;;25940:111;;25962:89;;-1:-1:-1;;;25962:89:51;;;;;24421:25:76;;;24489:14;;24482:22;24462:18;;;24455:50;-1:-1:-1;;;;;25962:56:51;;;;;24394:18:76;;25962:89:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25940:111;25658:400;;25566:492;;:::o;22702:245::-;22835:6;22860:23;22871:11;22860:10;:23::i;:::-;-1:-1:-1;;;;;22860:32:51;;22893:10;22905:4;22911:28;22927:11;22911:15;:28::i;:::-;22860:80;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;21700:155::-;21792:55;;-1:-1:-1;;;21792:55:51;;-1:-1:-1;;;21792:55:51;;;160:25:76;21744:14:51;;21792:6;-1:-1:-1;;;;;21792:31:51;;;;133:18:76;;21792:55:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21770:78;;21700:155;:::o;19988:660::-;20253:7;20350:5;20377:4;20403;20429:8;20459;20489:17;20528;20567:10;20599;20318:309;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20291:350;;;;;;20272:369;;19988:660;;;;;;;;;;:::o;24546:291::-;24621:4;24641:29;;;:17;:29;;;;;;;;24637:46;;;-1:-1:-1;24679:4:51;;24546:291;-1:-1:-1;24546:291:51:o;24637:46::-;24725:25;:23;:25::i;:::-;-1:-1:-1;;;;;24725:47:51;;24773:10;24725:59;;;;;;;;;;;;;160:25:76;;148:2;133:18;;14:177;24725:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24693:29;;;;:17;:29;;;;;;:91;;-1:-1:-1;;24693:91:51;;;;;;;;;-1:-1:-1;24693:91:51;24801:29;;24546:291::o;25056:404::-;-1:-1:-1;;;;;25147:26:51;;25127:4;25147:26;;;:16;:26;;;;;:40;;;25143:57;;;-1:-1:-1;25196:4:51;;25056:404;-1:-1:-1;25056:404:51:o;25143:57::-;25253:25;:23;:25::i;:::-;:49;;-1:-1:-1;;;25253:49:51;;-1:-1:-1;;;;;493:32:76;;;25253:49:51;;;475:51:76;25253:39:51;;;;;;;448:18:76;;25253:49:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25210:26:51;;;;;;:16;:26;;;;;:92;;-1:-1:-1;;25210:92:51;;;;;;;;;;25350:11;:9;:11::i;:::-;:37;;-1:-1:-1;;;25350:37:51;;-1:-1:-1;;;;;493:32:76;;;25350:37:51;;;475:51:76;25350:27:51;;;;;;;448:18:76;;25350:37:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;-1:-1:-1;;;;;25312:26:51;;;25350:46;25312:26;;;:16;:26;;;;;:35;;;:84;;;;-1:-1:-1;25413:40:51;;;;25056:404::o;23342:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23119:23:51;;;:10;:23;;;;;;:67;;;-1:-1:-1;;;;;23119:67:51;;23561:99;;-1:-1:-1;;23590:70:51;;;;;;;;-1:-1:-1;23590:70:51;;;;;;;;;;;;;;;;;;;;;;;23342:404;-1:-1:-1;23342:404:51:o;23561:99::-;23677:62;;-1:-1:-1;;;23677:62:51;;;;;160:25:76;;;-1:-1:-1;;;;;23677:49:51;;;;;133:18:76;;23677:62:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;974:241:23:-;1139:68;;-1:-1:-1;;;;;26975:15:76;;;1139:68:23;;;26957:34:76;27027:15;;27007:18;;;27000:43;27059:18;;;27052:34;;;1112:96:23;;1132:5;;-1:-1:-1;;;1162:27:23;26892:18:76;;1139:68:23;26717:375:76;1359:130:18;1247:7;1273:6;-1:-1:-1;;;;;1273:6:18;;;;;719:10:25;1422:23:18;1414:68;;;;-1:-1:-1;;;1414:68:18;;27299:2:76;1414:68:18;;;27281:21:76;;;27318:18;;;27311:30;27377:34;27357:18;;;27350:62;27429:18;;1414:68:18;27097:356:76;2433:187:18;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:18;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:18;;;;;2573:40;;2525:6;;;;;;;2541:17;;2525:6;;2573:40;;;2496:124;2433:187;:::o;23948:401:51:-;24019:4;24040:23;;;:10;:23;;;;;:67;;;;;;24035:85;;-1:-1:-1;24116:4:51;;23948:401;-1:-1:-1;23948:401:51:o;24035:85::-;24130:10;24143:23;;;:10;:23;;;;;:67;;;-1:-1:-1;;;;;24143:67:51;;24220:33;;-1:-1:-1;24249:4:51;;23948:401;-1:-1:-1;;23948:401:51:o;24220:33::-;24270:72;;-1:-1:-1;;;24270:72:51;;;;;27632:25:76;;;24331:10:51;27673:18:76;;;27666:60;-1:-1:-1;;;;;24270:47:51;;;;;27605:18:76;;24270:72:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;22384:224::-;22517:23;22528:11;22517:10;:23::i;:::-;-1:-1:-1;;;;;22517:36:51;;22554:10;22566:4;22572:28;22588:11;22572:15;:28::i;:::-;22517:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22384:224;;;:::o;26164:415::-;26241:10;26254:23;;;:10;:23;;;;;:41;;;;23119:67;;;;;-1:-1:-1;;;;;26254:41:51;;;;23119:67;26366:16;;26362:109;;26384:87;;-1:-1:-1;;;26384:87:51;;;;;160:25:76;;;-1:-1:-1;;;;;26384:74:51;;;;;133:18:76;;26384:87:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26362:109;-1:-1:-1;;;;;26485:16:51;;;26481:91;;26503:69;;-1:-1:-1;;;26503:69:51;;;;;160:25:76;;;-1:-1:-1;;;;;26503:56:51;;;;;133:18:76;;26503:69:51;14:177:76;21425:211:51;21559:69;;-1:-1:-1;;;21559:69:51;;-1:-1:-1;;;21559:69:51;;;160:25:76;21483:28:51;;21559:6;-1:-1:-1;;;;;21559:31:51;;;;133:18:76;;21559:69:51;14:177:76;21155:187:51;21265:69;;-1:-1:-1;;;21265:69:51;;-1:-1:-1;;;21265:69:51;;;160:25:76;21213:16:51;;21265:6;-1:-1:-1;;;;;21265:31:51;;;;133:18:76;;21265:69:51;14:177:76;20744:333:51;20813:12;20856:214;20909:67;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20909:67:51;;;20964:11;20909:35;:67::i;:::-;20856:214;;;;;;;;;;;-1:-1:-1;;;20856:214:51;;;;;;;;-1:-1:-1;21024:23:51;;;:10;:23;;;;;;;:32;;;-1:-1:-1;;;;;21024:32:51;20856:35;:214::i;3747:706:23:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:23;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:23;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:23;;27939:2:76;4351:85:23;;;27921:21:76;27978:2;27958:18;;;27951:30;28017:34;27997:18;;;27990:62;-1:-1:-1;;;28068:18:76;;;28061:40;28118:19;;4351:85:23;27737:406:76;21969:326:51;22033:24;22073:23;;;:10;:23;;;;;:79;;;22069:164;;;23093:7;23119:23;;;:10;:23;;;;;:67;;;-1:-1:-1;;;;;23119:67:51;22198:34;23018:175;22069:164;-1:-1:-1;;22275:12:51;;-1:-1:-1;;;;;22275:12:51;;21969:326::o;4121:330:29:-;4273:12;4297:19;4319:42;4335:20;4357:3;4319:15;:42::i;:::-;4297:64;;4395:20;4417:6;4425:18;4437:5;4425:11;:18::i;:::-;4378:66;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4371:73;;;4121:330;;;;;:::o;5184:337::-;5336:12;5360:19;5382:42;5398:20;5420:3;5382:15;:42::i;:::-;5360:64;;5458:20;5480:6;5488:25;5507:5;5488:18;:25::i;3873:223:24:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;6928:295:29:-;7057:27;;7029:12;;7057:31;7053:164;;7133:3;7111:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;7104:38;;;;7053:164;7197:3;7180:26;;;;;;;;:::i;2586:182::-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;30050:19:76;;;;30085:12;;30078:28;30122:12;;2678:83:29;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;-1:-1:-1;;;;;3287:26:29;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;30300:19:76;;;-1:-1:-1;;;;;;30349:41:76;30344:2;30335:12;;30328:63;30416:2;30407:12;;30145:280;4960:446:24;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:24;;30632:2:76;5149:81:24;;;30614:21:76;30671:2;30651:18;;;30644:30;30710:34;30690:18;;;30683:62;-1:-1:-1;;;30761:18:76;;;30754:36;30807:19;;5149:81:24;30430:402:76;5149:81:24;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:24;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:24:o;897:1306:29:-;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;-1:-1:-1;;;;;1088:70:29;1084:74;;1182:1;1186:5;1182:9;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:29:o;7466:628:24:-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:24;;;7908:60;;;;-1:-1:-1;;;7908:60:24;;31331:2:76;7908:60:24;;;31313:21:76;31370:2;31350:18;;;31343:30;31409:31;31389:18;;;31382:59;31458:18;;7908:60:24;31129:353:76;7908:60:24;-1:-1:-1;8003:10:24;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:24;;;;;;;;:::i;537:131:76:-;-1:-1:-1;;;;;612:31:76;;602:42;;592:70;;658:1;655;648:12;673:134;741:20;;770:31;741:20;770:31;:::i;:::-;673:134;;;:::o;812:732::-;891:6;899;907;960:2;948:9;939:7;935:23;931:32;928:52;;;976:1;973;966:12;928:52;1016:9;1003:23;-1:-1:-1;;;;;1086:2:76;1078:6;1075:14;1072:34;;;1102:1;1099;1092:12;1072:34;1140:6;1129:9;1125:22;1115:32;;1185:7;1178:4;1174:2;1170:13;1166:27;1156:55;;1207:1;1204;1197:12;1156:55;1247:2;1234:16;1273:2;1265:6;1262:14;1259:34;;;1289:1;1286;1279:12;1259:34;1336:7;1329:4;1320:6;1316:2;1312:15;1308:26;1305:39;1302:59;;;1357:1;1354;1347:12;1302:59;1388:4;1380:13;;;;-1:-1:-1;1412:6:76;-1:-1:-1;;1453:20:76;;1440:34;1483:31;1440:34;1483:31;:::i;:::-;1533:5;1523:15;;;812:732;;;;;:::o;1731:180::-;1790:6;1843:2;1831:9;1822:7;1818:23;1814:32;1811:52;;;1859:1;1856;1849:12;1811:52;-1:-1:-1;1882:23:76;;1731:180;-1:-1:-1;1731:180:76:o;1916:247::-;1975:6;2028:2;2016:9;2007:7;2003:23;1999:32;1996:52;;;2044:1;2041;2034:12;1996:52;2083:9;2070:23;2102:31;2127:5;2102:31;:::i;2456:127::-;2517:10;2512:3;2508:20;2505:1;2498:31;2548:4;2545:1;2538:15;2572:4;2569:1;2562:15;2588:275;2659:2;2653:9;2724:2;2705:13;;-1:-1:-1;;2701:27:76;2689:40;;-1:-1:-1;;;;;2744:34:76;;2780:22;;;2741:62;2738:88;;;2806:18;;:::i;:::-;2842:2;2835:22;2588:275;;-1:-1:-1;2588:275:76:o;2868:186::-;2916:4;-1:-1:-1;;;;;2941:6:76;2938:30;2935:56;;;2971:18;;:::i;:::-;-1:-1:-1;3037:2:76;3016:15;-1:-1:-1;;3012:29:76;3043:4;3008:40;;2868:186::o;3059:171::-;3126:20;;-1:-1:-1;;;;;3175:30:76;;3165:41;;3155:69;;3220:1;3217;3210:12;3235:1275;3390:6;3398;3406;3414;3422;3430;3438;3446;3454;3507:3;3495:9;3486:7;3482:23;3478:33;3475:53;;;3524:1;3521;3514:12;3475:53;3564:9;3551:23;-1:-1:-1;;;;;3589:6:76;3586:30;3583:50;;;3629:1;3626;3619:12;3583:50;3652:22;;3705:4;3697:13;;3693:27;-1:-1:-1;3683:55:76;;3734:1;3731;3724:12;3683:55;3770:2;3757:16;3795:48;3811:31;3839:2;3811:31;:::i;:::-;3795:48;:::i;:::-;3866:2;3859:5;3852:17;3908:7;3901:4;3896:2;3892;3888:11;3884:22;3881:35;3878:55;;;3929:1;3926;3919:12;3878:55;3988:2;3981:4;3977:2;3973:13;3966:4;3959:5;3955:16;3942:49;4034:1;4027:4;4022:2;4015:5;4011:14;4007:25;4000:36;4055:5;4045:15;;;;;4079:40;4113:4;4102:9;4098:20;4079:40;:::i;:::-;4069:50;;4138:38;4172:2;4161:9;4157:18;4138:38;:::i;:::-;4128:48;;4195:38;4229:2;4218:9;4214:18;4195:38;:::i;:::-;4185:48;;4252:38;4285:3;4274:9;4270:19;4252:38;:::i;:::-;4242:48;;4309:39;4343:3;4332:9;4328:19;4309:39;:::i;:::-;4299:49;;4395:3;4384:9;4380:19;4367:33;4357:43;;4447:3;4436:9;4432:19;4419:33;4409:43;;4499:3;4488:9;4484:19;4471:33;4461:43;;3235:1275;;;;;;;;;;;:::o;4778:403::-;4870:6;4878;4886;4939:2;4927:9;4918:7;4914:23;4910:32;4907:52;;;4955:1;4952;4945:12;4907:52;4994:9;4981:23;5013:31;5038:5;5013:31;:::i;:::-;5063:5;-1:-1:-1;5087:37:76;5120:2;5105:18;;5087:37;:::i;:::-;5077:47;;5171:2;5160:9;5156:18;5143:32;5133:42;;4778:403;;;;;:::o;5186:479::-;5291:12;;5284:20;5277:28;5265:41;;5369:4;5358:16;;;5352:23;5345:31;5338:39;5322:14;;;5315:63;5441:4;5430:16;;;5424:23;5417:31;5410:39;5394:14;;;5387:63;5496:4;5485:16;;;5479:23;-1:-1:-1;;;;;5572:21:76;;;5556:14;;;5549:45;;;;5647:4;5636:16;;;5630:23;5626:32;5610:14;;5603:56;5186:479::o;5777:1560::-;5925:4;5967:3;5956:9;5952:19;5944:27;;5980:69;6039:9;6030:6;6024:13;5980:69;:::i;:::-;6096:4;6084:17;;6078:24;-1:-1:-1;;;;;270:31:76;;;6167:4;6152:20;;258:44;6222:4;6210:17;;6204:24;-1:-1:-1;;;;;5735:30:76;6286:4;6271:20;;5723:43;6341:4;6329:17;;6323:24;2238:13;2231:21;6403:4;6388:20;;2219:34;6458:4;6446:17;;6440:24;270:31;;;6483:6;6541:18;;;258:44;;;;6609:4;6601:6;6597:17;6591:24;6569:46;;6634:6;6649:53;6698:2;6687:9;6683:18;6667:14;-1:-1:-1;;;;;5735:30:76;5723:43;;5670:102;6649:53;6751:4;6743:6;6739:17;6733:24;6711:46;;6776:6;6791:51;6838:2;6827:9;6823:18;6807:14;2238:13;2231:21;2219:34;;2168:91;6791:51;6879:4;6867:17;;6861:24;6904:6;6926:18;;;6919:30;;;;6995:15;;;6989:22;6980:6;6965:22;;6958:54;7058:15;;;7052:22;7043:6;7028:22;;7021:54;7112:15;;7106:22;-1:-1:-1;;;;;270:31:76;;;7195:6;7180:22;;258:44;7240:15;;;7234:22;270:31;;;7323:6;7308:22;;258:44;7234:22;-1:-1:-1;7265:66:76;196:112;7550:315;7618:6;7626;7679:2;7667:9;7658:7;7654:23;7650:32;7647:52;;;7695:1;7692;7685:12;7647:52;7731:9;7718:23;7708:33;;7791:2;7780:9;7776:18;7763:32;7804:31;7829:5;7804:31;:::i;:::-;7854:5;7844:15;;;7550:315;;;;;:::o;7870:626::-;7967:6;7975;8028:2;8016:9;8007:7;8003:23;7999:32;7996:52;;;8044:1;8041;8034:12;7996:52;8084:9;8071:23;-1:-1:-1;;;;;8154:2:76;8146:6;8143:14;8140:34;;;8170:1;8167;8160:12;8140:34;8208:6;8197:9;8193:22;8183:32;;8253:7;8246:4;8242:2;8238:13;8234:27;8224:55;;8275:1;8272;8265:12;8224:55;8315:2;8302:16;8341:2;8333:6;8330:14;8327:34;;;8357:1;8354;8347:12;8327:34;8410:7;8405:2;8395:6;8392:1;8388:14;8384:2;8380:23;8376:32;8373:45;8370:65;;;8431:1;8428;8421:12;8370:65;8462:2;8454:11;;;;;8484:6;;-1:-1:-1;7870:626:76;;-1:-1:-1;;;;7870:626:76:o;8501:250::-;8586:1;8596:113;8610:6;8607:1;8604:13;8596:113;;;8686:11;;;8680:18;8667:11;;;8660:39;8632:2;8625:10;8596:113;;;-1:-1:-1;;8743:1:76;8725:16;;8718:27;8501:250::o;8756:270::-;8797:3;8835:5;8829:12;8862:6;8857:3;8850:19;8878:76;8947:6;8940:4;8935:3;8931:14;8924:4;8917:5;8913:16;8878:76;:::i;:::-;9008:2;8987:15;-1:-1:-1;;8983:29:76;8974:39;;;;9015:4;8970:50;;8756:270;-1:-1:-1;;8756:270:76:o;9031:800::-;9191:4;9220:2;9260;9249:9;9245:18;9290:2;9279:9;9272:21;9313:6;9348;9342:13;9379:6;9371;9364:22;9417:2;9406:9;9402:18;9395:25;;9479:2;9469:6;9466:1;9462:14;9451:9;9447:30;9443:39;9429:53;;9517:2;9509:6;9505:15;9538:1;9548:254;9562:6;9559:1;9556:13;9548:254;;;9655:2;9651:7;9639:9;9631:6;9627:22;9623:36;9618:3;9611:49;9683:39;9715:6;9706;9700:13;9683:39;:::i;:::-;9673:49;-1:-1:-1;9780:12:76;;;;9745:15;;;;9584:1;9577:9;9548:254;;;-1:-1:-1;9819:6:76;;9031:800;-1:-1:-1;;;;;;;9031:800:76:o;9836:217::-;9983:2;9972:9;9965:21;9946:4;10003:44;10043:2;10032:9;10028:18;10020:6;10003:44;:::i;10291:1282::-;10823:3;10808:19;;10836:62;10812:9;10880:6;10836:62;:::i;:::-;-1:-1:-1;;;;;10973:15:76;;;10925:3;10952:19;;10945:44;-1:-1:-1;;;;;11063:15:76;;;11057:3;11042:19;;11035:44;11123:14;;11116:22;11110:3;11095:19;;11088:51;11176:15;;;11170:3;11155:19;;11148:44;11229:15;;;;11223:3;11208:19;;11201:44;11289:14;;11282:22;11276:3;11261:19;;11254:51;11336:3;11321:19;;11314:35;;;;11380:3;11365:19;;11358:35;11424:3;11409:19;;11402:35;270:31;;;11497:3;11482:19;;258:44;270:31;;;;11562:3;11547:19;;;258:44;10291:1282;;-1:-1:-1;10291:1282:76:o;13390:127::-;13451:10;13446:3;13442:20;13439:1;13432:31;13482:4;13479:1;13472:15;13506:4;13503:1;13496:15;13522:168;13562:7;13628:1;13624;13620:6;13616:14;13613:1;13610:21;13605:1;13598:9;13591:17;13587:45;13584:71;;;13635:18;;:::i;:::-;-1:-1:-1;13675:9:76;;13522:168::o;13695:127::-;13756:10;13751:3;13747:20;13744:1;13737:31;13787:4;13784:1;13777:15;13811:4;13808:1;13801:15;13827:217;13867:1;13893;13883:132;;13937:10;13932:3;13928:20;13925:1;13918:31;13972:4;13969:1;13962:15;14000:4;13997:1;13990:15;13883:132;-1:-1:-1;14029:9:76;;13827:217::o;14049:128::-;14116:9;;;14137:11;;;14134:37;;;14151:18;;:::i;15930:180::-;-1:-1:-1;;;;;16035:10:76;;;16047;;;16031:27;;16070:11;;;16067:37;;;16084:18;;:::i;16465:853::-;16785:4;16814:3;16844:6;16833:9;16826:25;16887:2;16882;16871:9;16867:18;16860:30;16907:44;16947:2;16936:9;16932:18;16924:6;16907:44;:::i;:::-;-1:-1:-1;;;;;17025:15:76;;;17020:2;17005:18;;16998:43;17077:15;;;17072:2;17057:18;;17050:43;-1:-1:-1;;17130:15:76;;;17124:3;17109:19;;17102:44;-1:-1:-1;;;;;17183:31:76;;;;16978:3;17162:19;;17155:60;17252:15;;;17246:3;17231:19;;17224:44;17299:3;17284:19;17277:35;;;;16899:52;16465:853;-1:-1:-1;;16465:853:76:o;19825:251::-;19895:6;19948:2;19936:9;19927:7;19923:23;19919:32;19916:52;;;19964:1;19961;19954:12;19916:52;19996:9;19990:16;20015:31;20040:5;20015:31;:::i;20081:164::-;20157:13;;20206;;20199:21;20189:32;;20179:60;;20235:1;20232;20225:12;20250:202;20317:6;20370:2;20358:9;20349:7;20345:23;20341:32;20338:52;;;20386:1;20383;20376:12;20338:52;20409:37;20436:9;20409:37;:::i;20457:444::-;20554:6;20607:2;20595:9;20586:7;20582:23;20578:32;20575:52;;;20623:1;20620;20613:12;20575:52;20656:2;20650:9;20698:2;20690:6;20686:15;20767:6;20755:10;20752:22;-1:-1:-1;;;;;20719:10:76;20716:34;20713:62;20710:88;;;20778:18;;:::i;:::-;20814:2;20807:22;20853:16;;20838:32;;-1:-1:-1;20845:6:76;20457:444;-1:-1:-1;20457:444:76:o;20906:127::-;20967:10;20962:3;20958:20;20955:1;20948:31;20998:4;20995:1;20988:15;21022:4;21019:1;21012:15;21038:521;21115:4;21121:6;21181:11;21168:25;21275:2;21271:7;21260:8;21244:14;21240:29;21236:43;21216:18;21212:68;21202:96;;21294:1;21291;21284:12;21202:96;21321:33;;21373:20;;;-1:-1:-1;;;;;;21405:30:76;;21402:50;;;21448:1;21445;21438:12;21402:50;21481:4;21469:17;;-1:-1:-1;21512:14:76;21508:27;;;21498:38;;21495:58;;;21549:1;21546;21539:12;21495:58;21038:521;;;;;:::o;21564:271::-;21747:6;21739;21734:3;21721:33;21703:3;21773:16;;21798:13;;;21773:16;21564:271;-1:-1:-1;21564:271:76:o;21840:648::-;21920:6;21973:2;21961:9;21952:7;21948:23;21944:32;21941:52;;;21989:1;21986;21979:12;21941:52;22022:9;22016:16;-1:-1:-1;;;;;22047:6:76;22044:30;22041:50;;;22087:1;22084;22077:12;22041:50;22110:22;;22163:4;22155:13;;22151:27;-1:-1:-1;22141:55:76;;22192:1;22189;22182:12;22141:55;22221:2;22215:9;22246:48;22262:31;22290:2;22262:31;:::i;22246:48::-;22317:2;22310:5;22303:17;22357:7;22352:2;22347;22343;22339:11;22335:20;22332:33;22329:53;;;22378:1;22375;22368:12;22329:53;22391:67;22455:2;22450;22443:5;22439:14;22434:2;22430;22426:11;22391:67;:::i;:::-;22477:5;21840:648;-1:-1:-1;;;;;21840:648:76:o;22717:135::-;22756:3;22777:17;;;22774:43;;22797:18;;:::i;:::-;-1:-1:-1;22844:1:76;22833:13;;22717:135::o;24516:359::-;24719:6;24708:9;24701:25;24762:6;24757:2;24746:9;24742:18;24735:34;24805:2;24800;24789:9;24785:18;24778:30;24682:4;24825:44;24865:2;24854:9;24850:18;24842:6;24825:44;:::i;24880:183::-;24949:6;25002:2;24990:9;24981:7;24977:23;24973:32;24970:52;;;25018:1;25015;25008:12;24970:52;-1:-1:-1;25041:16:76;;24880:183;-1:-1:-1;24880:183:76:o;25068:925::-;25416:4;25445:3;25475:2;25464:9;25457:21;25495:44;25535:2;25524:9;25520:18;25512:6;25495:44;:::i;:::-;25570:2;25555:18;;25548:34;;;;-1:-1:-1;;25613:2:76;25598:18;;25591:34;;;;-1:-1:-1;;;;;25661:31:76;;;;25656:2;25641:18;;25634:59;-1:-1:-1;;;;;25768:15:76;;;25762:3;25747:19;;25740:44;25821:15;;;25720:3;25800:19;;25793:44;25874:15;;25868:3;25853:19;;25846:44;25921:3;25906:19;;25899:35;25971:15;25965:3;25950:19;;;25943:44;25487:52;25068:925;-1:-1:-1;25068:925:76:o;25998:714::-;26102:6;26155:3;26143:9;26134:7;26130:23;26126:33;26123:53;;;26172:1;26169;26162:12;26123:53;26205:2;26199:9;26247:3;26239:6;26235:16;26317:6;26305:10;26302:22;-1:-1:-1;;;;;26269:10:76;26266:34;26263:62;26260:88;;;26328:18;;:::i;:::-;26364:2;26357:22;26403:37;26430:9;26403:37;:::i;:::-;26395:6;26388:53;26474:46;26516:2;26505:9;26501:18;26474:46;:::i;:::-;26469:2;26461:6;26457:15;26450:71;26554:46;26596:2;26585:9;26581:18;26554:46;:::i;:::-;26549:2;26541:6;26537:15;26530:71;26634:46;26676:2;26665:9;26661:18;26634:46;:::i;:::-;26629:2;26617:15;;26610:71;26621:6;25998:714;-1:-1:-1;;;25998:714:76:o;28148:697::-;28369:3;28407:6;28401:13;28423:66;28482:6;28477:3;28470:4;28462:6;28458:17;28423:66;:::i;:::-;28552:13;;28511:16;;;;28574:70;28552:13;28511:16;28621:4;28609:17;;28574:70;:::i;:::-;28711:13;;28666:20;;;28733:70;28711:13;28666:20;28780:4;28768:17;;28733:70;:::i;:::-;28819:20;;28148:697;-1:-1:-1;;;;;28148:697:76:o;28850:583::-;-1:-1:-1;;;29206:3:76;29199:16;29181:3;29244:6;29238:13;29260:74;29327:6;29323:1;29318:3;29314:11;29307:4;29299:6;29295:17;29260:74;:::i;:::-;-1:-1:-1;;;29393:1:76;29353:16;;;;29385:10;;;29378:23;-1:-1:-1;29425:1:76;29417:10;;28850:583;-1:-1:-1;28850:583:76:o;29438:450::-;29668:3;29706:6;29700:13;29722:66;29781:6;29776:3;29769:4;29761:6;29757:17;29722:66;:::i;:::-;-1:-1:-1;;;29810:16:76;;29835:18;;;-1:-1:-1;29880:1:76;29869:13;;29438:450;-1:-1:-1;29438:450:76:o;30837:287::-;30966:3;31004:6;30998:13;31020:66;31079:6;31074:3;31067:4;31059:6;31055:17;31020:66;:::i;:::-;31102:16;;;;;30837:287;-1:-1:-1;;30837:287:76:o",
    "linkReferences": {},
    "immutableReferences": {
      "35008": [
        {
          "start": 1306,
          "length": 32
        },
        {
          "start": 5528,
          "length": 32
        },
        {
          "start": 7592,
          "length": 32
        },
        {
          "start": 9325,
          "length": 32
        },
        {
          "start": 9426,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": "6457c979",
    "assertTruthWithDefaults(bytes,address)": "36b13af4",
    "assertions(bytes32)": "d60715b5",
    "burnedBondPercentage()": "08e7c3e6",
    "cachedCurrencies(address)": "70762157",
    "cachedIdentifiers(bytes32)": "530dd392",
    "cachedOracle()": "a7af2d0f",
    "defaultCurrency()": "20402e1d",
    "defaultIdentifier()": "d509b017",
    "defaultLiveness()": "fe4e1983",
    "disputeAssertion(bytes32,address)": "a6a22b43",
    "finder()": "b9a3c84c",
    "getAssertion(bytes32)": "88302884",
    "getAssertionResult(bytes32)": "e39dfd7f",
    "getCurrentTime()": "29cb924d",
    "getMinimumBond(address)": "4360af3d",
    "multicall(bytes[])": "ac9650d8",
    "numericalTrue()": "da03b36e",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setAdminProperties(address,uint64,uint256)": "82762520",
    "settleAndGetAssertionResult(bytes32)": "8ea2f2ab",
    "settleAssertion(bytes32)": "4124beef",
    "stampAssertion(bytes32)": "afedba4f",
    "syncUmaParams(bytes32,address)": "a8655785",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_defaultCurrency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_defaultLiveness\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"defaultCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"defaultLiveness\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedBondPercentage\",\"type\":\"uint256\"}],\"name\":\"AdminPropertiesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"AssertionDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"AssertionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disputed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"settleCaller\",\"type\":\"address\"}],\"name\":\"AssertionSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"liveness\",\"type\":\"uint64\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"}],\"name\":\"assertTruth\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"claim\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"}],\"name\":\"assertTruthWithDefaults\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"arbitrateViaEscalationManager\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discardOracle\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"validateDisputers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.EscalationManagerSettings\",\"name\":\"escalationManagerSettings\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"assertionTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnedBondPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cachedCurrencies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cachedIdentifiers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cachedOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"name\":\"disputeAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"arbitrateViaEscalationManager\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"discardOracle\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"validateDisputers\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assertingCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"escalationManager\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.EscalationManagerSettings\",\"name\":\"escalationManagerSettings\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"assertionTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"settlementResolution\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"domainId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"callbackRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"}],\"internalType\":\"struct OptimisticOracleV3Interface.Assertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"getMinimumBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numericalTrue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_defaultCurrency\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_defaultLiveness\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_burnedBondPercentage\",\"type\":\"uint256\"}],\"name\":\"setAdminProperties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"settleAndGetAssertionResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"settleAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"stampAssertion\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"syncUmaParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Core idea: an asserter makes a statement about a truth, calling \\\"assertTruth\\\". If this statement is not challenged, it is taken as the state of the world. If challenged, it is arbitrated using the UMA DVM, or if configured, an escalation manager. Escalation managers enable integrations to define their own security properties and tradeoffs, enabling the notion of \\\"sovereign security\\\".\",\"kind\":\"dev\",\"methods\":{\"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)\":{\"details\":\"The caller must approve this contract to spend at least bond amount of currency.\",\"params\":{\"asserter\":\"account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.\",\"bond\":\"amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This must be >= getMinimumBond(address(currency)).\",\"callbackRecipient\":\"if configured, this address will receive a function call assertionResolvedCallback and assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.\",\"claim\":\"the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\",\"currency\":\"bond currency pulled from the caller and held in escrow until the assertion is resolved.\",\"domainId\":\"optional domain that can be used to relate this assertion to others in the escalationManager and can be used by the configured escalationManager to define custom behavior for groups of assertions. This is typically used for \\\"escalation games\\\" by changing bonds or other assertion properties based on the other assertions that have come before. If not needed this value should be 0 to save gas.\",\"escalationManager\":\"if configured, this address will control escalation properties of the assertion. This means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to validate disputes. Combining these, the asserter can define their own security properties for the assertion. escalationManager also _must_ implement the same callbacks as callbackRecipient.\",\"identifier\":\"UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.\",\"liveness\":\"time to wait before the assertion can be resolved. Assertion can be disputed in this time.\"},\"returns\":{\"assertionId\":\"unique identifier for this assertion.\"}},\"assertTruthWithDefaults(bytes,address)\":{\"details\":\"The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).\",\"params\":{\"asserter\":\"account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.\",\"claim\":\"the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\"},\"returns\":{\"_0\":\"assertionId unique identifier for this assertion.\"}},\"constructor\":{\"params\":{\"_defaultCurrency\":\"the default currency to bond asserters in assertTruthWithDefaults.\",\"_defaultLiveness\":\"the default liveness for assertions in assertTruthWithDefaults.\",\"_finder\":\"keeps track of all contracts within the UMA system based on their interfaceName.\"}},\"disputeAssertion(bytes32,address)\":{\"details\":\"The caller must approve this contract to spend at least bond amount of currency for the associated assertion.\",\"params\":{\"assertionId\":\"unique identifier for the assertion to dispute.\",\"disputer\":\"receives bonds back at settlement.\"}},\"getAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to fetch information for.\"},\"returns\":{\"_0\":\"assertion information about the assertion.\"}},\"getAssertionResult(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to fetch the resolution for.\"},\"returns\":{\"_0\":\"resolution of the assertion.\"}},\"getCurrentTime()\":{\"details\":\"Can be overridden to control contract time.\",\"returns\":{\"_0\":\"current block timestamp.\"}},\"getMinimumBond(address)\":{\"params\":{\"currency\":\"currency to calculate the minimum bond for.\"},\"returns\":{\"_0\":\"minimum bond amount.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAdminProperties(address,uint64,uint256)\":{\"details\":\"Only callable by the contract owner (UMA governor).\",\"params\":{\"_burnedBondPercentage\":\"the percentage of the bond that is sent as fee to UMA Store contract on disputes.\",\"_defaultCurrency\":\"the default currency to bond asserters in assertTruthWithDefaults.\",\"_defaultLiveness\":\"the default liveness for assertions in assertTruthWithDefaults.\"}},\"settleAndGetAssertionResult(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to resolve and return the resolution for.\"},\"returns\":{\"_0\":\"resolution of the assertion.\"}},\"settleAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to resolve.\"}},\"stampAssertion(bytes32)\":{\"params\":{\"assertionId\":\"unique identifier for the assertion to construct ancillary data for.\"},\"returns\":{\"_0\":\"ancillaryData stamped assertion information.\"}},\"syncUmaParams(bytes32,address)\":{\"params\":{\"currency\":\"currency to fetch information for and store locally.\",\"identifier\":\"identifier to fetch information for and store locally.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"defaultIdentifier\":{\"return\":\"The default identifier.\",\"returns\":{\"_0\":\"The default identifier.\"}}},\"title\":\"Optimistic Oracle V3.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)\":{\"notice\":\"Asserts a truth about the world, using a fully custom configuration.\"},\"assertTruthWithDefaults(bytes,address)\":{\"notice\":\"Asserts a truth about the world, using the default currency and liveness. No callback recipient or escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency.\"},\"constructor\":{\"notice\":\"Construct the OptimisticOracleV3 contract.\"},\"defaultIdentifier()\":{\"notice\":\"Returns the default identifier used by the Optimistic Oracle V3.\"},\"disputeAssertion(bytes32,address)\":{\"notice\":\"Disputes an assertion. Depending on how the assertion was configured, this may either escalate to the UMA DVM or the configured escalation manager for arbitration.\"},\"getAssertion(bytes32)\":{\"notice\":\"Fetches information about a specific assertion and returns it.\"},\"getAssertionResult(bytes32)\":{\"notice\":\"Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then this will revert. If the assertion was disputed and configured to discard the oracle resolution return false.\"},\"getCurrentTime()\":{\"notice\":\"Returns the current block timestamp.\"},\"getMinimumBond(address)\":{\"notice\":\"Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee.\"},\"setAdminProperties(address,uint64,uint256)\":{\"notice\":\"Sets the default currency, liveness, and burned bond percentage.\"},\"settleAndGetAssertionResult(bytes32)\":{\"notice\":\"Settles an assertion and returns the resolution.\"},\"settleAssertion(bytes32)\":{\"notice\":\"Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of the bond is returned to the asserter or disputer.\"},\"stampAssertion(bytes32)\":{\"notice\":\"Appends information onto an assertionId to construct ancillary data used for dispute resolution.\"},\"syncUmaParams(bytes32,address)\":{\"notice\":\"Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy of the information within this contract. This is used to save gas when making assertions as we can avoid an external call to the UMA contracts to fetch this.\"}},\"notice\":\"The OOv3 is used to assert truths about the world which are verified using an optimistic escalation game.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol\":\"OptimisticOracleV3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uma/=lib/protocol/packages/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":protocol/=lib/protocol/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"lib/protocol/packages/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"lib/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"lib/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede\",\"dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj\"]},\"lib/protocol/packages/core/contracts/common/implementation/MultiCaller.sol\":{\"keccak256\":\"0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8\",\"dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv\"]},\"lib/protocol/packages/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"lib/protocol/packages/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]},\"lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol\":{\"keccak256\":\"0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc\",\"dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX\"]},\"lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]},\"lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol\":{\"keccak256\":\"0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e\",\"dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia\"]},\"lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol\":{\"keccak256\":\"0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967\",\"dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN\"]},\"lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x9aa4ae5b2273b406d5928597b64afe44f0b2d482a452e02f460d0ea7337bd98a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2dcb7e999f95c95d84279d20efcd618d900217459cbb7de433de5e22831c3779\",\"dweb:/ipfs/QmeeKpJXRPS9Jq7H36t2TFYiT3p3VVmGXedvoeVY5cfo1o\"]},\"lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871\",\"dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract FinderInterface",
              "name": "_finder",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_defaultCurrency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "_defaultLiveness",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "defaultCurrency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "defaultLiveness",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "burnedBondPercentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminPropertiesSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionDisputed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AssertionMade",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondRecipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "disputed",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "settleCaller",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AssertionSettled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "escalationManager",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "liveness",
              "type": "uint64"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertTruth",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "claim",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertTruthWithDefaults",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertions",
          "outputs": [
            {
              "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
              "name": "escalationManagerSettings",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "arbitrateViaEscalationManager",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "discardOracle",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "validateDisputers",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "assertingCaller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "escalationManager",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "assertionTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settled",
              "type": "bool"
            },
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "settlementResolution",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "domainId",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "bond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "callbackRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "burnedBondPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cachedCurrencies",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isWhitelisted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "finalFee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cachedIdentifiers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cachedOracle",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultCurrency",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultLiveness",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disputeAssertion"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "finder",
          "outputs": [
            {
              "internalType": "contract FinderInterface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertion",
          "outputs": [
            {
              "internalType": "struct OptimisticOracleV3Interface.Assertion",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OptimisticOracleV3Interface.EscalationManagerSettings",
                  "name": "escalationManagerSettings",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "arbitrateViaEscalationManager",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "discardOracle",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "validateDisputers",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "assertingCaller",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "escalationManager",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "asserter",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "assertionTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "settled",
                  "type": "bool"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "settlementResolution",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "domainId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "identifier",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "bond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "callbackRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "disputer",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertionResult",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinimumBond",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numericalTrue",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_defaultCurrency",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "_defaultLiveness",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "_burnedBondPercentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdminProperties"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleAndGetAssertionResult",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleAssertion"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stampAssertion",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "syncUmaParams"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": {
            "details": "The caller must approve this contract to spend at least bond amount of currency.",
            "params": {
              "asserter": "account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.",
              "bond": "amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This must be >= getMinimumBond(address(currency)).",
              "callbackRecipient": "if configured, this address will receive a function call assertionResolvedCallback and assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.",
              "claim": "the truth claim being asserted. This is an assertion about the world, and is verified by disputers.",
              "currency": "bond currency pulled from the caller and held in escrow until the assertion is resolved.",
              "domainId": "optional domain that can be used to relate this assertion to others in the escalationManager and can be used by the configured escalationManager to define custom behavior for groups of assertions. This is typically used for \"escalation games\" by changing bonds or other assertion properties based on the other assertions that have come before. If not needed this value should be 0 to save gas.",
              "escalationManager": "if configured, this address will control escalation properties of the assertion. This means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to validate disputes. Combining these, the asserter can define their own security properties for the assertion. escalationManager also _must_ implement the same callbacks as callbackRecipient.",
              "identifier": "UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.",
              "liveness": "time to wait before the assertion can be resolved. Assertion can be disputed in this time."
            },
            "returns": {
              "assertionId": "unique identifier for this assertion."
            }
          },
          "assertTruthWithDefaults(bytes,address)": {
            "details": "The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).",
            "params": {
              "asserter": "account that receives bonds back at settlement. This could be msg.sender or any other account that the caller wants to receive the bond at settlement time.",
              "claim": "the truth claim being asserted. This is an assertion about the world, and is verified by disputers."
            },
            "returns": {
              "_0": "assertionId unique identifier for this assertion."
            }
          },
          "constructor": {
            "params": {
              "_defaultCurrency": "the default currency to bond asserters in assertTruthWithDefaults.",
              "_defaultLiveness": "the default liveness for assertions in assertTruthWithDefaults.",
              "_finder": "keeps track of all contracts within the UMA system based on their interfaceName."
            }
          },
          "disputeAssertion(bytes32,address)": {
            "details": "The caller must approve this contract to spend at least bond amount of currency for the associated assertion.",
            "params": {
              "assertionId": "unique identifier for the assertion to dispute.",
              "disputer": "receives bonds back at settlement."
            }
          },
          "getAssertion(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to fetch information for."
            },
            "returns": {
              "_0": "assertion information about the assertion."
            }
          },
          "getAssertionResult(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to fetch the resolution for."
            },
            "returns": {
              "_0": "resolution of the assertion."
            }
          },
          "getCurrentTime()": {
            "details": "Can be overridden to control contract time.",
            "returns": {
              "_0": "current block timestamp."
            }
          },
          "getMinimumBond(address)": {
            "params": {
              "currency": "currency to calculate the minimum bond for."
            },
            "returns": {
              "_0": "minimum bond amount."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setAdminProperties(address,uint64,uint256)": {
            "details": "Only callable by the contract owner (UMA governor).",
            "params": {
              "_burnedBondPercentage": "the percentage of the bond that is sent as fee to UMA Store contract on disputes.",
              "_defaultCurrency": "the default currency to bond asserters in assertTruthWithDefaults.",
              "_defaultLiveness": "the default liveness for assertions in assertTruthWithDefaults."
            }
          },
          "settleAndGetAssertionResult(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to resolve and return the resolution for."
            },
            "returns": {
              "_0": "resolution of the assertion."
            }
          },
          "settleAssertion(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to resolve."
            }
          },
          "stampAssertion(bytes32)": {
            "params": {
              "assertionId": "unique identifier for the assertion to construct ancillary data for."
            },
            "returns": {
              "_0": "ancillaryData stamped assertion information."
            }
          },
          "syncUmaParams(bytes32,address)": {
            "params": {
              "currency": "currency to fetch information for and store locally.",
              "identifier": "identifier to fetch information for and store locally."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "assertTruth(bytes,address,address,address,uint64,address,uint256,bytes32,bytes32)": {
            "notice": "Asserts a truth about the world, using a fully custom configuration."
          },
          "assertTruthWithDefaults(bytes,address)": {
            "notice": "Asserts a truth about the world, using the default currency and liveness. No callback recipient or escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency."
          },
          "constructor": {
            "notice": "Construct the OptimisticOracleV3 contract."
          },
          "defaultIdentifier()": {
            "notice": "Returns the default identifier used by the Optimistic Oracle V3."
          },
          "disputeAssertion(bytes32,address)": {
            "notice": "Disputes an assertion. Depending on how the assertion was configured, this may either escalate to the UMA DVM or the configured escalation manager for arbitration."
          },
          "getAssertion(bytes32)": {
            "notice": "Fetches information about a specific assertion and returns it."
          },
          "getAssertionResult(bytes32)": {
            "notice": "Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then this will revert. If the assertion was disputed and configured to discard the oracle resolution return false."
          },
          "getCurrentTime()": {
            "notice": "Returns the current block timestamp."
          },
          "getMinimumBond(address)": {
            "notice": "Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee."
          },
          "setAdminProperties(address,uint64,uint256)": {
            "notice": "Sets the default currency, liveness, and burned bond percentage."
          },
          "settleAndGetAssertionResult(bytes32)": {
            "notice": "Settles an assertion and returns the resolution."
          },
          "settleAssertion(bytes32)": {
            "notice": "Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of the bond is returned to the asserter or disputer."
          },
          "stampAssertion(bytes32)": {
            "notice": "Appends information onto an assertionId to construct ancillary data used for dispute resolution."
          },
          "syncUmaParams(bytes32,address)": {
            "notice": "Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy of the information within this contract. This is used to save gas when making assertions as we can avoid an external call to the UMA contracts to fetch this."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@uma/=lib/protocol/packages/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "protocol/=lib/protocol/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol": "OptimisticOracleV3"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
        "urls": [
          "bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
          "dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedSafeMath.sol": {
        "keccak256": "0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2",
        "urls": [
          "bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce",
          "dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB"
        ],
        "license": "MIT"
      },
      "lib/protocol/packages/core/contracts/common/implementation/AddressWhitelist.sol": {
        "keccak256": "0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee",
        "urls": [
          "bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc",
          "dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/common/implementation/FixedPoint.sol": {
        "keccak256": "0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae",
        "urls": [
          "bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663",
          "dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/common/implementation/Lockable.sol": {
        "keccak256": "0x41d78fcce54598ad5f26bc0b778c0f4fedbd836401625e49e736979f69a87ef0",
        "urls": [
          "bzz-raw://4ce111bb50441ef5125e7d42284f6debbc17fd589515d7b8cede7e9d1d5f0ede",
          "dweb:/ipfs/QmaXiXACWVEDDHoCHNXdVBoNpf8QNHkUZ1kf5MfbxfL6jj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/common/implementation/MultiCaller.sol": {
        "keccak256": "0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e",
        "urls": [
          "bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8",
          "dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/common/interfaces/AddressWhitelistInterface.sol": {
        "keccak256": "0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8",
        "urls": [
          "bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533",
          "dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/data-verification-mechanism/implementation/Constants.sol": {
        "keccak256": "0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84",
        "urls": [
          "bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05",
          "dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol": {
        "keccak256": "0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86",
        "urls": [
          "bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81",
          "dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol": {
        "keccak256": "0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9",
        "urls": [
          "bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3",
          "dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol": {
        "keccak256": "0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f",
        "urls": [
          "bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc",
          "dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol": {
        "keccak256": "0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df",
        "urls": [
          "bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8",
          "dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol": {
        "keccak256": "0xeba5082c48c3d891f2422b8c0d1d5d6552ab47b5d538db7ff05ffb2f3db25ffc",
        "urls": [
          "bzz-raw://d818630e1c094792613a0539aa0a7677ca8fa92a5308eaf4ff7cf8ea8a4c547e",
          "dweb:/ipfs/QmSM78A3afY6osh4VAmyJX2E4Qyg4qcY1KwY5uFnSK4Yia"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol": {
        "keccak256": "0xce31adf62ae47468bab181bf1137b05e8ac0a003f019c343ac137a76ea32efc7",
        "urls": [
          "bzz-raw://eb1b93b648adf4130fdfe7a62d817cda0519e7760a50b90f16a3c46cee4c0967",
          "dweb:/ipfs/QmNPD4TRAm9kqqQDKQabqZgaorkJNov96iLgxsm5HRTSZN"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x9aa4ae5b2273b406d5928597b64afe44f0b2d482a452e02f460d0ea7337bd98a",
        "urls": [
          "bzz-raw://2dcb7e999f95c95d84279d20efcd618d900217459cbb7de433de5e22831c3779",
          "dweb:/ipfs/QmeeKpJXRPS9Jq7H36t2TFYiT3p3VVmGXedvoeVY5cfo1o"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0x06c16f033cb100a20286b0f9c866a33a227a9e534544d5da6e5e20103d182d00",
        "urls": [
          "bzz-raw://a354805eab907d5e9e7910f66ef5c5c5594bb5144a77541d6d30c6cb3cbd6871",
          "dweb:/ipfs/QmTfUDPJrsuUQ2aPwsbQwTaSvjUzBQFvFxXtmscZFymM4X"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/protocol/packages/core/contracts/optimistic-oracle-v3/implementation/OptimisticOracleV3.sol",
    "id": 36274,
    "exportedSymbols": {
      "Address": [
        29867
      ],
      "AddressWhitelist": [
        30483
      ],
      "AddressWhitelistInterface": [
        33813
      ],
      "AncillaryData": [
        30891
      ],
      "Context": [
        29889
      ],
      "EscalationManagerInterface": [
        37416
      ],
      "FinderInterface": [
        34435
      ],
      "FixedPoint": [
        32747
      ],
      "IERC20": [
        29195
      ],
      "IERC20Permit": [
        29256
      ],
      "IdentifierWhitelistInterface": [
        34459
      ],
      "Lockable": [
        32824
      ],
      "MultiCaller": [
        32903
      ],
      "OptimisticOracleConstraints": [
        33915
      ],
      "OptimisticOracleV3": [
        36273
      ],
      "OptimisticOracleV3CallbackRecipientInterface": [
        37434
      ],
      "OptimisticOracleV3Interface": [
        37624
      ],
      "OracleAncillaryInterface": [
        34497
      ],
      "OracleInterfaces": [
        33910
      ],
      "Ownable": [
        28530
      ],
      "SafeERC20": [
        29537
      ],
      "SafeMath": [
        30201
      ],
      "SignedSafeMath": [
        30265
      ],
      "StoreInterface": [
        34542
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:26540:51",
    "nodes": [
      {
        "id": 34978,
        "nodeType": "PragmaDirective",
        "src": "42:23:51",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 34979,
        "nodeType": "ImportDirective",
        "src": "67:52:51",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 28531,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34980,
        "nodeType": "ImportDirective",
        "src": "120:65:51",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 29538,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34981,
        "nodeType": "ImportDirective",
        "src": "187:72:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol",
        "file": "../interfaces/OptimisticOracleV3CallbackRecipientInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 37435,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34982,
        "nodeType": "ImportDirective",
        "src": "260:55:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol",
        "file": "../interfaces/OptimisticOracleV3Interface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 37625,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34983,
        "nodeType": "ImportDirective",
        "src": "316:54:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/optimistic-oracle-v3/interfaces/EscalationManagerInterface.sol",
        "file": "../interfaces/EscalationManagerInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 37417,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34984,
        "nodeType": "ImportDirective",
        "src": "372:72:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/data-verification-mechanism/implementation/Constants.sol",
        "file": "../../data-verification-mechanism/implementation/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 33916,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34985,
        "nodeType": "ImportDirective",
        "src": "445:74:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol",
        "file": "../../data-verification-mechanism/interfaces/FinderInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 34436,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34986,
        "nodeType": "ImportDirective",
        "src": "520:87:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol",
        "file": "../../data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 34460,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34987,
        "nodeType": "ImportDirective",
        "src": "608:83:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface.sol",
        "file": "../../data-verification-mechanism/interfaces/OracleAncillaryInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 34498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34988,
        "nodeType": "ImportDirective",
        "src": "692:73:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol",
        "file": "../../data-verification-mechanism/interfaces/StoreInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 34543,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34989,
        "nodeType": "ImportDirective",
        "src": "767:58:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/common/implementation/AddressWhitelist.sol",
        "file": "../../common/implementation/AddressWhitelist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 30484,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34990,
        "nodeType": "ImportDirective",
        "src": "826:55:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol",
        "file": "../../common/implementation/AncillaryData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 30892,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34991,
        "nodeType": "ImportDirective",
        "src": "882:50:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 32825,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34992,
        "nodeType": "ImportDirective",
        "src": "933:53:51",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/common/implementation/MultiCaller.sol",
        "file": "../../common/implementation/MultiCaller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36274,
        "sourceUnit": 32904,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36273,
        "nodeType": "ContractDefinition",
        "src": "1550:25031:51",
        "nodes": [
          {
            "id": 35005,
            "nodeType": "UsingForDirective",
            "src": "1647:27:51",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 35002,
              "name": "SafeERC20",
              "nameLocations": [
                "1653:9:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29537,
              "src": "1653:9:51"
            },
            "typeName": {
              "id": 35004,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35003,
                "name": "IERC20",
                "nameLocations": [
                  "1667:6:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29195,
                "src": "1667:6:51"
              },
              "referencedDeclaration": 29195,
              "src": "1667:6:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$29195",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 35008,
            "nodeType": "VariableDeclaration",
            "src": "1680:39:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9a3c84c",
            "mutability": "immutable",
            "name": "finder",
            "nameLocation": "1713:6:51",
            "scope": 36273,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FinderInterface_$34435",
              "typeString": "contract FinderInterface"
            },
            "typeName": {
              "id": 35007,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35006,
                "name": "FinderInterface",
                "nameLocations": [
                  "1680:15:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34435,
                "src": "1680:15:51"
              },
              "referencedDeclaration": 34435,
              "src": "1680:15:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinderInterface_$34435",
                "typeString": "contract FinderInterface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35010,
            "nodeType": "VariableDeclaration",
            "src": "1814:27:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "a7af2d0f",
            "mutability": "mutable",
            "name": "cachedOracle",
            "nameLocation": "1829:12:51",
            "scope": 36273,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35009,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1814:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35015,
            "nodeType": "VariableDeclaration",
            "src": "1847:63:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "70762157",
            "mutability": "mutable",
            "name": "cachedCurrencies",
            "nameLocation": "1894:16:51",
            "scope": 36273,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$37481_storage_$",
              "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency)"
            },
            "typeName": {
              "id": 35014,
              "keyType": {
                "id": 35011,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1855:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1847:39:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$37481_storage_$",
                "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency)"
              },
              "valueType": {
                "id": 35013,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 35012,
                  "name": "WhitelistedCurrency",
                  "nameLocations": [
                    "1866:19:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37481,
                  "src": "1866:19:51"
                },
                "referencedDeclaration": 37481,
                "src": "1866:19:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_WhitelistedCurrency_$37481_storage_ptr",
                  "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 35019,
            "nodeType": "VariableDeclaration",
            "src": "1916:49:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "530dd392",
            "mutability": "mutable",
            "name": "cachedIdentifiers",
            "nameLocation": "1948:17:51",
            "scope": 36273,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 35018,
              "keyType": {
                "id": 35016,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1924:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1916:24:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 35017,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1935:4:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 35024,
            "nodeType": "VariableDeclaration",
            "src": "1972:47:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "d60715b5",
            "mutability": "mutable",
            "name": "assertions",
            "nameLocation": "2009:10:51",
            "scope": 36273,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
              "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion)"
            },
            "typeName": {
              "id": 35023,
              "keyType": {
                "id": 35020,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1980:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1972:29:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion)"
              },
              "valueType": {
                "id": 35022,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 35021,
                  "name": "Assertion",
                  "nameLocations": [
                    "1991:9:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37476,
                  "src": "1991:9:51"
                },
                "referencedDeclaration": 37476,
                "src": "1991:9:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                  "typeString": "struct OptimisticOracleV3Interface.Assertion"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 35026,
            "nodeType": "VariableDeclaration",
            "src": "2078:35:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "08e7c3e6",
            "mutability": "mutable",
            "name": "burnedBondPercentage",
            "nameLocation": "2093:20:51",
            "scope": 36273,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35025,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2078:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35029,
            "nodeType": "VariableDeclaration",
            "src": "2206:58:51",
            "nodes": [],
            "baseFunctions": [
              37487
            ],
            "constant": true,
            "functionSelector": "d509b017",
            "mutability": "constant",
            "name": "defaultIdentifier",
            "nameLocation": "2230:17:51",
            "scope": 36273,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 35027,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2206:7:51",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "4153534552545f5452555448",
              "id": 35028,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2250:14:51",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_269e5819b5f3de6f4d8e3feca7553924310a9b68d3029a8b150499d5fb3ebaf5",
                "typeString": "literal_string \"ASSERT_TRUTH\""
              },
              "value": "ASSERT_TRUTH"
            },
            "visibility": "public"
          },
          {
            "id": 35032,
            "nodeType": "VariableDeclaration",
            "src": "2270:43:51",
            "nodes": [],
            "constant": true,
            "functionSelector": "da03b36e",
            "mutability": "constant",
            "name": "numericalTrue",
            "nameLocation": "2293:13:51",
            "scope": 36273,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 35030,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "2270:6:51",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 35031,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2309:4:51",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 35035,
            "nodeType": "VariableDeclaration",
            "src": "2356:29:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "20402e1d",
            "mutability": "mutable",
            "name": "defaultCurrency",
            "nameLocation": "2370:15:51",
            "scope": 36273,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$29195",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 35034,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35033,
                "name": "IERC20",
                "nameLocations": [
                  "2356:6:51"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29195,
                "src": "2356:6:51"
              },
              "referencedDeclaration": 29195,
              "src": "2356:6:51",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$29195",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35037,
            "nodeType": "VariableDeclaration",
            "src": "2391:29:51",
            "nodes": [],
            "constant": false,
            "functionSelector": "fe4e1983",
            "mutability": "mutable",
            "name": "defaultLiveness",
            "nameLocation": "2405:15:51",
            "scope": 36273,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 35036,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2391:6:51",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35060,
            "nodeType": "FunctionDefinition",
            "src": "2797:222:51",
            "nodes": [],
            "body": {
              "id": 35059,
              "nodeType": "Block",
              "src": "2914:105:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 35051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35049,
                      "name": "finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35008,
                      "src": "2924:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FinderInterface_$34435",
                        "typeString": "contract FinderInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35050,
                      "name": "_finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35041,
                      "src": "2933:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FinderInterface_$34435",
                        "typeString": "contract FinderInterface"
                      }
                    },
                    "src": "2924:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FinderInterface_$34435",
                      "typeString": "contract FinderInterface"
                    }
                  },
                  "id": 35052,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:16:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35054,
                        "name": "_defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35044,
                        "src": "2969:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$29195",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 35055,
                        "name": "_defaultLiveness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35046,
                        "src": "2987:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "302e35653138",
                        "id": 35056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3005:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$29195",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "id": 35053,
                      "name": "setAdminProperties",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35114,
                      "src": "2950:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$29195_$_t_uint64_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint64,uint256)"
                      }
                    },
                    "id": 35057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:62:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35058,
                  "nodeType": "ExpressionStatement",
                  "src": "2950:62:51"
                }
              ]
            },
            "documentation": {
              "id": 35038,
              "nodeType": "StructuredDocumentation",
              "src": "2427:365:51",
              "text": " @notice Construct the OptimisticOracleV3 contract.\n @param _finder keeps track of all contracts within the UMA system based on their interfaceName.\n @param _defaultCurrency the default currency to bond asserters in assertTruthWithDefaults.\n @param _defaultLiveness the default liveness for assertions in assertTruthWithDefaults."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 35047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35041,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nameLocation": "2834:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35060,
                  "src": "2818:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FinderInterface_$34435",
                    "typeString": "contract FinderInterface"
                  },
                  "typeName": {
                    "id": 35040,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35039,
                      "name": "FinderInterface",
                      "nameLocations": [
                        "2818:15:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34435,
                      "src": "2818:15:51"
                    },
                    "referencedDeclaration": 34435,
                    "src": "2818:15:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FinderInterface_$34435",
                      "typeString": "contract FinderInterface"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35044,
                  "mutability": "mutable",
                  "name": "_defaultCurrency",
                  "nameLocation": "2858:16:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35060,
                  "src": "2851:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$29195",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 35043,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35042,
                      "name": "IERC20",
                      "nameLocations": [
                        "2851:6:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29195,
                      "src": "2851:6:51"
                    },
                    "referencedDeclaration": 29195,
                    "src": "2851:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$29195",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35046,
                  "mutability": "mutable",
                  "name": "_defaultLiveness",
                  "nameLocation": "2891:16:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35060,
                  "src": "2884:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 35045,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2808:105:51"
            },
            "returnParameters": {
              "id": 35048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2914:0:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35114,
            "nodeType": "FunctionDefinition",
            "src": "3496:622:51",
            "nodes": [],
            "body": {
              "id": 35113,
              "nodeType": "Block",
              "src": "3652:466:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35074,
                          "name": "_burnedBondPercentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35068,
                          "src": "3670:21:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 35075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3695:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "3670:29:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275726e656420626f6e642070657263656e74616765203e20313030",
                        "id": 35077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3701:30:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f6520715bfc21a83ea874c96105412f4ba76e98bfb9e357c8c354b6dec32a2c",
                          "typeString": "literal_string \"Burned bond percentage > 100\""
                        },
                        "value": "Burned bond percentage > 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f6520715bfc21a83ea874c96105412f4ba76e98bfb9e357c8c354b6dec32a2c",
                          "typeString": "literal_string \"Burned bond percentage > 100\""
                        }
                      ],
                      "id": 35073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3662:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3662:70:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35079,
                  "nodeType": "ExpressionStatement",
                  "src": "3662:70:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35081,
                          "name": "_burnedBondPercentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35068,
                          "src": "3750:21:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 35082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3774:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3750:25:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4275726e656420626f6e642070657263656e746167652069732030",
                        "id": 35084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3777:29:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66d19cc73d041b0b5f257705ca882a93ae3f1b04e574c2663314b4f519eb2a40",
                          "typeString": "literal_string \"Burned bond percentage is 0\""
                        },
                        "value": "Burned bond percentage is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66d19cc73d041b0b5f257705ca882a93ae3f1b04e574c2663314b4f519eb2a40",
                          "typeString": "literal_string \"Burned bond percentage is 0\""
                        }
                      ],
                      "id": 35080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3742:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:65:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35086,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:65:51"
                },
                {
                  "expression": {
                    "id": 35089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35087,
                      "name": "burnedBondPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35026,
                      "src": "3817:20:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35088,
                      "name": "_burnedBondPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35068,
                      "src": "3840:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3817:44:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35090,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:44:51"
                },
                {
                  "expression": {
                    "id": 35093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35091,
                      "name": "defaultCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35035,
                      "src": "3871:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$29195",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35092,
                      "name": "_defaultCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35064,
                      "src": "3889:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$29195",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3871:34:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$29195",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 35094,
                  "nodeType": "ExpressionStatement",
                  "src": "3871:34:51"
                },
                {
                  "expression": {
                    "id": 35097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35095,
                      "name": "defaultLiveness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35037,
                      "src": "3915:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35096,
                      "name": "_defaultLiveness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35066,
                      "src": "3933:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3915:34:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 35098,
                  "nodeType": "ExpressionStatement",
                  "src": "3915:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35100,
                        "name": "defaultIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35029,
                        "src": "3973:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35103,
                            "name": "_defaultCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35064,
                            "src": "4000:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$29195",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$29195",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 35102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3992:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35101,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3992:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3992:25:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35099,
                      "name": "syncUmaParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35734,
                      "src": "3959:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 35105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3959:59:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35106,
                  "nodeType": "ExpressionStatement",
                  "src": "3959:59:51"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 35108,
                        "name": "_defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35064,
                        "src": "4053:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$29195",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 35109,
                        "name": "_defaultLiveness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35066,
                        "src": "4071:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 35110,
                        "name": "_burnedBondPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35068,
                        "src": "4089:21:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$29195",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35107,
                      "name": "AdminPropertiesSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37623,
                      "src": "4034:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$29195_$_t_uint64_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint64,uint256)"
                      }
                    },
                    "id": 35111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4034:77:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35112,
                  "nodeType": "EmitStatement",
                  "src": "4029:82:51"
                }
              ]
            },
            "documentation": {
              "id": 35061,
              "nodeType": "StructuredDocumentation",
              "src": "3025:466:51",
              "text": " @notice Sets the default currency, liveness, and burned bond percentage.\n @dev Only callable by the contract owner (UMA governor).\n @param _defaultCurrency the default currency to bond asserters in assertTruthWithDefaults.\n @param _defaultLiveness the default liveness for assertions in assertTruthWithDefaults.\n @param _burnedBondPercentage the percentage of the bond that is sent as fee to UMA Store contract on disputes."
            },
            "functionSelector": "82762520",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35071,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35070,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3642:9:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28449,
                  "src": "3642:9:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "3642:9:51"
              }
            ],
            "name": "setAdminProperties",
            "nameLocation": "3505:18:51",
            "parameters": {
              "id": 35069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35064,
                  "mutability": "mutable",
                  "name": "_defaultCurrency",
                  "nameLocation": "3540:16:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35114,
                  "src": "3533:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$29195",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 35063,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35062,
                      "name": "IERC20",
                      "nameLocations": [
                        "3533:6:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29195,
                      "src": "3533:6:51"
                    },
                    "referencedDeclaration": 29195,
                    "src": "3533:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$29195",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35066,
                  "mutability": "mutable",
                  "name": "_defaultLiveness",
                  "nameLocation": "3573:16:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35114,
                  "src": "3566:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 35065,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3566:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35068,
                  "mutability": "mutable",
                  "name": "_burnedBondPercentage",
                  "nameLocation": "3607:21:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35114,
                  "src": "3599:29:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3523:111:51"
            },
            "returnParameters": {
              "id": 35072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3652:0:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35151,
            "nodeType": "FunctionDefinition",
            "src": "4950:569:51",
            "nodes": [],
            "body": {
              "id": 35150,
              "nodeType": "Block",
              "src": "5050:469:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35125,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35117,
                        "src": "5170:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 35126,
                        "name": "asserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35119,
                        "src": "5193:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 35129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5239:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 35128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5231:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5231:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5231:10:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 35133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5288:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 35132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5280:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35131,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5280:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5280:10:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35135,
                        "name": "defaultLiveness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35037,
                        "src": "5329:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 35136,
                        "name": "defaultCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35035,
                        "src": "5362:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$29195",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35140,
                                "name": "defaultCurrency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35035,
                                "src": "5418:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$29195",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$29195",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 35139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5410:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35138,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5410:7:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5410:24:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 35137,
                          "name": "getMinimumBond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35833,
                          "src": "5395:14:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 35142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5395:40:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35143,
                        "name": "defaultIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35029,
                        "src": "5453:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 35146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5496:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 35145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5488:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 35144,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5488:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5488:10:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$29195",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 35124,
                      "name": "assertTruth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35354,
                      "src": "5141:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$29195_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory,address,address,address,uint64,contract IERC20,uint256,bytes32,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 35148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5141:371:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 35123,
                  "id": 35149,
                  "nodeType": "Return",
                  "src": "5122:390:51"
                }
              ]
            },
            "baseFunctions": [
              37506
            ],
            "documentation": {
              "id": 35115,
              "nodeType": "StructuredDocumentation",
              "src": "4124:820:51",
              "text": " @notice Asserts a truth about the world, using the default currency and liveness. No callback recipient or\n escalation manager is enabled. The caller is expected to provide a bond of finalFee/burnedBondPercentage\n (with burnedBondPercentage set to 50%, the bond is 2x final fee) of the default currency.\n @dev The caller must approve this contract to spend at least the result of getMinimumBond(defaultCurrency).\n @param claim the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\n @param asserter account that receives bonds back at settlement. This could be msg.sender or\n any other account that the caller wants to receive the bond at settlement time.\n @return assertionId unique identifier for this assertion."
            },
            "functionSelector": "36b13af4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertTruthWithDefaults",
            "nameLocation": "4959:23:51",
            "parameters": {
              "id": 35120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35117,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "4998:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35151,
                  "src": "4983:20:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35116,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4983:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35119,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "5013:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35151,
                  "src": "5005:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5005:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4982:40:51"
            },
            "returnParameters": {
              "id": 35123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35122,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35151,
                  "src": "5041:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35121,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5041:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5040:9:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35354,
            "nodeType": "FunctionDefinition",
            "src": "7830:3495:51",
            "nodes": [],
            "body": {
              "id": 35353,
              "nodeType": "Block",
              "src": "8157:3168:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35179,
                      "mutability": "mutable",
                      "name": "time",
                      "nameLocation": "8174:4:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35353,
                      "src": "8167:11:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 35178,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "8167:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35185,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 35182,
                          "name": "getCurrentTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35797,
                          "src": "8188:14:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 35183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8188:16:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8181:6:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 35180,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "8181:6:51",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8181:24:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8167:38:51"
                },
                {
                  "expression": {
                    "id": 35197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35186,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35176,
                      "src": "8215:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 35188,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35154,
                          "src": "8236:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 35189,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35167,
                          "src": "8243:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 35190,
                          "name": "time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35179,
                          "src": "8249:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 35191,
                          "name": "liveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35162,
                          "src": "8255:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 35192,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35165,
                          "src": "8265:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$29195",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 35193,
                          "name": "callbackRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35158,
                          "src": "8275:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 35194,
                          "name": "escalationManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35160,
                          "src": "8294:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 35195,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35169,
                          "src": "8313:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$29195",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 35187,
                        "name": "_getId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35872,
                        "src": "8229:6:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint64_$_t_contract$_IERC20_$29195_$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory,uint256,uint256,uint64,contract IERC20,address,address,bytes32) view returns (bytes32)"
                        }
                      },
                      "id": 35196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8229:95:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8215:109:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 35198,
                  "nodeType": "ExpressionStatement",
                  "src": "8215:109:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35200,
                          "name": "asserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35156,
                          "src": "8343:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8363:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8355:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35201,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8355:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8355:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8343:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41737365727465722063616e742062652030",
                        "id": 35206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8367:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0234c135012fb3755def154bb30104da7ebfac4a11585b6f026b2c56a11be8d",
                          "typeString": "literal_string \"Asserter cant be 0\""
                        },
                        "value": "Asserter cant be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0234c135012fb3755def154bb30104da7ebfac4a11585b6f026b2c56a11be8d",
                          "typeString": "literal_string \"Asserter cant be 0\""
                        }
                      ],
                      "id": 35199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8335:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8335:53:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35208,
                  "nodeType": "ExpressionStatement",
                  "src": "8335:53:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 35210,
                              "name": "assertions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35024,
                              "src": "8406:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                                "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                              }
                            },
                            "id": 35212,
                            "indexExpression": {
                              "id": 35211,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35176,
                              "src": "8417:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8406:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                            }
                          },
                          "id": 35213,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8430:8:51",
                          "memberName": "asserter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37454,
                          "src": "8406:32:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8450:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8442:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35214,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8442:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8442:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8406:46:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20616c726561647920657869737473",
                        "id": 35219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8454:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b",
                          "typeString": "literal_string \"Assertion already exists\""
                        },
                        "value": "Assertion already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b",
                          "typeString": "literal_string \"Assertion already exists\""
                        }
                      ],
                      "id": 35209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8398:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8398:83:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35221,
                  "nodeType": "ExpressionStatement",
                  "src": "8398:83:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35224,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35169,
                            "src": "8527:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 35223,
                          "name": "_validateAndCacheIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36131,
                          "src": "8499:27:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) returns (bool)"
                          }
                        },
                        "id": 35225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8499:39:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e737570706f72746564206964656e746966696572",
                        "id": 35226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8540:24:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da31e40595e58a270828c17cf5922a7cdf3f87cc205bb7ed884ae9ef249b2323",
                          "typeString": "literal_string \"Unsupported identifier\""
                        },
                        "value": "Unsupported identifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da31e40595e58a270828c17cf5922a7cdf3f87cc205bb7ed884ae9ef249b2323",
                          "typeString": "literal_string \"Unsupported identifier\""
                        }
                      ],
                      "id": 35222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8491:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8491:74:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35228,
                  "nodeType": "ExpressionStatement",
                  "src": "8491:74:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35233,
                                "name": "currency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35165,
                                "src": "8617:8:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$29195",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$29195",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 35232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8609:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35231,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8609:7:51",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8609:17:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 35230,
                          "name": "_validateAndCacheCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36174,
                          "src": "8583:25:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 35235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8583:44:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e737570706f727465642063757272656e6379",
                        "id": 35236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8629:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80ce5fa19698d94f2a822de02b7b66afaa53e69346874f7ea710d3e70d87e1b5",
                          "typeString": "literal_string \"Unsupported currency\""
                        },
                        "value": "Unsupported currency"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80ce5fa19698d94f2a822de02b7b66afaa53e69346874f7ea710d3e70d87e1b5",
                          "typeString": "literal_string \"Unsupported currency\""
                        }
                      ],
                      "id": 35229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8575:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8575:77:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35238,
                  "nodeType": "ExpressionStatement",
                  "src": "8575:77:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35240,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35167,
                          "src": "8670:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 35244,
                                  "name": "currency",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35165,
                                  "src": "8701:8:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$29195",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$29195",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 35243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8693:7:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 35242,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8693:7:51",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 35245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8693:17:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 35241,
                            "name": "getMinimumBond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35833,
                            "src": "8678:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 35246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8678:33:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8670:41:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f6e6420616d6f756e7420746f6f206c6f77",
                        "id": 35248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8713:21:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98c3dd34cdd2cbf80a44938b826d2bd39190a9d72c587d44c2b731a12c01a858",
                          "typeString": "literal_string \"Bond amount too low\""
                        },
                        "value": "Bond amount too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98c3dd34cdd2cbf80a44938b826d2bd39190a9d72c587d44c2b731a12c01a858",
                          "typeString": "literal_string \"Bond amount too low\""
                        }
                      ],
                      "id": 35239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8662:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8662:73:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35250,
                  "nodeType": "ExpressionStatement",
                  "src": "8662:73:51"
                },
                {
                  "expression": {
                    "id": 35280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 35251,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35024,
                        "src": "8746:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                          "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                        }
                      },
                      "id": 35253,
                      "indexExpression": {
                        "id": 35252,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35176,
                        "src": "8757:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8746:23:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "66616c7365",
                              "id": 35256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8898:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 35257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8983:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 35258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9073:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 35259,
                              "name": "escalationManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35160,
                              "src": "9168:17:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 35260,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9220:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 35261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9224:6:51",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9220:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 35255,
                            "name": "EscalationManagerSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37449,
                            "src": "8823:25:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_EscalationManagerSettings_$37449_storage_ptr_$",
                              "typeString": "type(struct OptimisticOracleV3Interface.EscalationManagerSettings storage pointer)"
                            }
                          },
                          "id": 35262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "8867:29:51",
                            "8968:13:51",
                            "9054:17:51",
                            "9149:17:51",
                            "9203:15:51"
                          ],
                          "names": [
                            "arbitrateViaEscalationManager",
                            "discardOracle",
                            "validateDisputers",
                            "escalationManager",
                            "assertingCaller"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "8823:422:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_memory_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings memory"
                          }
                        },
                        {
                          "id": 35263,
                          "name": "asserter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35156,
                          "src": "9269:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9309:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9301:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35264,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9301:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9301:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 35268,
                          "name": "callbackRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35158,
                          "src": "9344:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 35269,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35165,
                          "src": "9385:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$29195",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 35270,
                          "name": "domainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35171,
                          "src": "9417:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 35271,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35169,
                          "src": "9451:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 35272,
                          "name": "bond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35167,
                          "src": "9481:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 35273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9508:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 35274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9549:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "id": 35275,
                          "name": "time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35179,
                          "src": "9583:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 35278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 35276,
                            "name": "time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35179,
                            "src": "9617:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 35277,
                            "name": "liveness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35162,
                            "src": "9624:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "9617:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_memory_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$29195",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 35254,
                        "name": "Assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37476,
                        "src": "8772:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Assertion_$37476_storage_ptr_$",
                          "typeString": "type(struct OptimisticOracleV3Interface.Assertion storage pointer)"
                        }
                      },
                      "id": 35279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "8796:25:51",
                        "9259:8:51",
                        "9291:8:51",
                        "9325:17:51",
                        "9375:8:51",
                        "9407:8:51",
                        "9439:10:51",
                        "9475:4:51",
                        "9499:7:51",
                        "9527:20:51",
                        "9568:13:51",
                        "9601:14:51"
                      ],
                      "names": [
                        "escalationManagerSettings",
                        "asserter",
                        "disputer",
                        "callbackRecipient",
                        "currency",
                        "domainId",
                        "identifier",
                        "bond",
                        "settled",
                        "settlementResolution",
                        "assertionTime",
                        "expirationTime"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "8772:871:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$37476_memory_ptr",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                      }
                    },
                    "src": "8746:897:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                    }
                  },
                  "id": 35281,
                  "nodeType": "ExpressionStatement",
                  "src": "8746:897:51"
                },
                {
                  "id": 35323,
                  "nodeType": "Block",
                  "src": "9654:1256:51",
                  "statements": [
                    {
                      "assignments": [
                        35286
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 35286,
                          "mutability": "mutable",
                          "name": "assertionPolicy",
                          "nameLocation": "9718:15:51",
                          "nodeType": "VariableDeclaration",
                          "scope": 35323,
                          "src": "9668:65:51",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AssertionPolicy_$37374_memory_ptr",
                            "typeString": "struct EscalationManagerInterface.AssertionPolicy"
                          },
                          "typeName": {
                            "id": 35285,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 35284,
                              "name": "EscalationManagerInterface.AssertionPolicy",
                              "nameLocations": [
                                "9668:26:51",
                                "9695:15:51"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 37374,
                              "src": "9668:42:51"
                            },
                            "referencedDeclaration": 37374,
                            "src": "9668:42:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AssertionPolicy_$37374_storage_ptr",
                              "typeString": "struct EscalationManagerInterface.AssertionPolicy"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 35290,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 35288,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35176,
                            "src": "9756:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 35287,
                          "name": "_getAssertionPolicy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36060,
                          "src": "9736:19:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_AssertionPolicy_$37374_memory_ptr_$",
                            "typeString": "function (bytes32) view returns (struct EscalationManagerInterface.AssertionPolicy memory)"
                          }
                        },
                        "id": 35289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9736:32:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssertionPolicy_$37374_memory_ptr",
                          "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9668:100:51"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 35294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "9790:31:51",
                            "subExpression": {
                              "expression": {
                                "id": 35292,
                                "name": "assertionPolicy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35286,
                                "src": "9791:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AssertionPolicy_$37374_memory_ptr",
                                  "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                                }
                              },
                              "id": 35293,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9807:14:51",
                              "memberName": "blockAssertion",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37367,
                              "src": "9791:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "417373657274696f6e206e6f7420616c6c6f776564",
                            "id": 35295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9823:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_67cae8afe3a26970afe461cd427d6cfe1f4388125865d7d236dc4a5b3b23aa35",
                              "typeString": "literal_string \"Assertion not allowed\""
                            },
                            "value": "Assertion not allowed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_67cae8afe3a26970afe461cd427d6cfe1f4388125865d7d236dc4a5b3b23aa35",
                              "typeString": "literal_string \"Assertion not allowed\""
                            }
                          ],
                          "id": 35291,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "9782:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 35296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9782:65:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 35297,
                      "nodeType": "ExpressionStatement",
                      "src": "9782:65:51"
                    },
                    {
                      "assignments": [
                        35300
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 35300,
                          "mutability": "mutable",
                          "name": "emSettings",
                          "nameLocation": "9935:10:51",
                          "nodeType": "VariableDeclaration",
                          "scope": 35323,
                          "src": "9901:44:51",
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings"
                          },
                          "typeName": {
                            "id": 35299,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 35298,
                              "name": "EscalationManagerSettings",
                              "nameLocations": [
                                "9901:25:51"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 37449,
                              "src": "9901:25:51"
                            },
                            "referencedDeclaration": 37449,
                            "src": "9901:25:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 35305,
                      "initialValue": {
                        "expression": {
                          "baseExpression": {
                            "id": 35301,
                            "name": "assertions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35024,
                            "src": "9948:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                              "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                            }
                          },
                          "id": 35303,
                          "indexExpression": {
                            "id": 35302,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35176,
                            "src": "9959:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9948:23:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                          }
                        },
                        "id": 35304,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9972:25:51",
                        "memberName": "escalationManagerSettings",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37452,
                        "src": "9948:49:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage",
                          "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9901:96:51"
                    },
                    {
                      "expression": {
                        "id": 35321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "components": [
                            {
                              "expression": {
                                "id": 35306,
                                "name": "emSettings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35300,
                                "src": "10012:10:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage pointer"
                                }
                              },
                              "id": 35308,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "10023:29:51",
                              "memberName": "arbitrateViaEscalationManager",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37440,
                              "src": "10012:40:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 35309,
                                "name": "emSettings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35300,
                                "src": "10054:10:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage pointer"
                                }
                              },
                              "id": 35310,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "10065:13:51",
                              "memberName": "discardOracle",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37442,
                              "src": "10054:24:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 35311,
                                "name": "emSettings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35300,
                                "src": "10080:10:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage pointer"
                                }
                              },
                              "id": 35312,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "10091:17:51",
                              "memberName": "validateDisputers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37444,
                              "src": "10080:28:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 35313,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "TupleExpression",
                          "src": "10011:98:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$",
                            "typeString": "tuple(bool,bool,bool)"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "components": [
                            {
                              "expression": {
                                "id": 35314,
                                "name": "assertionPolicy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35286,
                                "src": "10359:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AssertionPolicy_$37374_memory_ptr",
                                  "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                                }
                              },
                              "id": 35315,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10375:29:51",
                              "memberName": "arbitrateViaEscalationManager",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37369,
                              "src": "10359:45:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 35316,
                                "name": "assertionPolicy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35286,
                                "src": "10618:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AssertionPolicy_$37374_memory_ptr",
                                  "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                                }
                              },
                              "id": 35317,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10634:13:51",
                              "memberName": "discardOracle",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37371,
                              "src": "10618:29:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 35318,
                                "name": "assertionPolicy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35286,
                                "src": "10852:15:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AssertionPolicy_$37374_memory_ptr",
                                  "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                                }
                              },
                              "id": 35319,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10868:17:51",
                              "memberName": "validateDisputers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37373,
                              "src": "10852:33:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 35320,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10112:787:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_bool_$",
                            "typeString": "tuple(bool,bool,bool)"
                          }
                        },
                        "src": "10011:888:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 35322,
                      "nodeType": "ExpressionStatement",
                      "src": "10011:888:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 35327,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10946:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10950:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10946:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35331,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10966:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$36273",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$36273",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          ],
                          "id": 35330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10958:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10958:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10958:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35333,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35167,
                        "src": "10973:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 35324,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35165,
                        "src": "10920:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$29195",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 35326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10929:16:51",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29314,
                      "src": "10920:25:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$29195_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$29195_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 35334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10920:58:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35335,
                  "nodeType": "ExpressionStatement",
                  "src": "10920:58:51"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 35337,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35176,
                        "src": "11055:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 35338,
                        "name": "domainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35171,
                        "src": "11080:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 35339,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35154,
                        "src": "11102:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 35340,
                        "name": "asserter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35156,
                        "src": "11121:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35341,
                        "name": "callbackRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35158,
                        "src": "11143:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35342,
                        "name": "escalationManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35160,
                        "src": "11174:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 35343,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11205:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11209:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11205:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 35347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35345,
                          "name": "time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35179,
                          "src": "11229:4:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 35346,
                          "name": "liveness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35162,
                          "src": "11236:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "11229:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 35348,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35165,
                        "src": "11258:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$29195",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 35349,
                        "name": "bond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35167,
                        "src": "11280:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35350,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35169,
                        "src": "11298:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$29195",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 35336,
                      "name": "AssertionMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37594,
                      "src": "11028:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint64_$_t_contract$_IERC20_$29195_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32,bytes memory,address,address,address,address,uint64,contract IERC20,uint256,bytes32)"
                      }
                    },
                    "id": 35351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11028:290:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35352,
                  "nodeType": "EmitStatement",
                  "src": "11023:295:51"
                }
              ]
            },
            "baseFunctions": [
              37531
            ],
            "documentation": {
              "id": 35152,
              "nodeType": "StructuredDocumentation",
              "src": "5525:2300:51",
              "text": " @notice Asserts a truth about the world, using a fully custom configuration.\n @dev The caller must approve this contract to spend at least bond amount of currency.\n @param claim the truth claim being asserted. This is an assertion about the world, and is verified by disputers.\n @param asserter account that receives bonds back at settlement. This could be msg.sender or\n any other account that the caller wants to receive the bond at settlement time.\n @param callbackRecipient if configured, this address will receive a function call assertionResolvedCallback and\n assertionDisputedCallback at resolution or dispute respectively. Enables dynamic responses to these events. The\n recipient _must_ implement these callbacks and not revert or the assertion resolution will be blocked.\n @param escalationManager if configured, this address will control escalation properties of the assertion. This\n means a) choosing to arbitrate via the UMA DVM, b) choosing to discard assertions on dispute, or choosing to\n validate disputes. Combining these, the asserter can define their own security properties for the assertion.\n escalationManager also _must_ implement the same callbacks as callbackRecipient.\n @param liveness time to wait before the assertion can be resolved. Assertion can be disputed in this time.\n @param currency bond currency pulled from the caller and held in escrow until the assertion is resolved.\n @param bond amount of currency to pull from the caller and hold in escrow until the assertion is resolved. This\n must be >= getMinimumBond(address(currency)).\n @param identifier UMA DVM identifier to use for price requests in the event of a dispute. Must be pre-approved.\n @param domainId optional domain that can be used to relate this assertion to others in the escalationManager and\n can be used by the configured escalationManager to define custom behavior for groups of assertions. This is\n typically used for \"escalation games\" by changing bonds or other assertion properties based on the other\n assertions that have come before. If not needed this value should be 0 to save gas.\n @return assertionId unique identifier for this assertion."
            },
            "functionSelector": "6457c979",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35173,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "8114:12:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32774,
                  "src": "8114:12:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "8114:12:51"
              }
            ],
            "name": "assertTruth",
            "nameLocation": "7839:11:51",
            "parameters": {
              "id": 35172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35154,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "7873:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35354,
                  "src": "7860:18:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35153,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7860:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35156,
                  "mutability": "mutable",
                  "name": "asserter",
                  "nameLocation": "7896:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35354,
                  "src": "7888:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7888:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35158,
                  "mutability": "mutable",
                  "name": "callbackRecipient",
                  "nameLocation": "7922:17:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35354,
                  "src": "7914:25:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7914:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35160,
                  "mutability": "mutable",
                  "name": "escalationManager",
                  "nameLocation": "7957:17:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35354,
                  "src": "7949:25:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7949:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35162,
                  "mutability": "mutable",
                  "name": "liveness",
                  "nameLocation": "7991:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35354,
                  "src": "7984:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 35161,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7984:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35165,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "8016:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35354,
                  "src": "8009:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$29195",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 35164,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35163,
                      "name": "IERC20",
                      "nameLocations": [
                        "8009:6:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29195,
                      "src": "8009:6:51"
                    },
                    "referencedDeclaration": 29195,
                    "src": "8009:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$29195",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35167,
                  "mutability": "mutable",
                  "name": "bond",
                  "nameLocation": "8042:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35354,
                  "src": "8034:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8034:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35169,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "8064:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35354,
                  "src": "8056:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35168,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8056:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35171,
                  "mutability": "mutable",
                  "name": "domainId",
                  "nameLocation": "8092:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35354,
                  "src": "8084:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35170,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8084:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7850:256:51"
            },
            "returnParameters": {
              "id": 35177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35176,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "8144:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35354,
                  "src": "8136:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35175,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8136:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8135:21:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35469,
            "nodeType": "FunctionDefinition",
            "src": "11787:1058:51",
            "nodes": [],
            "body": {
              "id": 35468,
              "nodeType": "Block",
              "src": "11874:971:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35365,
                          "name": "disputer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35359,
                          "src": "11892:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11912:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11904:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35366,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11904:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11904:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11892:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370757465722063616e27742062652030",
                        "id": 35371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11916:21:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1987bde94e9230c1d030be9ab544e72fae1cb7695824bc9848b9d3c3933b5c8",
                          "typeString": "literal_string \"Disputer can't be 0\""
                        },
                        "value": "Disputer can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1987bde94e9230c1d030be9ab544e72fae1cb7695824bc9848b9d3c3933b5c8",
                          "typeString": "literal_string \"Disputer can't be 0\""
                        }
                      ],
                      "id": 35364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11884:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11884:54:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35373,
                  "nodeType": "ExpressionStatement",
                  "src": "11884:54:51"
                },
                {
                  "assignments": [
                    35376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35376,
                      "mutability": "mutable",
                      "name": "assertion",
                      "nameLocation": "11966:9:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35468,
                      "src": "11948:27:51",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion"
                      },
                      "typeName": {
                        "id": 35375,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 35374,
                          "name": "Assertion",
                          "nameLocations": [
                            "11948:9:51"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37476,
                          "src": "11948:9:51"
                        },
                        "referencedDeclaration": 37476,
                        "src": "11948:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35380,
                  "initialValue": {
                    "baseExpression": {
                      "id": 35377,
                      "name": "assertions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35024,
                      "src": "11978:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                      }
                    },
                    "id": 35379,
                    "indexExpression": {
                      "id": 35378,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35357,
                      "src": "11989:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11978:23:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11948:53:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 35382,
                            "name": "assertion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35376,
                            "src": "12019:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                            }
                          },
                          "id": 35383,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12029:8:51",
                          "memberName": "asserter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37454,
                          "src": "12019:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12049:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12041:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35384,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12041:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12041:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12019:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20646f6573206e6f74206578697374",
                        "id": 35389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12053:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f54d907407dcd7c4579621d4948bc84ba3a2e0d10e71cf8bd20da70bac08816",
                          "typeString": "literal_string \"Assertion does not exist\""
                        },
                        "value": "Assertion does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f54d907407dcd7c4579621d4948bc84ba3a2e0d10e71cf8bd20da70bac08816",
                          "typeString": "literal_string \"Assertion does not exist\""
                        }
                      ],
                      "id": 35381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12011:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12011:69:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35391,
                  "nodeType": "ExpressionStatement",
                  "src": "12011:69:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 35393,
                            "name": "assertion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35376,
                            "src": "12098:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                            }
                          },
                          "id": 35394,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12108:8:51",
                          "memberName": "disputer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37475,
                          "src": "12098:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12128:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12120:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12120:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12120:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12098:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20616c7265616479206469737075746564",
                        "id": 35400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12132:28:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9bf33f3a274f84175cacd422f11bfa11d326bbc2610e6d123b6ddb9d32a3e3a9",
                          "typeString": "literal_string \"Assertion already disputed\""
                        },
                        "value": "Assertion already disputed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9bf33f3a274f84175cacd422f11bfa11d326bbc2610e6d123b6ddb9d32a3e3a9",
                          "typeString": "literal_string \"Assertion already disputed\""
                        }
                      ],
                      "id": 35392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12090:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12090:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35402,
                  "nodeType": "ExpressionStatement",
                  "src": "12090:71:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 35408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 35404,
                            "name": "assertion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35376,
                            "src": "12179:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                            }
                          },
                          "id": 35405,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12189:14:51",
                          "memberName": "expirationTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37463,
                          "src": "12179:24:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35406,
                            "name": "getCurrentTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35797,
                            "src": "12206:14:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 35407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12206:16:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12179:43:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e2069732065787069726564",
                        "id": 35409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12224:22:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43493127d84372e8eb1d3ed0764d26f77e6258907b4c30833f5804d09487408a",
                          "typeString": "literal_string \"Assertion is expired\""
                        },
                        "value": "Assertion is expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43493127d84372e8eb1d3ed0764d26f77e6258907b4c30833f5804d09487408a",
                          "typeString": "literal_string \"Assertion is expired\""
                        }
                      ],
                      "id": 35403,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12171:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12171:76:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35411,
                  "nodeType": "ExpressionStatement",
                  "src": "12171:76:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35414,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35357,
                            "src": "12283:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 35413,
                          "name": "_isDisputeAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36103,
                          "src": "12265:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view returns (bool)"
                          }
                        },
                        "id": 35415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12265:30:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370757465206e6f7420616c6c6f776564",
                        "id": 35416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12297:21:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f43a5e3d636ffe5d2de0897219b047d3459e48009c73908451af57b81b75d885",
                          "typeString": "literal_string \"Dispute not allowed\""
                        },
                        "value": "Dispute not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f43a5e3d636ffe5d2de0897219b047d3459e48009c73908451af57b81b75d885",
                          "typeString": "literal_string \"Dispute not allowed\""
                        }
                      ],
                      "id": 35412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12257:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12257:62:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35418,
                  "nodeType": "ExpressionStatement",
                  "src": "12257:62:51"
                },
                {
                  "expression": {
                    "id": 35423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 35419,
                        "name": "assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35376,
                        "src": "12330:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                        }
                      },
                      "id": 35421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12340:8:51",
                      "memberName": "disputer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37475,
                      "src": "12330:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35422,
                      "name": "disputer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35359,
                      "src": "12351:8:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12330:29:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 35424,
                  "nodeType": "ExpressionStatement",
                  "src": "12330:29:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 35430,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12406:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12410:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12406:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35434,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12426:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$36273",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticOracleV3_$36273",
                              "typeString": "contract OptimisticOracleV3"
                            }
                          ],
                          "id": 35433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12418:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35432,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12418:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12418:13:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 35436,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35376,
                          "src": "12433:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                          }
                        },
                        "id": 35437,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12443:4:51",
                        "memberName": "bond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37471,
                        "src": "12433:14:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 35425,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35376,
                          "src": "12370:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                          }
                        },
                        "id": 35428,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12380:8:51",
                        "memberName": "currency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37461,
                        "src": "12370:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$29195",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 35429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12389:16:51",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29314,
                      "src": "12370:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$29195_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$29195_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 35438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12370:78:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35439,
                  "nodeType": "ExpressionStatement",
                  "src": "12370:78:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35441,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35357,
                        "src": "12479:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 35442,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35376,
                          "src": "12492:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                          }
                        },
                        "id": 35443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12502:10:51",
                        "memberName": "identifier",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37469,
                        "src": "12492:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 35444,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35376,
                          "src": "12514:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                          }
                        },
                        "id": 35445,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12524:13:51",
                        "memberName": "assertionTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37456,
                        "src": "12514:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 35440,
                      "name": "_oracleRequestPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35986,
                      "src": "12459:19:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,bytes32,uint256)"
                      }
                    },
                    "id": 35446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12459:79:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35447,
                  "nodeType": "ExpressionStatement",
                  "src": "12459:79:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35449,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35357,
                        "src": "12577:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 35448,
                      "name": "_callbackOnAssertionDispute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36272,
                      "src": "12549:27:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 35450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12549:40:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35451,
                  "nodeType": "ExpressionStatement",
                  "src": "12549:40:51"
                },
                {
                  "condition": {
                    "expression": {
                      "expression": {
                        "id": 35452,
                        "name": "assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35376,
                        "src": "12672:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                        }
                      },
                      "id": 35453,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12682:25:51",
                      "memberName": "escalationManagerSettings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37452,
                      "src": "12672:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage",
                        "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                      }
                    },
                    "id": 35454,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12708:13:51",
                    "memberName": "discardOracle",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37442,
                    "src": "12672:49:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35460,
                  "nodeType": "IfStatement",
                  "src": "12668:102:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 35456,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35357,
                          "src": "12751:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 35457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12764:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 35455,
                        "name": "_callbackOnAssertionResolve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36225,
                        "src": "12723:27:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                          "typeString": "function (bytes32,bool)"
                        }
                      },
                      "id": 35458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12723:47:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 35459,
                    "nodeType": "ExpressionStatement",
                    "src": "12723:47:51"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 35462,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35357,
                        "src": "12804:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 35463,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12817:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12821:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12817:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35465,
                        "name": "disputer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35359,
                        "src": "12829:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35461,
                      "name": "AssertionDisputed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37602,
                      "src": "12786:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 35466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12786:52:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35467,
                  "nodeType": "EmitStatement",
                  "src": "12781:57:51"
                }
              ]
            },
            "documentation": {
              "id": 35355,
              "nodeType": "StructuredDocumentation",
              "src": "11331:451:51",
              "text": " @notice Disputes an assertion. Depending on how the assertion was configured, this may either escalate to the UMA\n DVM or the configured escalation manager for arbitration.\n @dev The caller must approve this contract to spend at least bond amount of currency for the associated assertion.\n @param assertionId unique identifier for the assertion to dispute.\n @param disputer receives bonds back at settlement."
            },
            "functionSelector": "a6a22b43",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35362,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35361,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "11861:12:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32774,
                  "src": "11861:12:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "11861:12:51"
              }
            ],
            "name": "disputeAssertion",
            "nameLocation": "11796:16:51",
            "parameters": {
              "id": 35360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35357,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "11821:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35469,
                  "src": "11813:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35356,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11813:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35359,
                  "mutability": "mutable",
                  "name": "disputer",
                  "nameLocation": "11842:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35469,
                  "src": "11834:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11834:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11812:39:51"
            },
            "returnParameters": {
              "id": 35363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11874:0:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35661,
            "nodeType": "FunctionDefinition",
            "src": "13477:2449:51",
            "nodes": [],
            "body": {
              "id": 35660,
              "nodeType": "Block",
              "src": "13543:2383:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35479,
                      "mutability": "mutable",
                      "name": "assertion",
                      "nameLocation": "13571:9:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35660,
                      "src": "13553:27:51",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion"
                      },
                      "typeName": {
                        "id": 35478,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 35477,
                          "name": "Assertion",
                          "nameLocations": [
                            "13553:9:51"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37476,
                          "src": "13553:9:51"
                        },
                        "referencedDeclaration": 37476,
                        "src": "13553:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35483,
                  "initialValue": {
                    "baseExpression": {
                      "id": 35480,
                      "name": "assertions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35024,
                      "src": "13583:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                      }
                    },
                    "id": 35482,
                    "indexExpression": {
                      "id": 35481,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35472,
                      "src": "13594:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13583:23:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13553:53:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 35485,
                            "name": "assertion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35479,
                            "src": "13624:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                            }
                          },
                          "id": 35486,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13634:8:51",
                          "memberName": "asserter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37454,
                          "src": "13624:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13654:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13646:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35487,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13646:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13646:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13624:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20646f6573206e6f74206578697374",
                        "id": 35492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13658:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f54d907407dcd7c4579621d4948bc84ba3a2e0d10e71cf8bd20da70bac08816",
                          "typeString": "literal_string \"Assertion does not exist\""
                        },
                        "value": "Assertion does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f54d907407dcd7c4579621d4948bc84ba3a2e0d10e71cf8bd20da70bac08816",
                          "typeString": "literal_string \"Assertion does not exist\""
                        }
                      ],
                      "id": 35484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13616:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13616:69:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35494,
                  "nodeType": "ExpressionStatement",
                  "src": "13616:69:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13742:18:51",
                        "subExpression": {
                          "expression": {
                            "id": 35496,
                            "name": "assertion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35479,
                            "src": "13743:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                              "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                            }
                          },
                          "id": 35497,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13753:7:51",
                          "memberName": "settled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37458,
                          "src": "13743:17:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20616c726561647920736574746c6564",
                        "id": 35499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13762:27:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc3eeab377b6fc7c565178c54f47db2d9434a15b18ecd700a307a51a961d9204",
                          "typeString": "literal_string \"Assertion already settled\""
                        },
                        "value": "Assertion already settled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc3eeab377b6fc7c565178c54f47db2d9434a15b18ecd700a307a51a961d9204",
                          "typeString": "literal_string \"Assertion already settled\""
                        }
                      ],
                      "id": 35495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13734:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13734:56:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35501,
                  "nodeType": "ExpressionStatement",
                  "src": "13734:56:51"
                },
                {
                  "expression": {
                    "id": 35506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 35502,
                        "name": "assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35479,
                        "src": "13840:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                        }
                      },
                      "id": 35504,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13850:7:51",
                      "memberName": "settled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37458,
                      "src": "13840:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 35505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13860:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13840:24:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35507,
                  "nodeType": "ExpressionStatement",
                  "src": "13840:24:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 35514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 35508,
                        "name": "assertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35479,
                        "src": "13878:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                        }
                      },
                      "id": 35509,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13888:8:51",
                      "memberName": "disputer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37475,
                      "src": "13878:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 35512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13908:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 35511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13900:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 35510,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13900:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 35513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13900:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13878:32:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 35658,
                    "nodeType": "Block",
                    "src": "14385:1535:51",
                    "statements": [
                      {
                        "assignments": [
                          35558
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35558,
                            "mutability": "mutable",
                            "name": "resolvedPrice",
                            "nameLocation": "14487:13:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 35658,
                            "src": "14480:20:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 35557,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14480:6:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 35566,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 35560,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35472,
                              "src": "14519:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 35561,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "14532:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35562,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14542:10:51",
                              "memberName": "identifier",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37469,
                              "src": "14532:20:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 35563,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "14554:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35564,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14564:13:51",
                              "memberName": "assertionTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37456,
                              "src": "14554:23:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 35559,
                            "name": "_oracleGetPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36009,
                            "src": "14503:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$_t_int256_$",
                              "typeString": "function (bytes32,bytes32,uint256) view returns (int256)"
                            }
                          },
                          "id": 35565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14503:75:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14480:98:51"
                      },
                      {
                        "condition": {
                          "expression": {
                            "expression": {
                              "id": 35567,
                              "name": "assertion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35479,
                              "src": "14707:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                              }
                            },
                            "id": 35568,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14717:25:51",
                            "memberName": "escalationManagerSettings",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37452,
                            "src": "14707:35:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage",
                              "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                            }
                          },
                          "id": 35569,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14743:13:51",
                          "memberName": "discardOracle",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37442,
                          "src": "14707:49:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 35582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 35576,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "14815:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35578,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "14825:20:51",
                              "memberName": "settlementResolution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37465,
                              "src": "14815:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 35581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 35579,
                                "name": "resolvedPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35558,
                                "src": "14848:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 35580,
                                "name": "numericalTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35032,
                                "src": "14865:13:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "14848:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "14815:63:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 35583,
                          "nodeType": "ExpressionStatement",
                          "src": "14815:63:51"
                        },
                        "id": 35584,
                        "nodeType": "IfStatement",
                        "src": "14703:175:51",
                        "trueBody": {
                          "expression": {
                            "id": 35574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 35570,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "14758:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35572,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "14768:20:51",
                              "memberName": "settlementResolution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37465,
                              "src": "14758:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "66616c7365",
                              "id": 35573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14791:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "14758:38:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 35575,
                          "nodeType": "ExpressionStatement",
                          "src": "14758:38:51"
                        }
                      },
                      {
                        "assignments": [
                          35586
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35586,
                            "mutability": "mutable",
                            "name": "bondRecipient",
                            "nameLocation": "14901:13:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 35658,
                            "src": "14893:21:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 35585,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14893:7:51",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 35595,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 35589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 35587,
                              "name": "resolvedPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35558,
                              "src": "14917:13:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 35588,
                              "name": "numericalTrue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35032,
                              "src": "14934:13:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "14917:30:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "id": 35592,
                              "name": "assertion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35479,
                              "src": "14971:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                              }
                            },
                            "id": 35593,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14981:8:51",
                            "memberName": "disputer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37475,
                            "src": "14971:18:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 35594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "14917:72:51",
                          "trueExpression": {
                            "expression": {
                              "id": 35590,
                              "name": "assertion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35479,
                              "src": "14950:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                              }
                            },
                            "id": 35591,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14960:8:51",
                            "memberName": "asserter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37454,
                            "src": "14950:18:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14893:96:51"
                      },
                      {
                        "assignments": [
                          35597
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35597,
                            "mutability": "mutable",
                            "name": "oracleFee",
                            "nameLocation": "15135:9:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 35658,
                            "src": "15127:17:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 35596,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15127:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 35605,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 35604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 35601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 35598,
                                  "name": "burnedBondPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35026,
                                  "src": "15148:20:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "expression": {
                                    "id": 35599,
                                    "name": "assertion",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35479,
                                    "src": "15171:9:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                    }
                                  },
                                  "id": 35600,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15181:4:51",
                                  "memberName": "bond",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37471,
                                  "src": "15171:14:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15148:37:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 35602,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15147:39:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 35603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15189:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "15147:46:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15127:66:51"
                      },
                      {
                        "assignments": [
                          35607
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35607,
                            "mutability": "mutable",
                            "name": "bondRecipientAmount",
                            "nameLocation": "15215:19:51",
                            "nodeType": "VariableDeclaration",
                            "scope": 35658,
                            "src": "15207:27:51",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 35606,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15207:7:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 35614,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 35613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 35611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 35608,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "15237:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35609,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15247:4:51",
                              "memberName": "bond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37471,
                              "src": "15237:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 35610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15254:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "15237:18:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 35612,
                            "name": "oracleFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35597,
                            "src": "15258:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15237:30:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15207:60:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 35622,
                                    "name": "_getStore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35940,
                                    "src": "15531:9:51",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_StoreInterface_$34542_$",
                                      "typeString": "function () view returns (contract StoreInterface)"
                                    }
                                  },
                                  "id": 35623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15531:11:51",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StoreInterface_$34542",
                                    "typeString": "contract StoreInterface"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StoreInterface_$34542",
                                    "typeString": "contract StoreInterface"
                                  }
                                ],
                                "id": 35621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15523:7:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 35620,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15523:7:51",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 35624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15523:20:51",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 35625,
                              "name": "oracleFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35597,
                              "src": "15545:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 35615,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "15491:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35618,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15501:8:51",
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37461,
                              "src": "15491:18:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$29195",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 35619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15510:12:51",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29288,
                            "src": "15491:31:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$29195_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$29195_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 35626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15491:64:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35627,
                        "nodeType": "ExpressionStatement",
                        "src": "15491:64:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35633,
                              "name": "bondRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35586,
                              "src": "15601:13:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 35634,
                              "name": "bondRecipientAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35607,
                              "src": "15616:19:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 35628,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "15569:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35631,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15579:8:51",
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37461,
                              "src": "15569:18:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$29195",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 35632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15588:12:51",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29288,
                            "src": "15569:31:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$29195_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$29195_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 35635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15569:67:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35636,
                        "nodeType": "ExpressionStatement",
                        "src": "15569:67:51"
                      },
                      {
                        "condition": {
                          "id": 35640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "15655:50:51",
                          "subExpression": {
                            "expression": {
                              "expression": {
                                "id": 35637,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "15656:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35638,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15666:25:51",
                              "memberName": "escalationManagerSettings",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37452,
                              "src": "15656:35:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage",
                                "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                              }
                            },
                            "id": 35639,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15692:13:51",
                            "memberName": "discardOracle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37442,
                            "src": "15656:49:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 35647,
                        "nodeType": "IfStatement",
                        "src": "15651:144:51",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 35642,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35472,
                                "src": "15751:11:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 35643,
                                  "name": "assertion",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35479,
                                  "src": "15764:9:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                    "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                  }
                                },
                                "id": 35644,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15774:20:51",
                                "memberName": "settlementResolution",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37465,
                                "src": "15764:30:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 35641,
                              "name": "_callbackOnAssertionResolve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36225,
                              "src": "15723:27:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                                "typeString": "function (bytes32,bool)"
                              }
                            },
                            "id": 35645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15723:72:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 35646,
                          "nodeType": "ExpressionStatement",
                          "src": "15723:72:51"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 35649,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35472,
                              "src": "15832:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 35650,
                              "name": "bondRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35586,
                              "src": "15845:13:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 35651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15860:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "expression": {
                                "id": 35652,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "15866:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35653,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15876:20:51",
                              "memberName": "settlementResolution",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37465,
                              "src": "15866:30:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 35654,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15898:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 35655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15902:6:51",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15898:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 35648,
                            "name": "AssertionSettled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37614,
                            "src": "15815:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address,bool,bool,address)"
                            }
                          },
                          "id": 35656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15815:94:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35657,
                        "nodeType": "EmitStatement",
                        "src": "15810:99:51"
                      }
                    ]
                  },
                  "id": 35659,
                  "nodeType": "IfStatement",
                  "src": "13874:2046:51",
                  "trueBody": {
                    "id": 35556,
                    "nodeType": "Block",
                    "src": "13912:467:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 35520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 35516,
                                  "name": "assertion",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35479,
                                  "src": "13986:9:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                    "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                  }
                                },
                                "id": 35517,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13996:14:51",
                                "memberName": "expirationTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37463,
                                "src": "13986:24:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 35518,
                                  "name": "getCurrentTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35797,
                                  "src": "14014:14:51",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 35519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14014:16:51",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13986:44:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "417373657274696f6e206e6f742065787069726564",
                              "id": 35521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14032:23:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b583f5c702dc3aa382abb1202239775a4e2b379d1efc665cb9f9ef16a2319c54",
                                "typeString": "literal_string \"Assertion not expired\""
                              },
                              "value": "Assertion not expired"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b583f5c702dc3aa382abb1202239775a4e2b379d1efc665cb9f9ef16a2319c54",
                                "typeString": "literal_string \"Assertion not expired\""
                              }
                            ],
                            "id": 35515,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13978:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 35522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13978:78:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35523,
                        "nodeType": "ExpressionStatement",
                        "src": "13978:78:51"
                      },
                      {
                        "expression": {
                          "id": 35528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 35524,
                              "name": "assertion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35479,
                              "src": "14096:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                              }
                            },
                            "id": 35526,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "14106:20:51",
                            "memberName": "settlementResolution",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37465,
                            "src": "14096:30:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 35527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14129:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "14096:37:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 35529,
                        "nodeType": "ExpressionStatement",
                        "src": "14096:37:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 35535,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "14179:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35536,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14189:8:51",
                              "memberName": "asserter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37454,
                              "src": "14179:18:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 35537,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "14199:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35538,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14209:4:51",
                              "memberName": "bond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37471,
                              "src": "14199:14:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 35530,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "14147:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35533,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14157:8:51",
                              "memberName": "currency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37461,
                              "src": "14147:18:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$29195",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 35534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14166:12:51",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29288,
                            "src": "14147:31:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$29195_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$29195_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 35539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14147:67:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35540,
                        "nodeType": "ExpressionStatement",
                        "src": "14147:67:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35542,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35472,
                              "src": "14256:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 35543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14269:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 35541,
                            "name": "_callbackOnAssertionResolve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36225,
                            "src": "14228:27:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                              "typeString": "function (bytes32,bool)"
                            }
                          },
                          "id": 35544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14228:46:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35545,
                        "nodeType": "ExpressionStatement",
                        "src": "14228:46:51"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 35547,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35472,
                              "src": "14311:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 35548,
                                "name": "assertion",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35479,
                                "src": "14324:9:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                                  "typeString": "struct OptimisticOracleV3Interface.Assertion storage pointer"
                                }
                              },
                              "id": 35549,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14334:8:51",
                              "memberName": "asserter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37454,
                              "src": "14324:18:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 35550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14344:5:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 35551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14351:4:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "expression": {
                                "id": 35552,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14357:3:51",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 35553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14361:6:51",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14357:10:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 35546,
                            "name": "AssertionSettled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37614,
                            "src": "14294:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address,bool,bool,address)"
                            }
                          },
                          "id": 35554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14294:74:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35555,
                        "nodeType": "EmitStatement",
                        "src": "14289:79:51"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              37545
            ],
            "documentation": {
              "id": 35470,
              "nodeType": "StructuredDocumentation",
              "src": "12851:621:51",
              "text": " @notice Resolves an assertion. If the assertion has not been disputed, the assertion is resolved as true and the\n asserter receives the bond. If the assertion has been disputed, the assertion is resolved depending on the oracle\n result. Based on the result, the asserter or disputer receives the bond. If the assertion was disputed then an\n amount of the bond is sent to the UMA Store as an oracle fee based on the burnedBondPercentage. The remainder of\n the bond is returned to the asserter or disputer.\n @param assertionId unique identifier for the assertion to resolve."
            },
            "functionSelector": "4124beef",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35475,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35474,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "13530:12:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32774,
                  "src": "13530:12:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "13530:12:51"
              }
            ],
            "name": "settleAssertion",
            "nameLocation": "13486:15:51",
            "parameters": {
              "id": 35473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35472,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "13510:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35661,
                  "src": "13502:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35471,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13502:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13501:21:51"
            },
            "returnParameters": {
              "id": 35476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13543:0:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35684,
            "nodeType": "FunctionDefinition",
            "src": "16160:291:51",
            "nodes": [],
            "body": {
              "id": 35683,
              "nodeType": "Block",
              "src": "16242:209:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 35673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "16334:32:51",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 35669,
                          "name": "assertions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35024,
                          "src": "16335:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                            "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                          }
                        },
                        "id": 35671,
                        "indexExpression": {
                          "id": 35670,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35664,
                          "src": "16346:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16335:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                        }
                      },
                      "id": 35672,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16359:7:51",
                      "memberName": "settled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37458,
                      "src": "16335:31:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35678,
                  "nodeType": "IfStatement",
                  "src": "16330:66:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 35675,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35664,
                          "src": "16384:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 35674,
                        "name": "settleAssertion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35661,
                        "src": "16368:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 35676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16368:28:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 35677,
                    "nodeType": "ExpressionStatement",
                    "src": "16368:28:51"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35680,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35664,
                        "src": "16432:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 35679,
                      "name": "getAssertionResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35787,
                      "src": "16413:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32) view returns (bool)"
                      }
                    },
                    "id": 35681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16413:31:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 35668,
                  "id": 35682,
                  "nodeType": "Return",
                  "src": "16406:38:51"
                }
              ]
            },
            "baseFunctions": [
              37553
            ],
            "documentation": {
              "id": 35662,
              "nodeType": "StructuredDocumentation",
              "src": "15932:223:51",
              "text": " @notice Settles an assertion and returns the resolution.\n @param assertionId unique identifier for the assertion to resolve and return the resolution for.\n @return resolution of the assertion."
            },
            "functionSelector": "8ea2f2ab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleAndGetAssertionResult",
            "nameLocation": "16169:27:51",
            "parameters": {
              "id": 35665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35664,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "16205:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35684,
                  "src": "16197:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35663,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16197:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16196:21:51"
            },
            "returnParameters": {
              "id": 35668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35684,
                  "src": "16236:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35666,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16236:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16235:6:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35734,
            "nodeType": "FunctionDefinition",
            "src": "16922:453:51",
            "nodes": [],
            "body": {
              "id": 35733,
              "nodeType": "Block",
              "src": "16990:385:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 35698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35692,
                      "name": "cachedOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35010,
                      "src": "17000:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 35695,
                            "name": "OracleInterfaces",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33910,
                            "src": "17047:16:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$33910_$",
                              "typeString": "type(library OracleInterfaces)"
                            }
                          },
                          "id": 35696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17064:6:51",
                          "memberName": "Oracle",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33867,
                          "src": "17047:23:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 35693,
                          "name": "finder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35008,
                          "src": "17015:6:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FinderInterface_$34435",
                            "typeString": "contract FinderInterface"
                          }
                        },
                        "id": 35694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17022:24:51",
                        "memberName": "getImplementationAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34434,
                        "src": "17015:31:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes32) view external returns (address)"
                        }
                      },
                      "id": 35697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17015:56:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17000:71:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 35699,
                  "nodeType": "ExpressionStatement",
                  "src": "17000:71:51"
                },
                {
                  "expression": {
                    "id": 35708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 35700,
                        "name": "cachedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35019,
                        "src": "17081:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 35702,
                      "indexExpression": {
                        "id": 35701,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35687,
                        "src": "17099:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17081:29:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 35706,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35687,
                          "src": "17161:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35703,
                            "name": "_getIdentifierWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35925,
                            "src": "17113:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IdentifierWhitelistInterface_$34459_$",
                              "typeString": "function () view returns (contract IdentifierWhitelistInterface)"
                            }
                          },
                          "id": 35704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17113:25:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$34459",
                            "typeString": "contract IdentifierWhitelistInterface"
                          }
                        },
                        "id": 35705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17139:21:51",
                        "memberName": "isIdentifierSupported",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34458,
                        "src": "17113:47:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32) view external returns (bool)"
                        }
                      },
                      "id": 35707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17113:59:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17081:91:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35709,
                  "nodeType": "ExpressionStatement",
                  "src": "17081:91:51"
                },
                {
                  "expression": {
                    "id": 35719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 35710,
                          "name": "cachedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35015,
                          "src": "17182:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$37481_storage_$",
                            "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                          }
                        },
                        "id": 35712,
                        "indexExpression": {
                          "id": 35711,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35689,
                          "src": "17199:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17182:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WhitelistedCurrency_$37481_storage",
                          "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                        }
                      },
                      "id": 35713,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "17209:13:51",
                      "memberName": "isWhitelisted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37478,
                      "src": "17182:40:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 35717,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35689,
                          "src": "17265:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 35714,
                            "name": "_getCollateralWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35910,
                            "src": "17225:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AddressWhitelist_$30483_$",
                              "typeString": "function () view returns (contract AddressWhitelist)"
                            }
                          },
                          "id": 35715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17225:25:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AddressWhitelist_$30483",
                            "typeString": "contract AddressWhitelist"
                          }
                        },
                        "id": 35716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17251:13:51",
                        "memberName": "isOnWhitelist",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30393,
                        "src": "17225:39:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 35718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17225:49:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17182:92:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35720,
                  "nodeType": "ExpressionStatement",
                  "src": "17182:92:51"
                },
                {
                  "expression": {
                    "id": 35731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 35721,
                          "name": "cachedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35015,
                          "src": "17284:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$37481_storage_$",
                            "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                          }
                        },
                        "id": 35723,
                        "indexExpression": {
                          "id": 35722,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35689,
                          "src": "17301:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17284:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WhitelistedCurrency_$37481_storage",
                          "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                        }
                      },
                      "id": 35724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "17311:8:51",
                      "memberName": "finalFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37480,
                      "src": "17284:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 35728,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35689,
                            "src": "17350:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 35725,
                              "name": "_getStore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35940,
                              "src": "17322:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_StoreInterface_$34542_$",
                                "typeString": "function () view returns (contract StoreInterface)"
                              }
                            },
                            "id": 35726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17322:11:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StoreInterface_$34542",
                              "typeString": "contract StoreInterface"
                            }
                          },
                          "id": 35727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17334:15:51",
                          "memberName": "computeFinalFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34541,
                          "src": "17322:27:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Unsigned_$31133_memory_ptr_$",
                            "typeString": "function (address) view external returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 35729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17322:37:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$31133_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 35730,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17360:8:51",
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31132,
                      "src": "17322:46:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17284:84:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35732,
                  "nodeType": "ExpressionStatement",
                  "src": "17284:84:51"
                }
              ]
            },
            "baseFunctions": [
              37539
            ],
            "documentation": {
              "id": 35685,
              "nodeType": "StructuredDocumentation",
              "src": "16457:460:51",
              "text": " @notice Fetches information about a specific identifier & currency from the UMA contracts and stores a local copy\n of the information within this contract. This is used to save gas when making assertions as we can avoid an\n external call to the UMA contracts to fetch this.\n @param identifier identifier to fetch information for and store locally.\n @param currency currency to fetch information for and store locally."
            },
            "functionSelector": "a8655785",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "syncUmaParams",
            "nameLocation": "16931:13:51",
            "parameters": {
              "id": 35690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35687,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "16953:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35734,
                  "src": "16945:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35686,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16945:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35689,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "16973:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35734,
                  "src": "16965:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16965:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16944:38:51"
            },
            "returnParameters": {
              "id": 35691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16990:0:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35748,
            "nodeType": "FunctionDefinition",
            "src": "17621:131:51",
            "nodes": [],
            "body": {
              "id": 35747,
              "nodeType": "Block",
              "src": "17705:47:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 35743,
                      "name": "assertions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35024,
                      "src": "17722:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                      }
                    },
                    "id": 35745,
                    "indexExpression": {
                      "id": 35744,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35737,
                      "src": "17733:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17722:23:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                    }
                  },
                  "functionReturnParameters": 35742,
                  "id": 35746,
                  "nodeType": "Return",
                  "src": "17715:30:51"
                }
              ]
            },
            "baseFunctions": [
              37496
            ],
            "documentation": {
              "id": 35735,
              "nodeType": "StructuredDocumentation",
              "src": "17381:235:51",
              "text": " @notice Fetches information about a specific assertion and returns it.\n @param assertionId unique identifier for the assertion to fetch information for.\n @return assertion information about the assertion."
            },
            "functionSelector": "88302884",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertion",
            "nameLocation": "17630:12:51",
            "parameters": {
              "id": 35738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35737,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "17651:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35748,
                  "src": "17643:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35736,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17643:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17642:21:51"
            },
            "returnParameters": {
              "id": 35742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35741,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35748,
                  "src": "17687:16:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Assertion_$37476_memory_ptr",
                    "typeString": "struct OptimisticOracleV3Interface.Assertion"
                  },
                  "typeName": {
                    "id": 35740,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35739,
                      "name": "Assertion",
                      "nameLocations": [
                        "17687:9:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37476,
                      "src": "17687:9:51"
                    },
                    "referencedDeclaration": 37476,
                    "src": "17687:9:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17686:18:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35787,
            "nodeType": "FunctionDefinition",
            "src": "18147:469:51",
            "nodes": [],
            "body": {
              "id": 35786,
              "nodeType": "Block",
              "src": "18223:393:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35758,
                      "mutability": "mutable",
                      "name": "assertion",
                      "nameLocation": "18250:9:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35786,
                      "src": "18233:26:51",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$37476_memory_ptr",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion"
                      },
                      "typeName": {
                        "id": 35757,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 35756,
                          "name": "Assertion",
                          "nameLocations": [
                            "18233:9:51"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37476,
                          "src": "18233:9:51"
                        },
                        "referencedDeclaration": 37476,
                        "src": "18233:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35762,
                  "initialValue": {
                    "baseExpression": {
                      "id": 35759,
                      "name": "assertions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35024,
                      "src": "18262:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                      }
                    },
                    "id": 35761,
                    "indexExpression": {
                      "id": 35760,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35751,
                      "src": "18273:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18262:23:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                      "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18233:52:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 35773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 35769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 35763,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35758,
                          "src": "18366:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$37476_memory_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                          }
                        },
                        "id": 35764,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18376:8:51",
                        "memberName": "disputer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37475,
                        "src": "18366:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 35767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18396:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 35766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18388:7:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35765,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18388:7:51",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18388:10:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "18366:32:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 35770,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35758,
                          "src": "18402:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$37476_memory_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                          }
                        },
                        "id": 35771,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18412:25:51",
                        "memberName": "escalationManagerSettings",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37452,
                        "src": "18402:35:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_memory_ptr",
                          "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings memory"
                        }
                      },
                      "id": 35772,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18438:13:51",
                      "memberName": "discardOracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37442,
                      "src": "18402:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "18366:85:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35776,
                  "nodeType": "IfStatement",
                  "src": "18362:103:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 35774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18460:5:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 35755,
                    "id": 35775,
                    "nodeType": "Return",
                    "src": "18453:12:51"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 35778,
                          "name": "assertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35758,
                          "src": "18483:9:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$37476_memory_ptr",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                          }
                        },
                        "id": 35779,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18493:7:51",
                        "memberName": "settled",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37458,
                        "src": "18483:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e206e6f7420736574746c6564",
                        "id": 35780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18502:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4a0cb4660ec6172813798000be6ed9bb3cfab408acdacd65c62f67e41f8069e",
                          "typeString": "literal_string \"Assertion not settled\""
                        },
                        "value": "Assertion not settled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4a0cb4660ec6172813798000be6ed9bb3cfab408acdacd65c62f67e41f8069e",
                          "typeString": "literal_string \"Assertion not settled\""
                        }
                      ],
                      "id": 35777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18475:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18475:51:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35782,
                  "nodeType": "ExpressionStatement",
                  "src": "18475:51:51"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 35783,
                      "name": "assertion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35758,
                      "src": "18579:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$37476_memory_ptr",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion memory"
                      }
                    },
                    "id": 35784,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "18589:20:51",
                    "memberName": "settlementResolution",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37465,
                    "src": "18579:30:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 35755,
                  "id": 35785,
                  "nodeType": "Return",
                  "src": "18572:37:51"
                }
              ]
            },
            "baseFunctions": [
              37561
            ],
            "documentation": {
              "id": 35749,
              "nodeType": "StructuredDocumentation",
              "src": "17758:384:51",
              "text": " @notice Fetches the resolution of a specific assertion and returns it. If the assertion has not been settled then\n this will revert. If the assertion was disputed and configured to discard the oracle resolution return false.\n @param assertionId unique identifier for the assertion to fetch the resolution for.\n @return resolution of the assertion."
            },
            "functionSelector": "e39dfd7f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertionResult",
            "nameLocation": "18156:18:51",
            "parameters": {
              "id": 35752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35751,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "18183:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35787,
                  "src": "18175:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35750,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18175:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18174:21:51"
            },
            "returnParameters": {
              "id": 35755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35787,
                  "src": "18217:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35753,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18217:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18216:6:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35797,
            "nodeType": "FunctionDefinition",
            "src": "18786:103:51",
            "nodes": [],
            "body": {
              "id": 35796,
              "nodeType": "Block",
              "src": "18850:39:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 35793,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "18867:5:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 35794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "18873:9:51",
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "18867:15:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35792,
                  "id": 35795,
                  "nodeType": "Return",
                  "src": "18860:22:51"
                }
              ]
            },
            "documentation": {
              "id": 35788,
              "nodeType": "StructuredDocumentation",
              "src": "18622:159:51",
              "text": " @notice Returns the current block timestamp.\n @dev Can be overridden to control contract time.\n @return current block timestamp."
            },
            "functionSelector": "29cb924d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTime",
            "nameLocation": "18795:14:51",
            "parameters": {
              "id": 35789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18809:2:51"
            },
            "returnParameters": {
              "id": 35792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35791,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35797,
                  "src": "18841:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18841:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18840:9:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 35810,
            "nodeType": "FunctionDefinition",
            "src": "19178:132:51",
            "nodes": [],
            "body": {
              "id": 35809,
              "nodeType": "Block",
              "src": "19258:52:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35806,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35800,
                        "src": "19291:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 35805,
                      "name": "_stampAssertion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35895,
                      "src": "19275:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (bytes memory)"
                      }
                    },
                    "id": 35807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19275:28:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 35804,
                  "id": 35808,
                  "nodeType": "Return",
                  "src": "19268:35:51"
                }
              ]
            },
            "documentation": {
              "id": 35798,
              "nodeType": "StructuredDocumentation",
              "src": "18895:278:51",
              "text": " @notice Appends information onto an assertionId to construct ancillary data used for dispute resolution.\n @param assertionId unique identifier for the assertion to construct ancillary data for.\n @return ancillaryData stamped assertion information."
            },
            "functionSelector": "afedba4f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stampAssertion",
            "nameLocation": "19187:14:51",
            "parameters": {
              "id": 35801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35800,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "19210:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35810,
                  "src": "19202:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35799,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19202:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19201:21:51"
            },
            "returnParameters": {
              "id": 35804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35810,
                  "src": "19244:12:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35802,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19244:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19243:14:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35833,
            "nodeType": "FunctionDefinition",
            "src": "19674:200:51",
            "nodes": [],
            "body": {
              "id": 35832,
              "nodeType": "Block",
              "src": "19746:128:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35819,
                      "mutability": "mutable",
                      "name": "finalFee",
                      "nameLocation": "19764:8:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 35832,
                      "src": "19756:16:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35818,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19756:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35824,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 35820,
                        "name": "cachedCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35015,
                        "src": "19775:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$37481_storage_$",
                          "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                        }
                      },
                      "id": 35822,
                      "indexExpression": {
                        "id": 35821,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35813,
                        "src": "19792:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "19775:26:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WhitelistedCurrency_$37481_storage",
                        "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                      }
                    },
                    "id": 35823,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "19802:8:51",
                    "memberName": "finalFee",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37480,
                    "src": "19775:35:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19756:54:51"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 35827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 35825,
                            "name": "finalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35819,
                            "src": "19828:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 35826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19839:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "19828:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 35828,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "19827:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 35829,
                      "name": "burnedBondPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35026,
                      "src": "19847:20:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19827:40:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35817,
                  "id": 35831,
                  "nodeType": "Return",
                  "src": "19820:47:51"
                }
              ]
            },
            "baseFunctions": [
              37569
            ],
            "documentation": {
              "id": 35811,
              "nodeType": "StructuredDocumentation",
              "src": "19316:353:51",
              "text": " @notice Returns the minimum bond amount required to make an assertion. This is calculated as the final fee of the\n currency divided by the burnedBondPercentage. If burn percentage is 50% then the min bond is 2x the final fee.\n @param currency currency to calculate the minimum bond for.\n @return minimum bond amount."
            },
            "functionSelector": "4360af3d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinimumBond",
            "nameLocation": "19683:14:51",
            "parameters": {
              "id": 35814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35813,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "19706:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35833,
                  "src": "19698:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19698:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19697:18:51"
            },
            "returnParameters": {
              "id": 35817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35833,
                  "src": "19737:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19737:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19736:9:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35872,
            "nodeType": "FunctionDefinition",
            "src": "19988:660:51",
            "nodes": [],
            "body": {
              "id": 35871,
              "nodeType": "Block",
              "src": "20262:386:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35858,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35835,
                            "src": "20350:5:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 35859,
                            "name": "bond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35837,
                            "src": "20377:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 35860,
                            "name": "time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35839,
                            "src": "20403:4:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 35861,
                            "name": "liveness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35841,
                            "src": "20429:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 35862,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35844,
                            "src": "20459:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$29195",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 35863,
                            "name": "callbackRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35846,
                            "src": "20489:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 35864,
                            "name": "escalationManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35848,
                            "src": "20528:17:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 35865,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35850,
                            "src": "20567:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 35866,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "20599:3:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 35867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "20603:6:51",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "20599:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$29195",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 35856,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20318:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 35857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "20322:6:51",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "20318:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 35868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20318:309:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 35855,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "20291:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 35869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20291:350:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 35854,
                  "id": 35870,
                  "nodeType": "Return",
                  "src": "20272:369:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getId",
            "nameLocation": "19997:6:51",
            "parameters": {
              "id": 35851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35835,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "20026:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35872,
                  "src": "20013:18:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35834,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20013:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35837,
                  "mutability": "mutable",
                  "name": "bond",
                  "nameLocation": "20049:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35872,
                  "src": "20041:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20041:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35839,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "20071:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35872,
                  "src": "20063:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20063:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35841,
                  "mutability": "mutable",
                  "name": "liveness",
                  "nameLocation": "20092:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35872,
                  "src": "20085:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 35840,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "20085:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35844,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "20117:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35872,
                  "src": "20110:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$29195",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 35843,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35842,
                      "name": "IERC20",
                      "nameLocations": [
                        "20110:6:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29195,
                      "src": "20110:6:51"
                    },
                    "referencedDeclaration": 29195,
                    "src": "20110:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$29195",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35846,
                  "mutability": "mutable",
                  "name": "callbackRecipient",
                  "nameLocation": "20143:17:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35872,
                  "src": "20135:25:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20135:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35848,
                  "mutability": "mutable",
                  "name": "escalationManager",
                  "nameLocation": "20178:17:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35872,
                  "src": "20170:25:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20170:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35850,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "20213:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35872,
                  "src": "20205:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35849,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20205:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20003:226:51"
            },
            "returnParameters": {
              "id": 35854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35872,
                  "src": "20253:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35852,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20253:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20252:9:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35895,
            "nodeType": "FunctionDefinition",
            "src": "20744:333:51",
            "nodes": [],
            "body": {
              "id": 35894,
              "nodeType": "Block",
              "src": "20827:250:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 35883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20945:2:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          {
                            "hexValue": "617373657274696f6e4964",
                            "id": 35884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20949:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bd75d8d88c1c3670179d7f2a362f6095a5b4bbceaae7bab320c056741977e694",
                              "typeString": "literal_string \"assertionId\""
                            },
                            "value": "assertionId"
                          },
                          {
                            "id": 35885,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35874,
                            "src": "20964:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_bd75d8d88c1c3670179d7f2a362f6095a5b4bbceaae7bab320c056741977e694",
                              "typeString": "literal_string \"assertionId\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 35881,
                            "name": "AncillaryData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30891,
                            "src": "20909:13:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AncillaryData_$30891_$",
                              "typeString": "type(library AncillaryData)"
                            }
                          },
                          "id": 35882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20923:21:51",
                          "memberName": "appendKeyValueBytes32",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30801,
                          "src": "20909:35:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory,bytes memory,bytes32) pure returns (bytes memory)"
                          }
                        },
                        "id": 35886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20909:67:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "6f6f4173736572746572",
                        "id": 35887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20994:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e03e3695f0195ee3b1ff04b32021f8f30a57bcb0ca126b3fc7b152d532bac87c",
                          "typeString": "literal_string \"ooAsserter\""
                        },
                        "value": "ooAsserter"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 35888,
                            "name": "assertions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35024,
                            "src": "21024:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                              "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                            }
                          },
                          "id": 35890,
                          "indexExpression": {
                            "id": 35889,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35874,
                            "src": "21035:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21024:23:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                          }
                        },
                        "id": 35891,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21048:8:51",
                        "memberName": "asserter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37454,
                        "src": "21024:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e03e3695f0195ee3b1ff04b32021f8f30a57bcb0ca126b3fc7b152d532bac87c",
                          "typeString": "literal_string \"ooAsserter\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 35879,
                        "name": "AncillaryData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30891,
                        "src": "20856:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AncillaryData_$30891_$",
                          "typeString": "type(library AncillaryData)"
                        }
                      },
                      "id": 35880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20870:21:51",
                      "memberName": "appendKeyValueAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30830,
                      "src": "20856:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory,address) pure returns (bytes memory)"
                      }
                    },
                    "id": 35892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20856:214:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 35878,
                  "id": 35893,
                  "nodeType": "Return",
                  "src": "20837:233:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_stampAssertion",
            "nameLocation": "20753:15:51",
            "parameters": {
              "id": 35875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35874,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "20777:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35895,
                  "src": "20769:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35873,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20769:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20768:21:51"
            },
            "returnParameters": {
              "id": 35878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35895,
                  "src": "20813:12:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35876,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20813:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20812:14:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35910,
            "nodeType": "FunctionDefinition",
            "src": "21155:187:51",
            "nodes": [],
            "body": {
              "id": 35909,
              "nodeType": "Block",
              "src": "21231:111:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 35904,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33910,
                              "src": "21297:16:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$33910_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 35905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21314:19:51",
                            "memberName": "CollateralWhitelist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33882,
                            "src": "21297:36:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 35902,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35008,
                            "src": "21265:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$34435",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 35903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21272:24:51",
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34434,
                          "src": "21265:31:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 35906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21265:69:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35901,
                      "name": "AddressWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30483,
                      "src": "21248:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AddressWhitelist_$30483_$",
                        "typeString": "type(contract AddressWhitelist)"
                      }
                    },
                    "id": 35907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21248:87:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressWhitelist_$30483",
                      "typeString": "contract AddressWhitelist"
                    }
                  },
                  "functionReturnParameters": 35900,
                  "id": 35908,
                  "nodeType": "Return",
                  "src": "21241:94:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getCollateralWhitelist",
            "nameLocation": "21164:23:51",
            "parameters": {
              "id": 35896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21187:2:51"
            },
            "returnParameters": {
              "id": 35900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35910,
                  "src": "21213:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AddressWhitelist_$30483",
                    "typeString": "contract AddressWhitelist"
                  },
                  "typeName": {
                    "id": 35898,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35897,
                      "name": "AddressWhitelist",
                      "nameLocations": [
                        "21213:16:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30483,
                      "src": "21213:16:51"
                    },
                    "referencedDeclaration": 30483,
                    "src": "21213:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressWhitelist_$30483",
                      "typeString": "contract AddressWhitelist"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21212:18:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35925,
            "nodeType": "FunctionDefinition",
            "src": "21425:211:51",
            "nodes": [],
            "body": {
              "id": 35924,
              "nodeType": "Block",
              "src": "21513:123:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 35919,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33910,
                              "src": "21591:16:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$33910_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 35920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21608:19:51",
                            "memberName": "IdentifierWhitelist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33870,
                            "src": "21591:36:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 35917,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35008,
                            "src": "21559:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$34435",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 35918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21566:24:51",
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34434,
                          "src": "21559:31:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 35921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21559:69:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35916,
                      "name": "IdentifierWhitelistInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34459,
                      "src": "21530:28:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IdentifierWhitelistInterface_$34459_$",
                        "typeString": "type(contract IdentifierWhitelistInterface)"
                      }
                    },
                    "id": 35922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21530:99:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$34459",
                      "typeString": "contract IdentifierWhitelistInterface"
                    }
                  },
                  "functionReturnParameters": 35915,
                  "id": 35923,
                  "nodeType": "Return",
                  "src": "21523:106:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getIdentifierWhitelist",
            "nameLocation": "21434:23:51",
            "parameters": {
              "id": 35911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21457:2:51"
            },
            "returnParameters": {
              "id": 35915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35925,
                  "src": "21483:28:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$34459",
                    "typeString": "contract IdentifierWhitelistInterface"
                  },
                  "typeName": {
                    "id": 35913,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35912,
                      "name": "IdentifierWhitelistInterface",
                      "nameLocations": [
                        "21483:28:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34459,
                      "src": "21483:28:51"
                    },
                    "referencedDeclaration": 34459,
                    "src": "21483:28:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$34459",
                      "typeString": "contract IdentifierWhitelistInterface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21482:30:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35940,
            "nodeType": "FunctionDefinition",
            "src": "21700:155:51",
            "nodes": [],
            "body": {
              "id": 35939,
              "nodeType": "Block",
              "src": "21760:95:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 35934,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33910,
                              "src": "21824:16:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$33910_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 35935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "21841:5:51",
                            "memberName": "Store",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33873,
                            "src": "21824:22:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 35932,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35008,
                            "src": "21792:6:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$34435",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 35933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21799:24:51",
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34434,
                          "src": "21792:31:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 35936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21792:55:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35931,
                      "name": "StoreInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34542,
                      "src": "21777:14:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_StoreInterface_$34542_$",
                        "typeString": "type(contract StoreInterface)"
                      }
                    },
                    "id": 35937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21777:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StoreInterface_$34542",
                      "typeString": "contract StoreInterface"
                    }
                  },
                  "functionReturnParameters": 35930,
                  "id": 35938,
                  "nodeType": "Return",
                  "src": "21770:78:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getStore",
            "nameLocation": "21709:9:51",
            "parameters": {
              "id": 35926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21718:2:51"
            },
            "returnParameters": {
              "id": 35930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35929,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35940,
                  "src": "21744:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StoreInterface_$34542",
                    "typeString": "contract StoreInterface"
                  },
                  "typeName": {
                    "id": 35928,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35927,
                      "name": "StoreInterface",
                      "nameLocations": [
                        "21744:14:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34542,
                      "src": "21744:14:51"
                    },
                    "referencedDeclaration": 34542,
                    "src": "21744:14:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StoreInterface_$34542",
                      "typeString": "contract StoreInterface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21743:16:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35965,
            "nodeType": "FunctionDefinition",
            "src": "21969:326:51",
            "nodes": [],
            "body": {
              "id": 35964,
              "nodeType": "Block",
              "src": "22059:236:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 35948,
                          "name": "assertions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35024,
                          "src": "22073:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                            "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                          }
                        },
                        "id": 35950,
                        "indexExpression": {
                          "id": 35949,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35942,
                          "src": "22084:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22073:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                        }
                      },
                      "id": 35951,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22097:25:51",
                      "memberName": "escalationManagerSettings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37452,
                      "src": "22073:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage",
                        "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                      }
                    },
                    "id": 35952,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "22123:29:51",
                    "memberName": "arbitrateViaEscalationManager",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37440,
                    "src": "22073:79:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35959,
                  "nodeType": "IfStatement",
                  "src": "22069:164:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 35955,
                              "name": "assertionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35942,
                              "src": "22220:11:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 35954,
                            "name": "_getEscalationManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36023,
                            "src": "22198:21:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 35956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22198:34:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 35953,
                        "name": "OracleAncillaryInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34497,
                        "src": "22173:24:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleAncillaryInterface_$34497_$",
                          "typeString": "type(contract OracleAncillaryInterface)"
                        }
                      },
                      "id": 35957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22173:60:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleAncillaryInterface_$34497",
                        "typeString": "contract OracleAncillaryInterface"
                      }
                    },
                    "functionReturnParameters": 35947,
                    "id": 35958,
                    "nodeType": "Return",
                    "src": "22166:67:51"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35961,
                        "name": "cachedOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35010,
                        "src": "22275:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35960,
                      "name": "OracleAncillaryInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34497,
                      "src": "22250:24:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OracleAncillaryInterface_$34497_$",
                        "typeString": "type(contract OracleAncillaryInterface)"
                      }
                    },
                    "id": 35962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22250:38:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleAncillaryInterface_$34497",
                      "typeString": "contract OracleAncillaryInterface"
                    }
                  },
                  "functionReturnParameters": 35947,
                  "id": 35963,
                  "nodeType": "Return",
                  "src": "22243:45:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOracle",
            "nameLocation": "21978:10:51",
            "parameters": {
              "id": 35943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35942,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "21997:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35965,
                  "src": "21989:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35941,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21989:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21988:21:51"
            },
            "returnParameters": {
              "id": 35947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35946,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35965,
                  "src": "22033:24:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OracleAncillaryInterface_$34497",
                    "typeString": "contract OracleAncillaryInterface"
                  },
                  "typeName": {
                    "id": 35945,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35944,
                      "name": "OracleAncillaryInterface",
                      "nameLocations": [
                        "22033:24:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34497,
                      "src": "22033:24:51"
                    },
                    "referencedDeclaration": 34497,
                    "src": "22033:24:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleAncillaryInterface_$34497",
                      "typeString": "contract OracleAncillaryInterface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22032:26:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35986,
            "nodeType": "FunctionDefinition",
            "src": "22384:224:51",
            "nodes": [],
            "body": {
              "id": 35985,
              "nodeType": "Block",
              "src": "22507:101:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35978,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35969,
                        "src": "22554:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 35979,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35971,
                        "src": "22566:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 35981,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35967,
                            "src": "22588:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 35980,
                          "name": "_stampAssertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35895,
                          "src": "22572:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes32) view returns (bytes memory)"
                          }
                        },
                        "id": 35982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22572:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 35975,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35967,
                            "src": "22528:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 35974,
                          "name": "_getOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35965,
                          "src": "22517:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_contract$_OracleAncillaryInterface_$34497_$",
                            "typeString": "function (bytes32) view returns (contract OracleAncillaryInterface)"
                          }
                        },
                        "id": 35976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22517:23:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleAncillaryInterface_$34497",
                          "typeString": "contract OracleAncillaryInterface"
                        }
                      },
                      "id": 35977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22541:12:51",
                      "memberName": "requestPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34472,
                      "src": "22517:36:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,bytes memory) external"
                      }
                    },
                    "id": 35983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22517:84:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35984,
                  "nodeType": "ExpressionStatement",
                  "src": "22517:84:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_oracleRequestPrice",
            "nameLocation": "22393:19:51",
            "parameters": {
              "id": 35972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35967,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "22430:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35986,
                  "src": "22422:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35966,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22422:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35969,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "22459:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35986,
                  "src": "22451:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35968,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22451:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35971,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "22487:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 35986,
                  "src": "22479:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22479:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22412:85:51"
            },
            "returnParameters": {
              "id": 35973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22507:0:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 36009,
            "nodeType": "FunctionDefinition",
            "src": "22702:245:51",
            "nodes": [],
            "body": {
              "id": 36008,
              "nodeType": "Block",
              "src": "22843:104:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36001,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35990,
                        "src": "22893:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 36002,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35992,
                        "src": "22905:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 36004,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35988,
                            "src": "22927:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 36003,
                          "name": "_stampAssertion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35895,
                          "src": "22911:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes32) view returns (bytes memory)"
                          }
                        },
                        "id": 36005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22911:28:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 35998,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35988,
                            "src": "22871:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 35997,
                          "name": "_getOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35965,
                          "src": "22860:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_contract$_OracleAncillaryInterface_$34497_$",
                            "typeString": "function (bytes32) view returns (contract OracleAncillaryInterface)"
                          }
                        },
                        "id": 35999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22860:23:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleAncillaryInterface_$34497",
                          "typeString": "contract OracleAncillaryInterface"
                        }
                      },
                      "id": 36000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22884:8:51",
                      "memberName": "getPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34496,
                      "src": "22860:32:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_int256_$",
                        "typeString": "function (bytes32,uint256,bytes memory) view external returns (int256)"
                      }
                    },
                    "id": 36006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22860:80:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 35996,
                  "id": 36007,
                  "nodeType": "Return",
                  "src": "22853:87:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_oracleGetPrice",
            "nameLocation": "22711:15:51",
            "parameters": {
              "id": 35993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35988,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "22744:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36009,
                  "src": "22736:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35987,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22736:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35990,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "22773:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36009,
                  "src": "22765:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35989,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22765:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35992,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "22801:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36009,
                  "src": "22793:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22793:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22726:85:51"
            },
            "returnParameters": {
              "id": 35996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36009,
                  "src": "22835:6:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 35994,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22835:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22834:8:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 36023,
            "nodeType": "FunctionDefinition",
            "src": "23018:175:51",
            "nodes": [],
            "body": {
              "id": 36022,
              "nodeType": "Block",
              "src": "23102:91:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 36016,
                          "name": "assertions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35024,
                          "src": "23119:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                            "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                          }
                        },
                        "id": 36018,
                        "indexExpression": {
                          "id": 36017,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36011,
                          "src": "23130:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23119:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                        }
                      },
                      "id": 36019,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23143:25:51",
                      "memberName": "escalationManagerSettings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37452,
                      "src": "23119:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage",
                        "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                      }
                    },
                    "id": 36020,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "23169:17:51",
                    "memberName": "escalationManager",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37448,
                    "src": "23119:67:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 36015,
                  "id": 36021,
                  "nodeType": "Return",
                  "src": "23112:74:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getEscalationManager",
            "nameLocation": "23027:21:51",
            "parameters": {
              "id": 36012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36011,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "23057:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36023,
                  "src": "23049:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36010,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23049:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23048:21:51"
            },
            "returnParameters": {
              "id": 36015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36023,
                  "src": "23093:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23093:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23092:9:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 36060,
            "nodeType": "FunctionDefinition",
            "src": "23342:404:51",
            "nodes": [],
            "body": {
              "id": 36059,
              "nodeType": "Block",
              "src": "23494:252:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    36032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36032,
                      "mutability": "mutable",
                      "name": "em",
                      "nameLocation": "23512:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36059,
                      "src": "23504:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36031,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "23504:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36036,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36034,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36025,
                        "src": "23539:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 36033,
                      "name": "_getEscalationManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36023,
                      "src": "23517:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view returns (address)"
                      }
                    },
                    "id": 36035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23517:34:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23504:47:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 36042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 36037,
                      "name": "em",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36032,
                      "src": "23565:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 36040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23579:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 36039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23571:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 36038,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23571:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 36041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23571:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23565:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36051,
                  "nodeType": "IfStatement",
                  "src": "23561:99:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 36045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23633:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 36046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23640:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 36047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23647:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 36048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23654:5:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 36043,
                          "name": "EscalationManagerInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37416,
                          "src": "23590:26:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EscalationManagerInterface_$37416_$",
                            "typeString": "type(contract EscalationManagerInterface)"
                          }
                        },
                        "id": 36044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23617:15:51",
                        "memberName": "AssertionPolicy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37374,
                        "src": "23590:42:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AssertionPolicy_$37374_storage_ptr_$",
                          "typeString": "type(struct EscalationManagerInterface.AssertionPolicy storage pointer)"
                        }
                      },
                      "id": 36049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23590:70:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssertionPolicy_$37374_memory_ptr",
                        "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                      }
                    },
                    "functionReturnParameters": 36030,
                    "id": 36050,
                    "nodeType": "Return",
                    "src": "23583:77:51"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36056,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36025,
                        "src": "23727:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 36053,
                            "name": "em",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36032,
                            "src": "23704:2:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 36052,
                          "name": "EscalationManagerInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37416,
                          "src": "23677:26:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EscalationManagerInterface_$37416_$",
                            "typeString": "type(contract EscalationManagerInterface)"
                          }
                        },
                        "id": 36054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23677:30:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EscalationManagerInterface_$37416",
                          "typeString": "contract EscalationManagerInterface"
                        }
                      },
                      "id": 36055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23708:18:51",
                      "memberName": "getAssertionPolicy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37383,
                      "src": "23677:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_AssertionPolicy_$37374_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct EscalationManagerInterface.AssertionPolicy memory)"
                      }
                    },
                    "id": 36057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23677:62:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssertionPolicy_$37374_memory_ptr",
                      "typeString": "struct EscalationManagerInterface.AssertionPolicy memory"
                    }
                  },
                  "functionReturnParameters": 36030,
                  "id": 36058,
                  "nodeType": "Return",
                  "src": "23670:69:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getAssertionPolicy",
            "nameLocation": "23351:19:51",
            "parameters": {
              "id": 36026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36025,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "23379:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36060,
                  "src": "23371:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36024,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23371:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23370:21:51"
            },
            "returnParameters": {
              "id": 36030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36029,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36060,
                  "src": "23439:49:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssertionPolicy_$37374_memory_ptr",
                    "typeString": "struct EscalationManagerInterface.AssertionPolicy"
                  },
                  "typeName": {
                    "id": 36028,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 36027,
                      "name": "EscalationManagerInterface.AssertionPolicy",
                      "nameLocations": [
                        "23439:26:51",
                        "23466:15:51"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37374,
                      "src": "23439:42:51"
                    },
                    "referencedDeclaration": 37374,
                    "src": "23439:42:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssertionPolicy_$37374_storage_ptr",
                      "typeString": "struct EscalationManagerInterface.AssertionPolicy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23438:51:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 36103,
            "nodeType": "FunctionDefinition",
            "src": "23948:401:51",
            "nodes": [],
            "body": {
              "id": 36102,
              "nodeType": "Block",
              "src": "24025:324:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 36072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "24039:68:51",
                    "subExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 36067,
                            "name": "assertions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35024,
                            "src": "24040:10:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                              "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                            }
                          },
                          "id": 36069,
                          "indexExpression": {
                            "id": 36068,
                            "name": "assertionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36062,
                            "src": "24051:11:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24040:23:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                            "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                          }
                        },
                        "id": 36070,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24064:25:51",
                        "memberName": "escalationManagerSettings",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37452,
                        "src": "24040:49:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage",
                          "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                        }
                      },
                      "id": 36071,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24090:17:51",
                      "memberName": "validateDisputers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37444,
                      "src": "24040:67:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36075,
                  "nodeType": "IfStatement",
                  "src": "24035:85:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 36073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24116:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 36066,
                    "id": 36074,
                    "nodeType": "Return",
                    "src": "24109:11:51"
                  }
                },
                {
                  "assignments": [
                    36077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36077,
                      "mutability": "mutable",
                      "name": "em",
                      "nameLocation": "24138:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36102,
                      "src": "24130:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36076,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "24130:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36083,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 36078,
                          "name": "assertions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35024,
                          "src": "24143:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                            "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                          }
                        },
                        "id": 36080,
                        "indexExpression": {
                          "id": 36079,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36062,
                          "src": "24154:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24143:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                          "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                        }
                      },
                      "id": 36081,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24167:25:51",
                      "memberName": "escalationManagerSettings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37452,
                      "src": "24143:49:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscalationManagerSettings_$37449_storage",
                        "typeString": "struct OptimisticOracleV3Interface.EscalationManagerSettings storage ref"
                      }
                    },
                    "id": 36082,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "24193:17:51",
                    "memberName": "escalationManager",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37448,
                    "src": "24143:67:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24130:80:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 36089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 36084,
                      "name": "em",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36077,
                      "src": "24224:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 36087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24238:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 36086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "24230:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 36085,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24230:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 36088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24230:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24224:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36092,
                  "nodeType": "IfStatement",
                  "src": "24220:33:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 36090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24249:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 36066,
                    "id": 36091,
                    "nodeType": "Return",
                    "src": "24242:11:51"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36097,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36062,
                        "src": "24318:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 36098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24331:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 36099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24335:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24331:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 36094,
                            "name": "em",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36077,
                            "src": "24297:2:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 36093,
                          "name": "EscalationManagerInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37416,
                          "src": "24270:26:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EscalationManagerInterface_$37416_$",
                            "typeString": "type(contract EscalationManagerInterface)"
                          }
                        },
                        "id": 36095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24270:30:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EscalationManagerInterface_$37416",
                          "typeString": "contract EscalationManagerInterface"
                        }
                      },
                      "id": 36096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24301:16:51",
                      "memberName": "isDisputeAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37393,
                      "src": "24270:47:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view external returns (bool)"
                      }
                    },
                    "id": 36100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24270:72:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 36066,
                  "id": 36101,
                  "nodeType": "Return",
                  "src": "24263:79:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isDisputeAllowed",
            "nameLocation": "23957:17:51",
            "parameters": {
              "id": 36063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36062,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "23983:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36103,
                  "src": "23975:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36061,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23975:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23974:21:51"
            },
            "returnParameters": {
              "id": 36066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36103,
                  "src": "24019:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36064,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24019:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24018:6:51"
            },
            "scope": 36273,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 36131,
            "nodeType": "FunctionDefinition",
            "src": "24546:291:51",
            "nodes": [],
            "body": {
              "id": 36130,
              "nodeType": "Block",
              "src": "24627:210:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 36110,
                      "name": "cachedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35019,
                      "src": "24641:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 36112,
                    "indexExpression": {
                      "id": 36111,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36105,
                      "src": "24659:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24641:29:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36115,
                  "nodeType": "IfStatement",
                  "src": "24637:46:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 36113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24679:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 36109,
                    "id": 36114,
                    "nodeType": "Return",
                    "src": "24672:11:51"
                  }
                },
                {
                  "expression": {
                    "id": 36124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 36116,
                        "name": "cachedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35019,
                        "src": "24693:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 36118,
                      "indexExpression": {
                        "id": 36117,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36105,
                        "src": "24711:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24693:29:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36122,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36105,
                          "src": "24773:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 36119,
                            "name": "_getIdentifierWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35925,
                            "src": "24725:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IdentifierWhitelistInterface_$34459_$",
                              "typeString": "function () view returns (contract IdentifierWhitelistInterface)"
                            }
                          },
                          "id": 36120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24725:25:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$34459",
                            "typeString": "contract IdentifierWhitelistInterface"
                          }
                        },
                        "id": 36121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "24751:21:51",
                        "memberName": "isIdentifierSupported",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34458,
                        "src": "24725:47:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32) view external returns (bool)"
                        }
                      },
                      "id": 36123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24725:59:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "24693:91:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36125,
                  "nodeType": "ExpressionStatement",
                  "src": "24693:91:51"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 36126,
                      "name": "cachedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35019,
                      "src": "24801:17:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 36128,
                    "indexExpression": {
                      "id": 36127,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36105,
                      "src": "24819:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24801:29:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 36109,
                  "id": 36129,
                  "nodeType": "Return",
                  "src": "24794:36:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateAndCacheIdentifier",
            "nameLocation": "24555:27:51",
            "parameters": {
              "id": 36106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36105,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "24591:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36131,
                  "src": "24583:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36104,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24583:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24582:20:51"
            },
            "returnParameters": {
              "id": 36109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36131,
                  "src": "24621:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36107,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24621:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24620:6:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 36174,
            "nodeType": "FunctionDefinition",
            "src": "25056:404:51",
            "nodes": [],
            "body": {
              "id": 36173,
              "nodeType": "Block",
              "src": "25133:327:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 36138,
                        "name": "cachedCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35015,
                        "src": "25147:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$37481_storage_$",
                          "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                        }
                      },
                      "id": 36140,
                      "indexExpression": {
                        "id": 36139,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36133,
                        "src": "25164:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25147:26:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WhitelistedCurrency_$37481_storage",
                        "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                      }
                    },
                    "id": 36141,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "25174:13:51",
                    "memberName": "isWhitelisted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37478,
                    "src": "25147:40:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36144,
                  "nodeType": "IfStatement",
                  "src": "25143:57:51",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 36142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25196:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 36137,
                    "id": 36143,
                    "nodeType": "Return",
                    "src": "25189:11:51"
                  }
                },
                {
                  "expression": {
                    "id": 36154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 36145,
                          "name": "cachedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35015,
                          "src": "25210:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$37481_storage_$",
                            "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                          }
                        },
                        "id": 36147,
                        "indexExpression": {
                          "id": 36146,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36133,
                          "src": "25227:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25210:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WhitelistedCurrency_$37481_storage",
                          "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                        }
                      },
                      "id": 36148,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "25237:13:51",
                      "memberName": "isWhitelisted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37478,
                      "src": "25210:40:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36152,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36133,
                          "src": "25293:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 36149,
                            "name": "_getCollateralWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35910,
                            "src": "25253:23:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AddressWhitelist_$30483_$",
                              "typeString": "function () view returns (contract AddressWhitelist)"
                            }
                          },
                          "id": 36150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25253:25:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AddressWhitelist_$30483",
                            "typeString": "contract AddressWhitelist"
                          }
                        },
                        "id": 36151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25279:13:51",
                        "memberName": "isOnWhitelist",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30393,
                        "src": "25253:39:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 36153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25253:49:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25210:92:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36155,
                  "nodeType": "ExpressionStatement",
                  "src": "25210:92:51"
                },
                {
                  "expression": {
                    "id": 36166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 36156,
                          "name": "cachedCurrencies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35015,
                          "src": "25312:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$37481_storage_$",
                            "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                          }
                        },
                        "id": 36158,
                        "indexExpression": {
                          "id": 36157,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36133,
                          "src": "25329:8:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25312:26:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WhitelistedCurrency_$37481_storage",
                          "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                        }
                      },
                      "id": 36159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "25339:8:51",
                      "memberName": "finalFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37480,
                      "src": "25312:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 36163,
                            "name": "currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36133,
                            "src": "25378:8:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 36160,
                              "name": "_getStore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35940,
                              "src": "25350:9:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_StoreInterface_$34542_$",
                                "typeString": "function () view returns (contract StoreInterface)"
                              }
                            },
                            "id": 36161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25350:11:51",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StoreInterface_$34542",
                              "typeString": "contract StoreInterface"
                            }
                          },
                          "id": 36162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "25362:15:51",
                          "memberName": "computeFinalFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34541,
                          "src": "25350:27:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_Unsigned_$31133_memory_ptr_$",
                            "typeString": "function (address) view external returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 36164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25350:37:51",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$31133_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 36165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "25388:8:51",
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31132,
                      "src": "25350:46:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25312:84:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 36167,
                  "nodeType": "ExpressionStatement",
                  "src": "25312:84:51"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 36168,
                        "name": "cachedCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35015,
                        "src": "25413:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistedCurrency_$37481_storage_$",
                          "typeString": "mapping(address => struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref)"
                        }
                      },
                      "id": 36170,
                      "indexExpression": {
                        "id": 36169,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36133,
                        "src": "25430:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25413:26:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_WhitelistedCurrency_$37481_storage",
                        "typeString": "struct OptimisticOracleV3Interface.WhitelistedCurrency storage ref"
                      }
                    },
                    "id": 36171,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "25440:13:51",
                    "memberName": "isWhitelisted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37478,
                    "src": "25413:40:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 36137,
                  "id": 36172,
                  "nodeType": "Return",
                  "src": "25406:47:51"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateAndCacheCurrency",
            "nameLocation": "25065:25:51",
            "parameters": {
              "id": 36134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36133,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "25099:8:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36174,
                  "src": "25091:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25091:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25090:18:51"
            },
            "returnParameters": {
              "id": 36137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36174,
                  "src": "25127:4:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25127:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25126:6:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 36225,
            "nodeType": "FunctionDefinition",
            "src": "25566:492:51",
            "nodes": [],
            "body": {
              "id": 36224,
              "nodeType": "Block",
              "src": "25658:400:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    36182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36182,
                      "mutability": "mutable",
                      "name": "cr",
                      "nameLocation": "25676:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36224,
                      "src": "25668:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36181,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25668:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36187,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 36183,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35024,
                        "src": "25681:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                          "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                        }
                      },
                      "id": 36185,
                      "indexExpression": {
                        "id": 36184,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36176,
                        "src": "25692:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25681:23:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                      }
                    },
                    "id": 36186,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "25705:17:51",
                    "memberName": "callbackRecipient",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37473,
                    "src": "25681:41:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25668:54:51"
                },
                {
                  "assignments": [
                    36189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36189,
                      "mutability": "mutable",
                      "name": "em",
                      "nameLocation": "25740:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36224,
                      "src": "25732:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36188,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25732:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36193,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36191,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36176,
                        "src": "25767:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 36190,
                      "name": "_getEscalationManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36023,
                      "src": "25745:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view returns (address)"
                      }
                    },
                    "id": 36192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25745:34:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25732:47:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 36199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 36194,
                      "name": "cr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36182,
                      "src": "25793:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 36197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25807:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 36196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25799:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 36195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25799:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 36198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25799:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25793:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36208,
                  "nodeType": "IfStatement",
                  "src": "25789:141:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 36204,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36176,
                          "src": "25898:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 36205,
                          "name": "assertedTruthfully",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36178,
                          "src": "25911:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 36201,
                              "name": "cr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36182,
                              "src": "25868:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 36200,
                            "name": "OptimisticOracleV3CallbackRecipientInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37434,
                            "src": "25823:44:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3CallbackRecipientInterface_$37434_$",
                              "typeString": "type(contract OptimisticOracleV3CallbackRecipientInterface)"
                            }
                          },
                          "id": 36202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25823:48:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3CallbackRecipientInterface_$37434",
                            "typeString": "contract OptimisticOracleV3CallbackRecipientInterface"
                          }
                        },
                        "id": 36203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25872:25:51",
                        "memberName": "assertionResolvedCallback",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37427,
                        "src": "25823:74:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                          "typeString": "function (bytes32,bool) external"
                        }
                      },
                      "id": 36206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25823:107:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 36207,
                    "nodeType": "ExpressionStatement",
                    "src": "25823:107:51"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 36214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 36209,
                      "name": "em",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36189,
                      "src": "25944:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 36212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25958:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 36211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25950:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 36210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25950:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 36213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25950:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25944:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36223,
                  "nodeType": "IfStatement",
                  "src": "25940:111:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 36219,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36176,
                          "src": "26019:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 36220,
                          "name": "assertedTruthfully",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36178,
                          "src": "26032:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 36216,
                              "name": "em",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36189,
                              "src": "25989:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 36215,
                            "name": "EscalationManagerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37416,
                            "src": "25962:26:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_EscalationManagerInterface_$37416_$",
                              "typeString": "type(contract EscalationManagerInterface)"
                            }
                          },
                          "id": 36217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25962:30:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EscalationManagerInterface_$37416",
                            "typeString": "contract EscalationManagerInterface"
                          }
                        },
                        "id": 36218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25993:25:51",
                        "memberName": "assertionResolvedCallback",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37427,
                        "src": "25962:56:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                          "typeString": "function (bytes32,bool) external"
                        }
                      },
                      "id": 36221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25962:89:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 36222,
                    "nodeType": "ExpressionStatement",
                    "src": "25962:89:51"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callbackOnAssertionResolve",
            "nameLocation": "25575:27:51",
            "parameters": {
              "id": 36179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36176,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "25611:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36225,
                  "src": "25603:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36175,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25603:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36178,
                  "mutability": "mutable",
                  "name": "assertedTruthfully",
                  "nameLocation": "25629:18:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36225,
                  "src": "25624:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36177,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25624:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25602:46:51"
            },
            "returnParameters": {
              "id": 36180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25658:0:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 36272,
            "nodeType": "FunctionDefinition",
            "src": "26164:415:51",
            "nodes": [],
            "body": {
              "id": 36271,
              "nodeType": "Block",
              "src": "26231:348:51",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    36231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36231,
                      "mutability": "mutable",
                      "name": "cr",
                      "nameLocation": "26249:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36271,
                      "src": "26241:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36230,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26241:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36236,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 36232,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35024,
                        "src": "26254:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$37476_storage_$",
                          "typeString": "mapping(bytes32 => struct OptimisticOracleV3Interface.Assertion storage ref)"
                        }
                      },
                      "id": 36234,
                      "indexExpression": {
                        "id": 36233,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36227,
                        "src": "26265:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26254:23:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$37476_storage",
                        "typeString": "struct OptimisticOracleV3Interface.Assertion storage ref"
                      }
                    },
                    "id": 36235,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "26278:17:51",
                    "memberName": "callbackRecipient",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37473,
                    "src": "26254:41:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26241:54:51"
                },
                {
                  "assignments": [
                    36238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36238,
                      "mutability": "mutable",
                      "name": "em",
                      "nameLocation": "26313:2:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 36271,
                      "src": "26305:10:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36237,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26305:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36242,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36240,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36227,
                        "src": "26340:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 36239,
                      "name": "_getEscalationManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36023,
                      "src": "26318:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view returns (address)"
                      }
                    },
                    "id": 36241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26318:34:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26305:47:51"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 36248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 36243,
                      "name": "cr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36231,
                      "src": "26366:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 36246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26380:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 36245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26372:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 36244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26372:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 36247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26372:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26366:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36256,
                  "nodeType": "IfStatement",
                  "src": "26362:109:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 36253,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36227,
                          "src": "26459:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 36250,
                              "name": "cr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36231,
                              "src": "26429:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 36249,
                            "name": "OptimisticOracleV3CallbackRecipientInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37434,
                            "src": "26384:44:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OptimisticOracleV3CallbackRecipientInterface_$37434_$",
                              "typeString": "type(contract OptimisticOracleV3CallbackRecipientInterface)"
                            }
                          },
                          "id": 36251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26384:48:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimisticOracleV3CallbackRecipientInterface_$37434",
                            "typeString": "contract OptimisticOracleV3CallbackRecipientInterface"
                          }
                        },
                        "id": 36252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26433:25:51",
                        "memberName": "assertionDisputedCallback",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37433,
                        "src": "26384:74:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32) external"
                        }
                      },
                      "id": 36254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26384:87:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 36255,
                    "nodeType": "ExpressionStatement",
                    "src": "26384:87:51"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 36262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 36257,
                      "name": "em",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36238,
                      "src": "26485:2:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 36260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26499:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 36259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26491:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 36258,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26491:7:51",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 36261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26491:10:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "26485:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36270,
                  "nodeType": "IfStatement",
                  "src": "26481:91:51",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 36267,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36227,
                          "src": "26560:11:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 36264,
                              "name": "em",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36238,
                              "src": "26530:2:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 36263,
                            "name": "EscalationManagerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37416,
                            "src": "26503:26:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_EscalationManagerInterface_$37416_$",
                              "typeString": "type(contract EscalationManagerInterface)"
                            }
                          },
                          "id": 36265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26503:30:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EscalationManagerInterface_$37416",
                            "typeString": "contract EscalationManagerInterface"
                          }
                        },
                        "id": 36266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26534:25:51",
                        "memberName": "assertionDisputedCallback",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37433,
                        "src": "26503:56:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32) external"
                        }
                      },
                      "id": 36268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26503:69:51",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 36269,
                    "nodeType": "ExpressionStatement",
                    "src": "26503:69:51"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callbackOnAssertionDispute",
            "nameLocation": "26173:27:51",
            "parameters": {
              "id": 36228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36227,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "26209:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 36272,
                  "src": "26201:19:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36226,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26201:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26200:21:51"
            },
            "returnParameters": {
              "id": 36229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26231:0:51"
            },
            "scope": 36273,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34994,
              "name": "OptimisticOracleV3Interface",
              "nameLocations": [
                "1581:27:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37624,
              "src": "1581:27:51"
            },
            "id": 34995,
            "nodeType": "InheritanceSpecifier",
            "src": "1581:27:51"
          },
          {
            "baseName": {
              "id": 34996,
              "name": "Lockable",
              "nameLocations": [
                "1610:8:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32824,
              "src": "1610:8:51"
            },
            "id": 34997,
            "nodeType": "InheritanceSpecifier",
            "src": "1610:8:51"
          },
          {
            "baseName": {
              "id": 34998,
              "name": "Ownable",
              "nameLocations": [
                "1620:7:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28530,
              "src": "1620:7:51"
            },
            "id": 34999,
            "nodeType": "InheritanceSpecifier",
            "src": "1620:7:51"
          },
          {
            "baseName": {
              "id": 35000,
              "name": "MultiCaller",
              "nameLocations": [
                "1629:11:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32903,
              "src": "1629:11:51"
            },
            "id": 35001,
            "nodeType": "InheritanceSpecifier",
            "src": "1629:11:51"
          }
        ],
        "canonicalName": "OptimisticOracleV3",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34993,
          "nodeType": "StructuredDocumentation",
          "src": "988:560:51",
          "text": " @title Optimistic Oracle V3.\n @notice The OOv3 is used to assert truths about the world which are verified using an optimistic escalation game.\n @dev Core idea: an asserter makes a statement about a truth, calling \"assertTruth\". If this statement is not\n challenged, it is taken as the state of the world. If challenged, it is arbitrated using the UMA DVM, or if\n configured, an escalation manager. Escalation managers enable integrations to define their own security properties and\n tradeoffs, enabling the notion of \"sovereign security\"."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          36273,
          32903,
          28530,
          29889,
          32824,
          37624
        ],
        "name": "OptimisticOracleV3",
        "nameLocation": "1559:18:51",
        "scope": 36274,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 51
}